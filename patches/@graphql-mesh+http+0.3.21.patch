diff --git a/node_modules/@graphql-mesh/http/esm/index.js b/node_modules/@graphql-mesh/http/esm/index.js
index 5e35727..7feaec4 100644
--- a/node_modules/@graphql-mesh/http/esm/index.js
+++ b/node_modules/@graphql-mesh/http/esm/index.js
@@ -1,4 +1,5 @@
-import { fs, path } from '@graphql-mesh/cross-helpers';
+// import { fs } from '@graphql-mesh/cross-helpers';
+// import path from 'path-browserify';
 import { DefaultLogger, pathExists, withCookies } from '@graphql-mesh/utils';
 import { createRouter, Response } from '@whatwg-node/router';
 import { graphqlHandler } from './graphqlHandler.js';
@@ -44,23 +45,23 @@ export function createMeshHTTPHandler({ baseDir, getBuiltMesh, rawServeConfig =
         }
         return undefined;
     });
-    if (staticFiles) {
-        router.get('/:relativePath+', async (request) => {
-            let { relativePath } = request.params;
-            if (!relativePath) {
-                relativePath = 'index.html';
-            }
-            const absoluteStaticFilesPath = path.join(baseDir, staticFiles);
-            const absolutePath = path.join(absoluteStaticFilesPath, relativePath);
-            if (absolutePath.startsWith(absoluteStaticFilesPath) && (await pathExists(absolutePath))) {
-                const readStream = fs.createReadStream(absolutePath);
-                return new Response(readStream, {
-                    status: 200,
-                });
-            }
-            return undefined;
-        });
-    }
+    // if (staticFiles) {
+    //     router.get('/:relativePath+', async (request) => {
+    //         let { relativePath } = request.params;
+    //         if (!relativePath) {
+    //             relativePath = 'index.html';
+    //         }
+    //         const absoluteStaticFilesPath = path.join(baseDir, staticFiles);
+    //         const absolutePath = path.join(absoluteStaticFilesPath, relativePath);
+    //         if (absolutePath.startsWith(absoluteStaticFilesPath) && (await pathExists(absolutePath))) {
+    //             const readStream = fs.createReadStream(absolutePath);
+    //             return new Response(readStream, {
+    //                 status: 200,
+    //             });
+    //         }
+    //         return undefined;
+    //     });
+    // }
     else if (graphqlPath !== '/') {
         router.get('/', () => new Response(null, {
             status: 302,
