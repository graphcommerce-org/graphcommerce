// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

export const AccountAddressFragmentDoc: DocumentNode<AccountAddressFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'AccountAddress' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'CustomerAddress' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'default_billing' } },
          { kind: 'Field', name: { kind: 'Name', value: 'default_shipping' } },
          { kind: 'Field', name: { kind: 'Name', value: 'country_code' } },
          { kind: 'Field', name: { kind: 'Name', value: 'city' } },
          { kind: 'Field', name: { kind: 'Name', value: 'firstname' } },
          { kind: 'Field', name: { kind: 'Name', value: 'middlename' } },
          { kind: 'Field', name: { kind: 'Name', value: 'lastname' } },
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'postcode' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'region' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'region' } },
                { kind: 'Field', name: { kind: 'Name', value: 'region_code' } },
                { kind: 'Field', name: { kind: 'Name', value: 'region_id' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'street' } },
        ],
      },
    },
  ],
}
export type AccountAddressFragment = Pick<
  Types.CustomerAddress,
  | 'default_billing'
  | 'default_shipping'
  | 'country_code'
  | 'city'
  | 'firstname'
  | 'middlename'
  | 'lastname'
  | 'id'
  | 'postcode'
  | 'street'
> & {
  region?: Types.Maybe<Pick<Types.CustomerAddressRegion, 'region' | 'region_code' | 'region_id'>>
}
