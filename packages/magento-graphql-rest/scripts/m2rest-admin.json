{
  "openapi": "3.0.0",
  "info": {
    "version": "2.4.7",
    "title": "Commerce Admin REST endpoints - All inclusive",
    "description": "The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.\n\nYou can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.\n"
  },
  "tags": [
    {
      "name": "addresses/{addressId}"
    },
    {
      "name": "adobe_io_events/check_configuration"
    },
    {
      "name": "adobestock/asset/{id}"
    },
    {
      "name": "adobestock/asset/list"
    },
    {
      "name": "adobestock/asset/search"
    },
    {
      "name": "adobestock/search"
    },
    {
      "name": "analytics/link"
    },
    {
      "name": "applepay/auth"
    },
    {
      "name": "attributeMetadata/customer"
    },
    {
      "name": "attributeMetadata/customer/attribute/{attributeCode}"
    },
    {
      "name": "attributeMetadata/customer/custom"
    },
    {
      "name": "attributeMetadata/customer/form/{formCode}"
    },
    {
      "name": "attributeMetadata/customerAddress"
    },
    {
      "name": "attributeMetadata/customerAddress/attribute/{attributeCode}"
    },
    {
      "name": "attributeMetadata/customerAddress/custom"
    },
    {
      "name": "attributeMetadata/customerAddress/form/{formCode}"
    },
    {
      "name": "braintree/mine/payment/vault"
    },
    {
      "name": "bulk"
    },
    {
      "name": "bulk/{bulkUuid}/detailed-status"
    },
    {
      "name": "bulk/{bulkUuid}/operation-status/{status}"
    },
    {
      "name": "bulk/{bulkUuid}/status"
    },
    {
      "name": "bundle-products/{productSku}/children"
    },
    {
      "name": "bundle-products/{sku}/links/{id}"
    },
    {
      "name": "bundle-products/{sku}/links/{optionId}"
    },
    {
      "name": "bundle-products/{sku}/options/{optionId}"
    },
    {
      "name": "bundle-products/{sku}/options/{optionId}/children/{childSku}"
    },
    {
      "name": "bundle-products/{sku}/options/all"
    },
    {
      "name": "bundle-products/options/{optionId}"
    },
    {
      "name": "bundle-products/options/add"
    },
    {
      "name": "bundle-products/options/types"
    },
    {
      "name": "carts/"
    },
    {
      "name": "carts/{cartId}"
    },
    {
      "name": "carts/{cartId}/billing-address"
    },
    {
      "name": "carts/{cartId}/coupons"
    },
    {
      "name": "carts/{cartId}/coupons/{couponCode}"
    },
    {
      "name": "carts/{cartId}/coupons/deleteByCodes"
    },
    {
      "name": "carts/{cartId}/estimate-shipping-methods"
    },
    {
      "name": "carts/{cartId}/estimate-shipping-methods-by-address-id"
    },
    {
      "name": "carts/{cartId}/gift-message"
    },
    {
      "name": "carts/{cartId}/gift-message/{itemId}"
    },
    {
      "name": "carts/{cartId}/giftCards"
    },
    {
      "name": "carts/{cartId}/giftCards/{giftCardCode}"
    },
    {
      "name": "carts/{cartId}/items"
    },
    {
      "name": "carts/{cartId}/items/{itemId}"
    },
    {
      "name": "carts/{cartId}/order"
    },
    {
      "name": "carts/{cartId}/payment-methods"
    },
    {
      "name": "carts/{cartId}/selected-payment-method"
    },
    {
      "name": "carts/{cartId}/shipping-information"
    },
    {
      "name": "carts/{cartId}/shipping-methods"
    },
    {
      "name": "carts/{cartId}/totals"
    },
    {
      "name": "carts/{cartId}/totals-information"
    },
    {
      "name": "carts/{quoteId}/giftCards"
    },
    {
      "name": "carts/{quoteId}/items"
    },
    {
      "name": "carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}"
    },
    {
      "name": "carts/guest-carts/{cartId}/giftCards"
    },
    {
      "name": "carts/guest-carts/{cartId}/giftCards/{giftCardCode}"
    },
    {
      "name": "carts/licence"
    },
    {
      "name": "carts/licence/list"
    },
    {
      "name": "carts/mine"
    },
    {
      "name": "carts/mine/balance/apply"
    },
    {
      "name": "carts/mine/billing-address"
    },
    {
      "name": "carts/mine/checkGiftCard/{giftCardCode}"
    },
    {
      "name": "carts/mine/collect-totals"
    },
    {
      "name": "carts/mine/coupons"
    },
    {
      "name": "carts/mine/coupons/{couponCode}"
    },
    {
      "name": "carts/mine/coupons/deleteByCodes"
    },
    {
      "name": "carts/mine/estimate-shipping-methods"
    },
    {
      "name": "carts/mine/estimate-shipping-methods-by-address-id"
    },
    {
      "name": "carts/mine/gift-message"
    },
    {
      "name": "carts/mine/gift-message/{itemId}"
    },
    {
      "name": "carts/mine/giftCards"
    },
    {
      "name": "carts/mine/giftCards/{giftCardCode}"
    },
    {
      "name": "carts/mine/items"
    },
    {
      "name": "carts/mine/items/{itemId}"
    },
    {
      "name": "carts/mine/order"
    },
    {
      "name": "carts/mine/payment-information"
    },
    {
      "name": "carts/mine/payment-methods"
    },
    {
      "name": "carts/mine/payment-order"
    },
    {
      "name": "carts/mine/payment-order/{id}"
    },
    {
      "name": "carts/mine/po-payment-information"
    },
    {
      "name": "carts/mine/selected-payment-method"
    },
    {
      "name": "carts/mine/set-payment-information"
    },
    {
      "name": "carts/mine/shipping-information"
    },
    {
      "name": "carts/mine/shipping-methods"
    },
    {
      "name": "carts/mine/totals"
    },
    {
      "name": "carts/mine/totals-information"
    },
    {
      "name": "carts/search"
    },
    {
      "name": "categories"
    },
    {
      "name": "categories/{categoryId}"
    },
    {
      "name": "categories/{categoryId}/move"
    },
    {
      "name": "categories/{categoryId}/products"
    },
    {
      "name": "categories/{categoryId}/products/{sku}"
    },
    {
      "name": "categories/{id}"
    },
    {
      "name": "categories/attributes"
    },
    {
      "name": "categories/attributes/{attributeCode}"
    },
    {
      "name": "categories/attributes/{attributeCode}/options"
    },
    {
      "name": "categories/list"
    },
    {
      "name": "cmsBlock"
    },
    {
      "name": "cmsBlock/{blockId}"
    },
    {
      "name": "cmsBlock/{id}"
    },
    {
      "name": "cmsBlock/search"
    },
    {
      "name": "cmsPage"
    },
    {
      "name": "cmsPage/{id}"
    },
    {
      "name": "cmsPage/{pageId}"
    },
    {
      "name": "cmsPage/search"
    },
    {
      "name": "company/"
    },
    {
      "name": "company/{companyId}"
    },
    {
      "name": "company/assignRoles"
    },
    {
      "name": "company/role/"
    },
    {
      "name": "company/role/{id}"
    },
    {
      "name": "company/role/{roleId}"
    },
    {
      "name": "company/role/{roleId}/users"
    },
    {
      "name": "companyCredits/"
    },
    {
      "name": "companyCredits/{creditId}"
    },
    {
      "name": "companyCredits/{creditId}/decreaseBalance"
    },
    {
      "name": "companyCredits/{creditId}/increaseBalance"
    },
    {
      "name": "companyCredits/{id}"
    },
    {
      "name": "companyCredits/company/{companyId}"
    },
    {
      "name": "companyCredits/history"
    },
    {
      "name": "companyCredits/history/{historyId}"
    },
    {
      "name": "configurable-products/{sku}/child"
    },
    {
      "name": "configurable-products/{sku}/children"
    },
    {
      "name": "configurable-products/{sku}/children/{childSku}"
    },
    {
      "name": "configurable-products/{sku}/options"
    },
    {
      "name": "configurable-products/{sku}/options/{id}"
    },
    {
      "name": "configurable-products/{sku}/options/all"
    },
    {
      "name": "configurable-products/variation"
    },
    {
      "name": "coupons"
    },
    {
      "name": "coupons/{couponId}"
    },
    {
      "name": "coupons/deleteByCodes"
    },
    {
      "name": "coupons/deleteByIds"
    },
    {
      "name": "coupons/generate"
    },
    {
      "name": "coupons/search"
    },
    {
      "name": "creditmemo"
    },
    {
      "name": "creditmemo/{id}"
    },
    {
      "name": "creditmemo/{id}/comments"
    },
    {
      "name": "creditmemo/{id}/emails"
    },
    {
      "name": "creditmemo/refund"
    },
    {
      "name": "creditmemos"
    },
    {
      "name": "customerGroups"
    },
    {
      "name": "customerGroups/{id}"
    },
    {
      "name": "customerGroups/{id}/permissions"
    },
    {
      "name": "customerGroups/default"
    },
    {
      "name": "customerGroups/default/{id}"
    },
    {
      "name": "customerGroups/default/{storeId}"
    },
    {
      "name": "customerGroups/search"
    },
    {
      "name": "customers"
    },
    {
      "name": "customers/{customerId}"
    },
    {
      "name": "customers/{customerId}/billingAddress"
    },
    {
      "name": "customers/{customerId}/carts"
    },
    {
      "name": "customers/{customerId}/confirm"
    },
    {
      "name": "customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}"
    },
    {
      "name": "customers/{customerId}/permissions/readonly"
    },
    {
      "name": "customers/{customerId}/shippingAddress"
    },
    {
      "name": "customers/{email}/activate"
    },
    {
      "name": "customers/addresses/{addressId}"
    },
    {
      "name": "customers/confirm"
    },
    {
      "name": "customers/isEmailAvailable"
    },
    {
      "name": "customers/me"
    },
    {
      "name": "customers/me/activate"
    },
    {
      "name": "customers/me/billingAddress"
    },
    {
      "name": "customers/me/password"
    },
    {
      "name": "customers/me/shippingAddress"
    },
    {
      "name": "customers/password"
    },
    {
      "name": "customers/resetPassword"
    },
    {
      "name": "customers/search"
    },
    {
      "name": "customers/validate"
    },
    {
      "name": "directory/countries"
    },
    {
      "name": "directory/countries/{countryId}"
    },
    {
      "name": "directory/currency"
    },
    {
      "name": "eav/attribute-sets"
    },
    {
      "name": "eav/attribute-sets/{attributeSetId}"
    },
    {
      "name": "eav/attribute-sets/list"
    },
    {
      "name": "eventing/eventSubscribe"
    },
    {
      "name": "eventing/updateConfiguration"
    },
    {
      "name": "gift-wrappings"
    },
    {
      "name": "gift-wrappings/{id}"
    },
    {
      "name": "gift-wrappings/{wrappingId}"
    },
    {
      "name": "giftregistry/mine/estimate-shipping-methods"
    },
    {
      "name": "guest-carts"
    },
    {
      "name": "guest-carts/{cartId}"
    },
    {
      "name": "guest-carts/{cartId}/billing-address"
    },
    {
      "name": "guest-carts/{cartId}/collect-totals"
    },
    {
      "name": "guest-carts/{cartId}/coupons"
    },
    {
      "name": "guest-carts/{cartId}/coupons/{couponCode}"
    },
    {
      "name": "guest-carts/{cartId}/estimate-shipping-methods"
    },
    {
      "name": "guest-carts/{cartId}/gift-message"
    },
    {
      "name": "guest-carts/{cartId}/gift-message/{itemId}"
    },
    {
      "name": "guest-carts/{cartId}/items"
    },
    {
      "name": "guest-carts/{cartId}/items/{itemId}"
    },
    {
      "name": "guest-carts/{cartId}/order"
    },
    {
      "name": "guest-carts/{cartId}/payment-information"
    },
    {
      "name": "guest-carts/{cartId}/payment-methods"
    },
    {
      "name": "guest-carts/{cartId}/payment-order"
    },
    {
      "name": "guest-carts/{cartId}/payment-order/{id}"
    },
    {
      "name": "guest-carts/{cartId}/selected-payment-method"
    },
    {
      "name": "guest-carts/{cartId}/set-payment-information"
    },
    {
      "name": "guest-carts/{cartId}/shipping-information"
    },
    {
      "name": "guest-carts/{cartId}/shipping-methods"
    },
    {
      "name": "guest-carts/{cartId}/totals"
    },
    {
      "name": "guest-carts/{cartId}/totals-information"
    },
    {
      "name": "guest-giftregistry/{cartId}/estimate-shipping-methods"
    },
    {
      "name": "hierarchy/{id}"
    },
    {
      "name": "hierarchy/move/{id}"
    },
    {
      "name": "import/csv"
    },
    {
      "name": "import/json"
    },
    {
      "name": "integration/admin/token"
    },
    {
      "name": "integration/customer/revoke-customer-token"
    },
    {
      "name": "integration/customer/token"
    },
    {
      "name": "inventory/are-product-salable-for-requested-qty/"
    },
    {
      "name": "inventory/are-products-salable"
    },
    {
      "name": "inventory/bulk-partial-source-transfer"
    },
    {
      "name": "inventory/bulk-product-source-assign"
    },
    {
      "name": "inventory/bulk-product-source-transfer"
    },
    {
      "name": "inventory/bulk-product-source-unassign"
    },
    {
      "name": "inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}"
    },
    {
      "name": "inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}"
    },
    {
      "name": "inventory/get-distance"
    },
    {
      "name": "inventory/get-distance-provider-code"
    },
    {
      "name": "inventory/get-latlng-from-address"
    },
    {
      "name": "inventory/get-latslngs-from-address"
    },
    {
      "name": "inventory/get-product-salable-quantity/{sku}/{stockId}"
    },
    {
      "name": "inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}"
    },
    {
      "name": "inventory/in-store-pickup/pickup-locations/"
    },
    {
      "name": "inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}"
    },
    {
      "name": "inventory/is-product-salable/{sku}/{stockId}"
    },
    {
      "name": "inventory/low-quantity-notification"
    },
    {
      "name": "inventory/low-quantity-notification/{sourceCode}/{sku}"
    },
    {
      "name": "inventory/low-quantity-notifications-delete"
    },
    {
      "name": "inventory/source-items"
    },
    {
      "name": "inventory/source-items-delete"
    },
    {
      "name": "inventory/source-selection-algorithm-list"
    },
    {
      "name": "inventory/source-selection-algorithm-result"
    },
    {
      "name": "inventory/sources"
    },
    {
      "name": "inventory/sources/{sourceCode}"
    },
    {
      "name": "inventory/stock-resolver/{type}/{code}"
    },
    {
      "name": "inventory/stock-source-links"
    },
    {
      "name": "inventory/stock-source-links-delete"
    },
    {
      "name": "inventory/stocks"
    },
    {
      "name": "inventory/stocks/{stockId}"
    },
    {
      "name": "invoice/{invoiceId}/refund"
    },
    {
      "name": "invoices"
    },
    {
      "name": "invoices/"
    },
    {
      "name": "invoices/{id}"
    },
    {
      "name": "invoices/{id}/capture"
    },
    {
      "name": "invoices/{id}/comments"
    },
    {
      "name": "invoices/{id}/emails"
    },
    {
      "name": "invoices/{id}/void"
    },
    {
      "name": "invoices/comments"
    },
    {
      "name": "modules"
    },
    {
      "name": "negotiable-cart-item-note"
    },
    {
      "name": "negotiable-cart-item-note/{noteId}"
    },
    {
      "name": "negotiable-cart-item-note/search"
    },
    {
      "name": "negotiable-carts/{cartId}/billing-address"
    },
    {
      "name": "negotiable-carts/{cartId}/coupons"
    },
    {
      "name": "negotiable-carts/{cartId}/coupons/{couponCode}"
    },
    {
      "name": "negotiable-carts/{cartId}/estimate-shipping-methods"
    },
    {
      "name": "negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id"
    },
    {
      "name": "negotiable-carts/{cartId}/giftCards"
    },
    {
      "name": "negotiable-carts/{cartId}/giftCards/{giftCardCode}"
    },
    {
      "name": "negotiable-carts/{cartId}/payment-information"
    },
    {
      "name": "negotiable-carts/{cartId}/set-payment-information"
    },
    {
      "name": "negotiable-carts/{cartId}/shipping-information"
    },
    {
      "name": "negotiable-carts/{cartId}/totals"
    },
    {
      "name": "negotiableQuote/{quoteId}"
    },
    {
      "name": "negotiableQuote/{quoteId}/comments"
    },
    {
      "name": "negotiableQuote/{quoteId}/shippingMethod"
    },
    {
      "name": "negotiableQuote/attachmentContent"
    },
    {
      "name": "negotiableQuote/decline"
    },
    {
      "name": "negotiableQuote/draft"
    },
    {
      "name": "negotiableQuote/pricesUpdated"
    },
    {
      "name": "negotiableQuote/request"
    },
    {
      "name": "negotiableQuote/submitToCustomer"
    },
    {
      "name": "order/{orderId}/invoice"
    },
    {
      "name": "order/{orderId}/refund"
    },
    {
      "name": "order/{orderId}/ship"
    },
    {
      "name": "order/notify-orders-are-ready-for-pickup"
    },
    {
      "name": "orders"
    },
    {
      "name": "orders/{id}"
    },
    {
      "name": "orders/{id}/cancel"
    },
    {
      "name": "orders/{id}/comments"
    },
    {
      "name": "orders/{id}/emails"
    },
    {
      "name": "orders/{id}/hold"
    },
    {
      "name": "orders/{id}/statuses"
    },
    {
      "name": "orders/{id}/unhold"
    },
    {
      "name": "orders/{parent_id}"
    },
    {
      "name": "orders/create"
    },
    {
      "name": "orders/items"
    },
    {
      "name": "orders/items/{id}"
    },
    {
      "name": "payments-config/{location}"
    },
    {
      "name": "payments-config/apple-pay/{location}"
    },
    {
      "name": "payments-config/hosted-fields/{location}"
    },
    {
      "name": "payments-config/smart-buttons/{location}"
    },
    {
      "name": "payments-sdk/{location}"
    },
    {
      "name": "payments-sdk/{location}/{methodCode}"
    },
    {
      "name": "products"
    },
    {
      "name": "products-render-info"
    },
    {
      "name": "products/{productSku}/stockItems/{itemId}"
    },
    {
      "name": "products/{sku}"
    },
    {
      "name": "products/{sku}/downloadable-links"
    },
    {
      "name": "products/{sku}/downloadable-links/{id}"
    },
    {
      "name": "products/{sku}/downloadable-links/samples"
    },
    {
      "name": "products/{sku}/downloadable-links/samples/{id}"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
    },
    {
      "name": "products/{sku}/links"
    },
    {
      "name": "products/{sku}/links/{type}"
    },
    {
      "name": "products/{sku}/links/{type}/{linkedProductSku}"
    },
    {
      "name": "products/{sku}/media"
    },
    {
      "name": "products/{sku}/media/{entryId}"
    },
    {
      "name": "products/{sku}/options"
    },
    {
      "name": "products/{sku}/options/{optionId}"
    },
    {
      "name": "products/{sku}/websites"
    },
    {
      "name": "products/{sku}/websites/{websiteId}"
    },
    {
      "name": "products/attribute-sets"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}/attributes"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}/attributes/{attributeCode}"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}/groups"
    },
    {
      "name": "products/attribute-sets/attributes"
    },
    {
      "name": "products/attribute-sets/groups"
    },
    {
      "name": "products/attribute-sets/groups/{groupId}"
    },
    {
      "name": "products/attribute-sets/groups/list"
    },
    {
      "name": "products/attribute-sets/sets/list"
    },
    {
      "name": "products/attributes"
    },
    {
      "name": "products/attributes/{attributeCode}"
    },
    {
      "name": "products/attributes/{attributeCode}/is-filterable"
    },
    {
      "name": "products/attributes/{attributeCode}/is-filterable/{isFilterable}"
    },
    {
      "name": "products/attributes/{attributeCode}/options"
    },
    {
      "name": "products/attributes/{attributeCode}/options/{optionId}"
    },
    {
      "name": "products/attributes/types"
    },
    {
      "name": "products/base-prices"
    },
    {
      "name": "products/base-prices-information"
    },
    {
      "name": "products/cost"
    },
    {
      "name": "products/cost-delete"
    },
    {
      "name": "products/cost-information"
    },
    {
      "name": "products/downloadable-links/{id}"
    },
    {
      "name": "products/downloadable-links/samples/{id}"
    },
    {
      "name": "products/links/{type}/attributes"
    },
    {
      "name": "products/links/types"
    },
    {
      "name": "products/media/types/{attributeSetName}"
    },
    {
      "name": "products/options"
    },
    {
      "name": "products/options/{optionId}"
    },
    {
      "name": "products/options/types"
    },
    {
      "name": "products/special-price"
    },
    {
      "name": "products/special-price-delete"
    },
    {
      "name": "products/special-price-information"
    },
    {
      "name": "products/tier-prices"
    },
    {
      "name": "products/tier-prices-delete"
    },
    {
      "name": "products/tier-prices-information"
    },
    {
      "name": "products/types"
    },
    {
      "name": "purchase-order-carts/{cartId}/billing-address"
    },
    {
      "name": "purchase-order-carts/{cartId}/estimate-shipping-methods"
    },
    {
      "name": "purchase-order-carts/{cartId}/estimate-shipping-methods-by-address-id"
    },
    {
      "name": "purchase-order-carts/{cartId}/giftCards"
    },
    {
      "name": "purchase-order-carts/{cartId}/giftCards/{giftCardCode}"
    },
    {
      "name": "purchase-order-carts/{cartId}/payment-information"
    },
    {
      "name": "purchase-order-carts/{cartId}/set-payment-information"
    },
    {
      "name": "purchase-order-carts/{cartId}/totals"
    },
    {
      "name": "requisition_lists"
    },
    {
      "name": "returns"
    },
    {
      "name": "returns/{id}"
    },
    {
      "name": "returns/{id}/comments"
    },
    {
      "name": "returns/{id}/labels"
    },
    {
      "name": "returns/{id}/tracking-numbers"
    },
    {
      "name": "returns/{id}/tracking-numbers/{trackId}"
    },
    {
      "name": "returnsAttributeMetadata"
    },
    {
      "name": "returnsAttributeMetadata/{attributeCode}"
    },
    {
      "name": "returnsAttributeMetadata/custom"
    },
    {
      "name": "returnsAttributeMetadata/form/{formCode}"
    },
    {
      "name": "reward/mine/use-reward"
    },
    {
      "name": "salesRules"
    },
    {
      "name": "salesRules/{ruleId}"
    },
    {
      "name": "salesRules/search"
    },
    {
      "name": "search"
    },
    {
      "name": "sharedCatalog"
    },
    {
      "name": "sharedCatalog/"
    },
    {
      "name": "sharedCatalog/{id}"
    },
    {
      "name": "sharedCatalog/{id}/assignCategories"
    },
    {
      "name": "sharedCatalog/{id}/assignProducts"
    },
    {
      "name": "sharedCatalog/{id}/categories"
    },
    {
      "name": "sharedCatalog/{id}/products"
    },
    {
      "name": "sharedCatalog/{id}/unassignCategories"
    },
    {
      "name": "sharedCatalog/{id}/unassignProducts"
    },
    {
      "name": "sharedCatalog/{sharedCatalogId}"
    },
    {
      "name": "sharedCatalog/{sharedCatalogId}/assignCompanies"
    },
    {
      "name": "sharedCatalog/{sharedCatalogId}/assignTierPrices"
    },
    {
      "name": "sharedCatalog/{sharedCatalogId}/companies"
    },
    {
      "name": "sharedCatalog/{sharedCatalogId}/resetTierPrices"
    },
    {
      "name": "sharedCatalog/{sharedCatalogId}/unassignCompanies"
    },
    {
      "name": "shipment/"
    },
    {
      "name": "shipment/{id}"
    },
    {
      "name": "shipment/{id}/comments"
    },
    {
      "name": "shipment/{id}/emails"
    },
    {
      "name": "shipment/{id}/label"
    },
    {
      "name": "shipment/track"
    },
    {
      "name": "shipment/track/{id}"
    },
    {
      "name": "shipments"
    },
    {
      "name": "stockItems/{productSku}"
    },
    {
      "name": "stockItems/lowStock/"
    },
    {
      "name": "stockStatuses/{productSku}"
    },
    {
      "name": "store/storeConfigs"
    },
    {
      "name": "store/storeGroups"
    },
    {
      "name": "store/storeViews"
    },
    {
      "name": "store/websites"
    },
    {
      "name": "taxClasses"
    },
    {
      "name": "taxClasses/{classId}"
    },
    {
      "name": "taxClasses/{taxClassId}"
    },
    {
      "name": "taxClasses/search"
    },
    {
      "name": "taxRates"
    },
    {
      "name": "taxRates/{rateId}"
    },
    {
      "name": "taxRates/search"
    },
    {
      "name": "taxRules"
    },
    {
      "name": "taxRules/{ruleId}"
    },
    {
      "name": "taxRules/search"
    },
    {
      "name": "team/"
    },
    {
      "name": "team/{companyId}"
    },
    {
      "name": "team/{teamId}"
    },
    {
      "name": "tfa/default-provider-code/{userId}"
    },
    {
      "name": "tfa/forced-providers"
    },
    {
      "name": "tfa/installed-providers"
    },
    {
      "name": "tfa/provider/authy/activate"
    },
    {
      "name": "tfa/provider/authy/authenticate"
    },
    {
      "name": "tfa/provider/authy/authenticate-onetouch"
    },
    {
      "name": "tfa/provider/authy/configure"
    },
    {
      "name": "tfa/provider/authy/send-token/{via}"
    },
    {
      "name": "tfa/provider/duo_security/activate"
    },
    {
      "name": "tfa/provider/duo_security/authenticate"
    },
    {
      "name": "tfa/provider/duo_security/configure"
    },
    {
      "name": "tfa/provider/duo_security/get-authentication-data"
    },
    {
      "name": "tfa/provider/google/activate"
    },
    {
      "name": "tfa/provider/google/authenticate"
    },
    {
      "name": "tfa/provider/google/configure"
    },
    {
      "name": "tfa/provider/u2fkey/activate"
    },
    {
      "name": "tfa/provider/u2fkey/authentication-challenge"
    },
    {
      "name": "tfa/provider/u2fkey/configure"
    },
    {
      "name": "tfa/provider/u2fkey/verify"
    },
    {
      "name": "tfa/providers-to-activate/{userId}"
    },
    {
      "name": "tfa/tfat-providers-to-activate"
    },
    {
      "name": "tfa/tfat-user-providers"
    },
    {
      "name": "tfa/user-providers/{userId}"
    },
    {
      "name": "transactions"
    },
    {
      "name": "transactions/{id}"
    }
  ],
  "paths": {
    "/V1/addresses/{addressId}": {
      "delete": {
        "tags": ["addresses/{addressId}"],
        "description": "Delete customer address by ID.",
        "operationId": "DeleteV1AddressesAddressId",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "addresses/{addressId}"
      }
    },
    "/V1/adobe_io_events/check_configuration": {
      "get": {
        "tags": ["adobe_io_events/check_configuration"],
        "description": "Checks configuration and returns success/failure results for each component",
        "operationId": "GetV1Adobe_io_eventsCheck_configuration",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/adobe-io-events-client-configuration-check-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/adobe-io-events-client-configuration-check-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "adobe_io_events/check_configuration"
      }
    },
    "/V1/adobestock/asset/list": {
      "get": {
        "tags": ["adobestock/asset/list"],
        "description": "Search for images based on search criteria",
        "operationId": "GetV1AdobestockAssetList",
        "parameters": [
          {
            "name": "searchCriteria[requestName]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/framework-search-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/framework-search-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "adobestock/asset/list"
      }
    },
    "/V1/adobestock/asset/search": {
      "get": {
        "tags": ["adobestock/asset/search"],
        "description": "Get a list of assets",
        "operationId": "GetV1AdobestockAssetSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/adobe-stock-asset-api-data-asset-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/adobe-stock-asset-api-data-asset-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "adobestock/asset/search"
      }
    },
    "/V1/adobestock/asset/{id}": {
      "delete": {
        "tags": ["adobestock/asset/{id}"],
        "description": "Delete asset",
        "operationId": "DeleteV1AdobestockAssetId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "adobestock/asset/{id}"
      },
      "get": {
        "tags": ["adobestock/asset/{id}"],
        "description": "Get asset by id",
        "operationId": "GetV1AdobestockAssetId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/adobe-stock-asset-api-data-asset-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/adobe-stock-asset-api-data-asset-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "adobestock/asset/{id}"
      }
    },
    "/V1/adobestock/search": {
      "get": {
        "tags": ["adobestock/search"],
        "description": "Search for images based on search criteria",
        "operationId": "GetV1AdobestockSearch",
        "parameters": [
          {
            "name": "searchCriteria[requestName]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/framework-search-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/framework-search-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "adobestock/search"
      }
    },
    "/V1/analytics/link": {
      "get": {
        "tags": ["analytics/link"],
        "description": "",
        "operationId": "GetV1AnalyticsLink",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analytics-data-link-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/analytics-data-link-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "analytics/link"
      }
    },
    "/V1/applepay/auth": {
      "get": {
        "tags": ["applepay/auth"],
        "description": "Returns details required to be able to submit a payment with apple pay.",
        "operationId": "GetV1ApplepayAuth",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pay-pal-braintree-data-auth-data-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/pay-pal-braintree-data-auth-data-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "applepay/auth"
      }
    },
    "/V1/attributeMetadata/customer": {
      "get": {
        "tags": ["attributeMetadata/customer"],
        "description": "Get all attribute metadata.",
        "operationId": "GetV1AttributeMetadataCustomer",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customer"
      }
    },
    "/V1/attributeMetadata/customer/attribute/{attributeCode}": {
      "get": {
        "tags": ["attributeMetadata/customer/attribute/{attributeCode}"],
        "description": "Retrieve attribute metadata.",
        "operationId": "GetV1AttributeMetadataCustomerAttributeAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customer/attribute/{attributeCode}"
      }
    },
    "/V1/attributeMetadata/customer/custom": {
      "get": {
        "tags": ["attributeMetadata/customer/custom"],
        "description": "Get custom attributes metadata for the given data interface.",
        "operationId": "GetV1AttributeMetadataCustomerCustom",
        "parameters": [
          {
            "name": "dataInterfaceName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customer/custom"
      }
    },
    "/V1/attributeMetadata/customer/form/{formCode}": {
      "get": {
        "tags": ["attributeMetadata/customer/form/{formCode}"],
        "description": "Retrieve all attributes filtered by form code",
        "operationId": "GetV1AttributeMetadataCustomerFormFormCode",
        "parameters": [
          {
            "name": "formCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customer/form/{formCode}"
      }
    },
    "/V1/attributeMetadata/customerAddress": {
      "get": {
        "tags": ["attributeMetadata/customerAddress"],
        "description": "Get all attribute metadata.",
        "operationId": "GetV1AttributeMetadataCustomerAddress",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customerAddress"
      }
    },
    "/V1/attributeMetadata/customerAddress/attribute/{attributeCode}": {
      "get": {
        "tags": ["attributeMetadata/customerAddress/attribute/{attributeCode}"],
        "description": "Retrieve attribute metadata.",
        "operationId": "GetV1AttributeMetadataCustomerAddressAttributeAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customerAddress/attribute/{attributeCode}"
      }
    },
    "/V1/attributeMetadata/customerAddress/custom": {
      "get": {
        "tags": ["attributeMetadata/customerAddress/custom"],
        "description": "Get custom attributes metadata for the given data interface.",
        "operationId": "GetV1AttributeMetadataCustomerAddressCustom",
        "parameters": [
          {
            "name": "dataInterfaceName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customerAddress/custom"
      }
    },
    "/V1/attributeMetadata/customerAddress/form/{formCode}": {
      "get": {
        "tags": ["attributeMetadata/customerAddress/form/{formCode}"],
        "description": "Retrieve all attributes filtered by form code",
        "operationId": "GetV1AttributeMetadataCustomerAddressFormFormCode",
        "parameters": [
          {
            "name": "formCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customerAddress/form/{formCode}"
      }
    },
    "/V1/braintree/mine/payment/vault": {
      "post": {
        "tags": ["braintree/mine/payment/vault"],
        "description": "Vault a Payment nonce for a customer. Billing address is optional but advised for Card vaulting.",
        "operationId": "PostV1BraintreeMinePaymentVault",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["payment"],
                "properties": {
                  "payment": {
                    "$ref": "#/components/schemas/pay-pal-braintree-data-payment-interface"
                  },
                  "billingAddress": {
                    "$ref": "#/components/schemas/customer-data-address-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["payment"],
                "properties": {
                  "payment": {
                    "$ref": "#/components/schemas/pay-pal-braintree-data-payment-interface"
                  },
                  "billingAddress": {
                    "$ref": "#/components/schemas/customer-data-address-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "braintree/mine/payment/vault"
      }
    },
    "/V1/bulk": {
      "get": {
        "tags": ["bulk"],
        "description": "Lists the bulk operation items that match specified search criteria.",
        "operationId": "GetV1Bulk",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/asynchronous-operations-data-operation-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/asynchronous-operations-data-operation-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bulk"
      }
    },
    "/V1/bulk/{bulkUuid}/detailed-status": {
      "get": {
        "tags": ["bulk/{bulkUuid}/detailed-status"],
        "description": "Get Bulk summary data with list of operations items full data.",
        "operationId": "GetV1BulkBulkUuidDetailedstatus",
        "parameters": [
          {
            "name": "bulkUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/asynchronous-operations-data-detailed-bulk-operations-status-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/asynchronous-operations-data-detailed-bulk-operations-status-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bulk/{bulkUuid}/detailed-status"
      }
    },
    "/V1/bulk/{bulkUuid}/operation-status/{status}": {
      "get": {
        "tags": ["bulk/{bulkUuid}/operation-status/{status}"],
        "description": "Get operations count by bulk uuid and status.",
        "operationId": "GetV1BulkBulkUuidOperationstatusStatus",
        "parameters": [
          {
            "name": "bulkUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bulk/{bulkUuid}/operation-status/{status}"
      }
    },
    "/V1/bulk/{bulkUuid}/status": {
      "get": {
        "tags": ["bulk/{bulkUuid}/status"],
        "description": "Get Bulk summary data with list of operations items short data.",
        "operationId": "GetV1BulkBulkUuidStatus",
        "parameters": [
          {
            "name": "bulkUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/asynchronous-operations-data-bulk-operations-status-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/asynchronous-operations-data-bulk-operations-status-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bulk/{bulkUuid}/status"
      }
    },
    "/V1/bundle-products/options/add": {
      "post": {
        "tags": ["bundle-products/options/add"],
        "description": "Add new option for bundle product",
        "operationId": "PostV1BundleproductsOptionsAdd",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1BundleproductsOptionsAddPostv1bundleproductsoptionsaddbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/options/add"
      }
    },
    "/V1/bundle-products/options/types": {
      "get": {
        "tags": ["bundle-products/options/types"],
        "description": "Get all types for options for bundle products",
        "operationId": "GetV1BundleproductsOptionsTypes",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-type-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-type-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/options/types"
      }
    },
    "/V1/bundle-products/options/{optionId}": {
      "put": {
        "tags": ["bundle-products/options/{optionId}"],
        "description": "Add new option for bundle product",
        "operationId": "PutV1BundleproductsOptionsOptionId",
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1BundleproductsOptionsAddPostv1bundleproductsoptionsaddbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/options/{optionId}"
      }
    },
    "/V1/bundle-products/{productSku}/children": {
      "get": {
        "tags": ["bundle-products/{productSku}/children"],
        "description": "Get all children for Bundle product",
        "operationId": "GetV1BundleproductsProductSkuChildren",
        "parameters": [
          {
            "name": "productSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-link-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-link-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{productSku}/children"
      }
    },
    "/V1/bundle-products/{sku}/links/{id}": {
      "put": {
        "tags": ["bundle-products/{sku}/links/{id}"],
        "description": "",
        "operationId": "PutV1BundleproductsSkuLinksId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1BundleproductsSkuLinksIdPutv1bundleproductsskulinksidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/links/{id}"
      }
    },
    "/V1/bundle-products/{sku}/links/{optionId}": {
      "post": {
        "tags": ["bundle-products/{sku}/links/{optionId}"],
        "description": "Add child product to specified Bundle option by product sku",
        "operationId": "PostV1BundleproductsSkuLinksOptionId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1BundleproductsSkuLinksIdPutv1bundleproductsskulinksidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/links/{optionId}"
      }
    },
    "/V1/bundle-products/{sku}/options/all": {
      "get": {
        "tags": ["bundle-products/{sku}/options/all"],
        "description": "Get all options for bundle product",
        "operationId": "GetV1BundleproductsSkuOptionsAll",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/options/all"
      }
    },
    "/V1/bundle-products/{sku}/options/{optionId}": {
      "get": {
        "tags": ["bundle-products/{sku}/options/{optionId}"],
        "description": "Get option for bundle product",
        "operationId": "GetV1BundleproductsSkuOptionsOptionId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bundle-data-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/bundle-data-option-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/options/{optionId}"
      },
      "delete": {
        "tags": ["bundle-products/{sku}/options/{optionId}"],
        "description": "Remove bundle option",
        "operationId": "DeleteV1BundleproductsSkuOptionsOptionId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/options/{optionId}"
      }
    },
    "/V1/bundle-products/{sku}/options/{optionId}/children/{childSku}": {
      "delete": {
        "tags": ["bundle-products/{sku}/options/{optionId}/children/{childSku}"],
        "description": "Remove product from Bundle product option",
        "operationId": "DeleteV1BundleproductsSkuOptionsOptionIdChildrenChildSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "childSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/options/{optionId}/children/{childSku}"
      }
    },
    "/V1/carts/": {
      "post": {
        "tags": ["carts/"],
        "description": "Creates an empty cart and quote for a guest.",
        "operationId": "PostV1Carts",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Cart ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Cart ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/"
      }
    },
    "/V1/carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}": {
      "get": {
        "tags": ["carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}"],
        "description": "Check gift card balance if added to the cart.",
        "operationId": "GetV1CartsGuestcartsCartIdCheckGiftCardGiftCardCode",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "giftCardCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}"
      }
    },
    "/V1/carts/guest-carts/{cartId}/giftCards": {
      "post": {
        "tags": ["carts/guest-carts/{cartId}/giftCards"],
        "description": "Add gift card to the cart.",
        "operationId": "PostV1CartsGuestcartsCartIdGiftCards",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsGuestcartsCartIdGiftCardsPostv1cartsguestcartscartidgiftcardsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/guest-carts/{cartId}/giftCards"
      }
    },
    "/V1/carts/guest-carts/{cartId}/giftCards/{giftCardCode}": {
      "delete": {
        "tags": ["carts/guest-carts/{cartId}/giftCards/{giftCardCode}"],
        "description": "Remove GiftCard Account entity.",
        "operationId": "DeleteV1CartsGuestcartsCartIdGiftCardsGiftCardCode",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "giftCardCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/guest-carts/{cartId}/giftCards/{giftCardCode}"
      }
    },
    "/V1/carts/licence": {
      "get": {
        "tags": ["carts/licence"],
        "description": "Lists active checkout agreements.",
        "operationId": "GetV1CartsLicence",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/checkout-agreements-data-agreement-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/checkout-agreements-data-agreement-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/licence"
      }
    },
    "/V1/carts/licence/list": {
      "get": {
        "tags": ["carts/licence/list"],
        "description": "List of checkout agreements.",
        "operationId": "GetV1CartsLicenceList",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/checkout-agreements-data-agreement-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/checkout-agreements-data-agreement-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/licence/list"
      }
    },
    "/V1/carts/mine": {
      "put": {
        "tags": ["carts/mine"],
        "description": "Save quote",
        "operationId": "PutV1CartsMine",
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsMinePutv1cartsminebody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine"
      },
      "post": {
        "tags": ["carts/mine"],
        "description": "Creates an empty cart and quote for a specified customer if customer does not have a cart yet.",
        "operationId": "PostV1CartsMine",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine"
      },
      "get": {
        "tags": ["carts/mine"],
        "description": "Returns information for the cart for a specified customer.",
        "operationId": "GetV1CartsMine",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine"
      }
    },
    "/V1/carts/mine/balance/apply": {
      "post": {
        "tags": ["carts/mine/balance/apply"],
        "description": "Apply store credit",
        "operationId": "PostV1CartsMineBalanceApply",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/balance/apply"
      }
    },
    "/V1/carts/mine/billing-address": {
      "get": {
        "tags": ["carts/mine/billing-address"],
        "description": "Returns the billing address for a specified quote.",
        "operationId": "GetV1CartsMineBillingaddress",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/billing-address"
      },
      "post": {
        "tags": ["carts/mine/billing-address"],
        "description": "Assigns a specified billing address to a specified cart.",
        "operationId": "PostV1CartsMineBillingaddress",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/billing-address"
      }
    },
    "/V1/carts/mine/checkGiftCard/{giftCardCode}": {
      "get": {
        "tags": ["carts/mine/checkGiftCard/{giftCardCode}"],
        "description": "Check gift card balance if applied to given cart.",
        "operationId": "GetV1CartsMineCheckGiftCardGiftCardCode",
        "parameters": [
          {
            "name": "giftCardCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/checkGiftCard/{giftCardCode}"
      }
    },
    "/V1/carts/mine/collect-totals": {
      "put": {
        "tags": ["carts/mine/collect-totals"],
        "description": "Set shipping/billing methods and additional data for cart and collect totals.",
        "operationId": "PutV1CartsMineCollecttotals",
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsMineCollecttotalsPutv1cartsminecollecttotalsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/collect-totals"
      }
    },
    "/V1/carts/mine/coupons": {
      "get": {
        "tags": ["carts/mine/coupons"],
        "description": "Returns information for a coupon in a specified cart.",
        "operationId": "GetV1CartsMineCoupons",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "The coupon code data."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "The coupon code data."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/coupons"
      },
      "delete": {
        "tags": ["carts/mine/coupons"],
        "description": "Deletes a coupon from a specified cart.",
        "operationId": "DeleteV1CartsMineCoupons",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/coupons"
      }
    },
    "/V1/carts/mine/coupons/{couponCode}": {
      "put": {
        "tags": ["carts/mine/coupons/{couponCode}"],
        "description": "Adds a coupon by code to a specified cart.",
        "operationId": "PutV1CartsMineCouponsCouponCode",
        "parameters": [
          {
            "name": "couponCode",
            "in": "path",
            "required": true,
            "description": "The coupon code data.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/coupons/{couponCode}"
      }
    },
    "/V1/carts/mine/estimate-shipping-methods": {
      "post": {
        "tags": ["carts/mine/estimate-shipping-methods"],
        "description": "Estimate shipping by address and return list of available shipping methods",
        "operationId": "PostV1CartsMineEstimateshippingmethods",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsPostv1cartsmineestimateshippingmethodsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/estimate-shipping-methods"
      }
    },
    "/V1/carts/mine/estimate-shipping-methods-by-address-id": {
      "post": {
        "tags": ["carts/mine/estimate-shipping-methods-by-address-id"],
        "description": "Estimate shipping",
        "operationId": "PostV1CartsMineEstimateshippingmethodsbyaddressid",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsbyaddressidPostv1cartsmineestimateshippingmethodsbyaddressidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/estimate-shipping-methods-by-address-id"
      }
    },
    "/V1/carts/mine/gift-message": {
      "get": {
        "tags": ["carts/mine/gift-message"],
        "description": "Return the gift message for a specified order.",
        "operationId": "GetV1CartsMineGiftmessage",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/gift-message"
      },
      "post": {
        "tags": ["carts/mine/gift-message"],
        "description": "Set the gift message for an entire order.",
        "operationId": "PostV1CartsMineGiftmessage",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineGiftmessagePostv1cartsminegiftmessagebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/gift-message"
      }
    },
    "/V1/carts/mine/gift-message/{itemId}": {
      "get": {
        "tags": ["carts/mine/gift-message/{itemId}"],
        "description": "Return the gift message for a specified item in a specified shopping cart.",
        "operationId": "GetV1CartsMineGiftmessageItemId",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The item ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/gift-message/{itemId}"
      },
      "post": {
        "tags": ["carts/mine/gift-message/{itemId}"],
        "description": "Set the gift message for a specified item in a specified shopping cart.",
        "operationId": "PostV1CartsMineGiftmessageItemId",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The item ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineGiftmessagePostv1cartsminegiftmessagebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/gift-message/{itemId}"
      }
    },
    "/V1/carts/mine/giftCards": {
      "post": {
        "tags": ["carts/mine/giftCards"],
        "description": "Add gift card to the cart.",
        "operationId": "PostV1CartsMineGiftCards",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsGuestcartsCartIdGiftCardsPostv1cartsguestcartscartidgiftcardsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/giftCards"
      }
    },
    "/V1/carts/mine/giftCards/{giftCardCode}": {
      "delete": {
        "tags": ["carts/mine/giftCards/{giftCardCode}"],
        "description": "Remove GiftCard Account entity",
        "operationId": "DeleteV1CartsMineGiftCardsGiftCardCode",
        "parameters": [
          {
            "name": "giftCardCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/giftCards/{giftCardCode}"
      }
    },
    "/V1/carts/mine/items": {
      "get": {
        "tags": ["carts/mine/items"],
        "description": "Lists items that are assigned to a specified cart.",
        "operationId": "GetV1CartsMineItems",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/items"
      },
      "post": {
        "tags": ["carts/mine/items"],
        "description": "Add/update the specified cart item.",
        "operationId": "PostV1CartsMineItems",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineItemsPostv1cartsmineitemsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/items"
      }
    },
    "/V1/carts/mine/items/{itemId}": {
      "put": {
        "tags": ["carts/mine/items/{itemId}"],
        "description": "Add/update the specified cart item.",
        "operationId": "PutV1CartsMineItemsItemId",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineItemsPostv1cartsmineitemsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/items/{itemId}"
      },
      "delete": {
        "tags": ["carts/mine/items/{itemId}"],
        "description": "Removes the specified item from the specified cart.",
        "operationId": "DeleteV1CartsMineItemsItemId",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The item ID of the item to be removed.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/items/{itemId}"
      }
    },
    "/V1/carts/mine/order": {
      "put": {
        "tags": ["carts/mine/order"],
        "description": "Places an order for a specified cart.",
        "operationId": "PutV1CartsMineOrder",
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsMineOrderPutv1cartsmineorderbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/order"
      }
    },
    "/V1/carts/mine/payment-information": {
      "post": {
        "tags": ["carts/mine/payment-information"],
        "description": "Set payment information and place order for a specified cart.",
        "operationId": "PostV1CartsMinePaymentinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMinePaymentinformationPostv1cartsminepaymentinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/payment-information"
      },
      "get": {
        "tags": ["carts/mine/payment-information"],
        "description": "Get payment information",
        "operationId": "GetV1CartsMinePaymentinformation",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/payment-information"
      }
    },
    "/V1/carts/mine/payment-methods": {
      "get": {
        "tags": ["carts/mine/payment-methods"],
        "description": "Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://developer.adobe.com/commerce/webapi/rest/attributes#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1CartsMinePaymentmethods",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/payment-methods"
      }
    },
    "/V1/carts/mine/payment-order": {
      "post": {
        "tags": ["carts/mine/payment-order"],
        "description": "Create a payment order for logged in customer",
        "operationId": "PostV1CartsMinePaymentorder",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMinePaymentorderPostv1cartsminepaymentorderbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-order-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-order-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/payment-order"
      }
    },
    "/V1/carts/mine/payment-order/{id}": {
      "get": {
        "tags": ["carts/mine/payment-order/{id}"],
        "description": "Get payment order for logged in customer",
        "operationId": "GetV1CartsMinePaymentorderId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-order-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-order-details-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/payment-order/{id}"
      },
      "post": {
        "tags": ["carts/mine/payment-order/{id}"],
        "description": "Sync payment order for logged in customer",
        "operationId": "PostV1CartsMinePaymentorderId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/payment-order/{id}"
      }
    },
    "/V1/carts/mine/po-payment-information": {
      "post": {
        "tags": ["carts/mine/po-payment-information"],
        "description": "Set payment information and place purchase order for a specified cart.",
        "operationId": "PostV1CartsMinePopaymentinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMinePaymentinformationPostv1cartsminepaymentinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Purchase Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Purchase Order ID."
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/po-payment-information"
      }
    },
    "/V1/carts/mine/selected-payment-method": {
      "get": {
        "tags": ["carts/mine/selected-payment-method"],
        "description": "Returns the payment method for a specified shopping cart.",
        "operationId": "GetV1CartsMineSelectedpaymentmethod",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/selected-payment-method"
      },
      "put": {
        "tags": ["carts/mine/selected-payment-method"],
        "description": "Adds a specified payment method to a specified shopping cart.",
        "operationId": "PutV1CartsMineSelectedpaymentmethod",
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsMineSelectedpaymentmethodPutv1cartsmineselectedpaymentmethodbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "redirect url or error message."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "redirect url or error message."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/selected-payment-method"
      }
    },
    "/V1/carts/mine/set-payment-information": {
      "post": {
        "tags": ["carts/mine/set-payment-information"],
        "description": "Set payment information for a specified cart.",
        "operationId": "PostV1CartsMineSetpaymentinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMinePaymentinformationPostv1cartsminepaymentinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/set-payment-information"
      }
    },
    "/V1/carts/mine/shipping-information": {
      "post": {
        "tags": ["carts/mine/shipping-information"],
        "description": "",
        "operationId": "PostV1CartsMineShippinginformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineShippinginformationPostv1cartsmineshippinginformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/shipping-information"
      }
    },
    "/V1/carts/mine/shipping-methods": {
      "get": {
        "tags": ["carts/mine/shipping-methods"],
        "description": "Lists applicable shipping methods for a specified quote.",
        "operationId": "GetV1CartsMineShippingmethods",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/shipping-methods"
      }
    },
    "/V1/carts/mine/totals": {
      "get": {
        "tags": ["carts/mine/totals"],
        "description": "Returns quote totals data for a specified cart.",
        "operationId": "GetV1CartsMineTotals",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/totals"
      }
    },
    "/V1/carts/mine/totals-information": {
      "post": {
        "tags": ["carts/mine/totals-information"],
        "description": "Calculate quote totals based on address and shipping method.",
        "operationId": "PostV1CartsMineTotalsinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineTotalsinformationPostv1cartsminetotalsinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/totals-information"
      }
    },
    "/V1/carts/search": {
      "get": {
        "tags": ["carts/search"],
        "description": "Enables administrative users to list carts that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://developer.adobe.com/commerce/webapi/rest/attributes#CartRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1CartsSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/search"
      }
    },
    "/V1/carts/{cartId}": {
      "get": {
        "tags": ["carts/{cartId}"],
        "description": "Enables an administrative user to return information for a specified cart.",
        "operationId": "GetV1CartsCartId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}"
      },
      "put": {
        "tags": ["carts/{cartId}"],
        "description": "Assigns a specified customer to a specified shopping cart.",
        "operationId": "PutV1CartsCartId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsCartIdPutv1cartscartidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}"
      }
    },
    "/V1/carts/{cartId}/billing-address": {
      "get": {
        "tags": ["carts/{cartId}/billing-address"],
        "description": "Returns the billing address for a specified quote.",
        "operationId": "GetV1CartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/billing-address"
      },
      "post": {
        "tags": ["carts/{cartId}/billing-address"],
        "description": "Assigns a specified billing address to a specified cart.",
        "operationId": "PostV1CartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/billing-address"
      }
    },
    "/V1/carts/{cartId}/coupons": {
      "get": {
        "tags": ["carts/{cartId}/coupons"],
        "description": "Returns information for a coupon in a specified cart.",
        "operationId": "GetV1CartsCartIdCoupons",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "The coupon code data."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "The coupon code data."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/coupons"
      },
      "delete": {
        "tags": ["carts/{cartId}/coupons"],
        "description": "Deletes a coupon from a specified cart.",
        "operationId": "DeleteV1CartsCartIdCoupons",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/coupons"
      }
    },
    "/V1/carts/{cartId}/coupons/{couponCode}": {
      "put": {
        "tags": ["carts/{cartId}/coupons/{couponCode}"],
        "description": "Adds a coupon by code to a specified cart.",
        "operationId": "PutV1CartsCartIdCouponsCouponCode",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "couponCode",
            "in": "path",
            "required": true,
            "description": "The coupon code data.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/coupons/{couponCode}"
      }
    },
    "/V1/carts/{cartId}/estimate-shipping-methods": {
      "post": {
        "tags": ["carts/{cartId}/estimate-shipping-methods"],
        "description": "Estimate shipping by address and return list of available shipping methods",
        "operationId": "PostV1CartsCartIdEstimateshippingmethods",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsPostv1cartsmineestimateshippingmethodsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/estimate-shipping-methods"
      }
    },
    "/V1/carts/{cartId}/estimate-shipping-methods-by-address-id": {
      "post": {
        "tags": ["carts/{cartId}/estimate-shipping-methods-by-address-id"],
        "description": "Estimate shipping",
        "operationId": "PostV1CartsCartIdEstimateshippingmethodsbyaddressid",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsbyaddressidPostv1cartsmineestimateshippingmethodsbyaddressidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/estimate-shipping-methods-by-address-id"
      }
    },
    "/V1/carts/{cartId}/gift-message": {
      "get": {
        "tags": ["carts/{cartId}/gift-message"],
        "description": "Return the gift message for a specified order.",
        "operationId": "GetV1CartsCartIdGiftmessage",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/gift-message"
      },
      "post": {
        "tags": ["carts/{cartId}/gift-message"],
        "description": "Set the gift message for an entire order.",
        "operationId": "PostV1CartsCartIdGiftmessage",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineGiftmessagePostv1cartsminegiftmessagebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/gift-message"
      }
    },
    "/V1/carts/{cartId}/gift-message/{itemId}": {
      "get": {
        "tags": ["carts/{cartId}/gift-message/{itemId}"],
        "description": "Return the gift message for a specified item in a specified shopping cart.",
        "operationId": "GetV1CartsCartIdGiftmessageItemId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The item ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/gift-message/{itemId}"
      },
      "post": {
        "tags": ["carts/{cartId}/gift-message/{itemId}"],
        "description": "Set the gift message for a specified item in a specified shopping cart.",
        "operationId": "PostV1CartsCartIdGiftmessageItemId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The item ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineGiftmessagePostv1cartsminegiftmessagebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/gift-message/{itemId}"
      }
    },
    "/V1/carts/{cartId}/giftCards": {
      "put": {
        "tags": ["carts/{cartId}/giftCards"],
        "description": "Add gift card to the cart.",
        "operationId": "PutV1CartsCartIdGiftCards",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsGuestcartsCartIdGiftCardsPostv1cartsguestcartscartidgiftcardsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/giftCards"
      }
    },
    "/V1/carts/{cartId}/giftCards/{giftCardCode}": {
      "delete": {
        "tags": ["carts/{cartId}/giftCards/{giftCardCode}"],
        "description": "Remove GiftCard Account entity",
        "operationId": "DeleteV1CartsCartIdGiftCardsGiftCardCode",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "giftCardCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/giftCards/{giftCardCode}"
      }
    },
    "/V1/carts/{cartId}/items": {
      "get": {
        "tags": ["carts/{cartId}/items"],
        "description": "Lists items that are assigned to a specified cart.",
        "operationId": "GetV1CartsCartIdItems",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/items"
      }
    },
    "/V1/carts/{cartId}/items/{itemId}": {
      "put": {
        "tags": ["carts/{cartId}/items/{itemId}"],
        "description": "Add/update the specified cart item.",
        "operationId": "PutV1CartsCartIdItemsItemId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineItemsPostv1cartsmineitemsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/items/{itemId}"
      },
      "delete": {
        "tags": ["carts/{cartId}/items/{itemId}"],
        "description": "Removes the specified item from the specified cart.",
        "operationId": "DeleteV1CartsCartIdItemsItemId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The item ID of the item to be removed.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/items/{itemId}"
      }
    },
    "/V1/carts/{cartId}/order": {
      "put": {
        "tags": ["carts/{cartId}/order"],
        "description": "Places an order for a specified cart.",
        "operationId": "PutV1CartsCartIdOrder",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsMineOrderPutv1cartsmineorderbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/order"
      }
    },
    "/V1/carts/{cartId}/payment-methods": {
      "get": {
        "tags": ["carts/{cartId}/payment-methods"],
        "description": "Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://developer.adobe.com/commerce/webapi/rest/attributes#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1CartsCartIdPaymentmethods",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/payment-methods"
      }
    },
    "/V1/carts/{cartId}/selected-payment-method": {
      "get": {
        "tags": ["carts/{cartId}/selected-payment-method"],
        "description": "Returns the payment method for a specified shopping cart.",
        "operationId": "GetV1CartsCartIdSelectedpaymentmethod",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/selected-payment-method"
      },
      "put": {
        "tags": ["carts/{cartId}/selected-payment-method"],
        "description": "Adds a specified payment method to a specified shopping cart.",
        "operationId": "PutV1CartsCartIdSelectedpaymentmethod",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsMineSelectedpaymentmethodPutv1cartsmineselectedpaymentmethodbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "redirect url or error message."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "redirect url or error message."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/selected-payment-method"
      }
    },
    "/V1/carts/{cartId}/shipping-information": {
      "post": {
        "tags": ["carts/{cartId}/shipping-information"],
        "description": "",
        "operationId": "PostV1CartsCartIdShippinginformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineShippinginformationPostv1cartsmineshippinginformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/shipping-information"
      }
    },
    "/V1/carts/{cartId}/shipping-methods": {
      "get": {
        "tags": ["carts/{cartId}/shipping-methods"],
        "description": "Lists applicable shipping methods for a specified quote.",
        "operationId": "GetV1CartsCartIdShippingmethods",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/shipping-methods"
      }
    },
    "/V1/carts/{cartId}/totals": {
      "get": {
        "tags": ["carts/{cartId}/totals"],
        "description": "Returns quote totals data for a specified cart.",
        "operationId": "GetV1CartsCartIdTotals",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/totals"
      }
    },
    "/V1/carts/{cartId}/totals-information": {
      "post": {
        "tags": ["carts/{cartId}/totals-information"],
        "description": "Calculate quote totals based on address and shipping method.",
        "operationId": "PostV1CartsCartIdTotalsinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineTotalsinformationPostv1cartsminetotalsinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/totals-information"
      }
    },
    "/V1/carts/{quoteId}/giftCards": {
      "get": {
        "tags": ["carts/{quoteId}/giftCards"],
        "description": "Return GiftCard Account cards.",
        "operationId": "GetV1CartsQuoteIdGiftCards",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-card-account-data-gift-card-account-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-card-account-data-gift-card-account-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{quoteId}/giftCards"
      }
    },
    "/V1/carts/{quoteId}/items": {
      "post": {
        "tags": ["carts/{quoteId}/items"],
        "description": "Add/update the specified cart item.",
        "operationId": "PostV1CartsQuoteIdItems",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineItemsPostv1cartsmineitemsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{quoteId}/items"
      }
    },
    "/V1/categories": {
      "post": {
        "tags": ["categories"],
        "description": "Create category service",
        "operationId": "PostV1Categories",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CategoriesPostv1categoriesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories"
      },
      "get": {
        "tags": ["categories"],
        "description": "Retrieve list of categories",
        "operationId": "GetV1Categories",
        "parameters": [
          {
            "name": "rootCategoryId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-tree-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-tree-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories"
      }
    },
    "/V1/categories/attributes": {
      "get": {
        "tags": ["categories/attributes"],
        "description": "Retrieve all attributes for entity type",
        "operationId": "GetV1CategoriesAttributes",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-attribute-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-attribute-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/attributes"
      }
    },
    "/V1/categories/attributes/{attributeCode}": {
      "get": {
        "tags": ["categories/attributes/{attributeCode}"],
        "description": "Retrieve specific attribute",
        "operationId": "GetV1CategoriesAttributesAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-attribute-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/attributes/{attributeCode}"
      }
    },
    "/V1/categories/attributes/{attributeCode}/options": {
      "get": {
        "tags": ["categories/attributes/{attributeCode}/options"],
        "description": "Retrieve list of attribute options",
        "operationId": "GetV1CategoriesAttributesAttributeCodeOptions",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/attributes/{attributeCode}/options"
      }
    },
    "/V1/categories/list": {
      "get": {
        "tags": ["categories/list"],
        "description": "Get category list",
        "operationId": "GetV1CategoriesList",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/list"
      }
    },
    "/V1/categories/{categoryId}": {
      "delete": {
        "tags": ["categories/{categoryId}"],
        "description": "Delete category by identifier",
        "operationId": "DeleteV1CategoriesCategoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Will returned True if deleted"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "Will returned True if deleted"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}"
      },
      "get": {
        "tags": ["categories/{categoryId}"],
        "description": "Get info about category by category id",
        "operationId": "GetV1CategoriesCategoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}"
      }
    },
    "/V1/categories/{categoryId}/move": {
      "put": {
        "tags": ["categories/{categoryId}/move"],
        "description": "Move category",
        "operationId": "PutV1CategoriesCategoryIdMove",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["parentId"],
                "properties": {
                  "parentId": {
                    "type": "integer"
                  },
                  "afterId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["parentId"],
                "properties": {
                  "parentId": {
                    "type": "integer"
                  },
                  "afterId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}/move"
      }
    },
    "/V1/categories/{categoryId}/products": {
      "get": {
        "tags": ["categories/{categoryId}/products"],
        "description": "Get products assigned to category",
        "operationId": "GetV1CategoriesCategoryIdProducts",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}/products"
      },
      "post": {
        "tags": ["categories/{categoryId}/products"],
        "description": "Assign a product to the required category",
        "operationId": "PostV1CategoriesCategoryIdProducts",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CategoriesCategoryIdProductsPostv1categoriescategoryidproductsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if assigned"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if assigned"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}/products"
      },
      "put": {
        "tags": ["categories/{categoryId}/products"],
        "description": "Assign a product to the required category",
        "operationId": "PutV1CategoriesCategoryIdProducts",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CategoriesCategoryIdProductsPostv1categoriescategoryidproductsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if assigned"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if assigned"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}/products"
      }
    },
    "/V1/categories/{categoryId}/products/{sku}": {
      "delete": {
        "tags": ["categories/{categoryId}/products/{sku}"],
        "description": "Remove the product assignment from the category by category id and sku",
        "operationId": "DeleteV1CategoriesCategoryIdProductsSku",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if products successfully deleted"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if products successfully deleted"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}/products/{sku}"
      }
    },
    "/V1/categories/{id}": {
      "put": {
        "tags": ["categories/{id}"],
        "description": "Create category service",
        "operationId": "PutV1CategoriesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CategoriesPostv1categoriesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{id}"
      }
    },
    "/V1/cmsBlock": {
      "post": {
        "tags": ["cmsBlock"],
        "description": "Save block.",
        "operationId": "PostV1CmsBlock",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CmsBlockPostv1cmsblockbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "cmsBlock"
      }
    },
    "/V1/cmsBlock/search": {
      "get": {
        "tags": ["cmsBlock/search"],
        "description": "Retrieve blocks matching the specified criteria.",
        "operationId": "GetV1CmsBlockSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "cmsBlock/search"
      }
    },
    "/V1/cmsBlock/{blockId}": {
      "get": {
        "tags": ["cmsBlock/{blockId}"],
        "description": "Retrieve block.",
        "operationId": "GetV1CmsBlockBlockId",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "cmsBlock/{blockId}"
      },
      "delete": {
        "tags": ["cmsBlock/{blockId}"],
        "description": "Delete block by ID.",
        "operationId": "DeleteV1CmsBlockBlockId",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "cmsBlock/{blockId}"
      }
    },
    "/V1/cmsBlock/{id}": {
      "put": {
        "tags": ["cmsBlock/{id}"],
        "description": "Save block.",
        "operationId": "PutV1CmsBlockId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CmsBlockPostv1cmsblockbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "cmsBlock/{id}"
      }
    },
    "/V1/cmsPage": {
      "post": {
        "tags": ["cmsPage"],
        "description": "Save page.",
        "operationId": "PostV1CmsPage",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CmsPagePostv1cmspagebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "cmsPage"
      }
    },
    "/V1/cmsPage/search": {
      "get": {
        "tags": ["cmsPage/search"],
        "description": "Retrieve pages matching the specified criteria.",
        "operationId": "GetV1CmsPageSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "cmsPage/search"
      }
    },
    "/V1/cmsPage/{id}": {
      "put": {
        "tags": ["cmsPage/{id}"],
        "description": "Save page.",
        "operationId": "PutV1CmsPageId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CmsPagePostv1cmspagebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "cmsPage/{id}"
      }
    },
    "/V1/cmsPage/{pageId}": {
      "get": {
        "tags": ["cmsPage/{pageId}"],
        "description": "Retrieve page.",
        "operationId": "GetV1CmsPagePageId",
        "parameters": [
          {
            "name": "pageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "cmsPage/{pageId}"
      },
      "delete": {
        "tags": ["cmsPage/{pageId}"],
        "description": "Delete page by ID.",
        "operationId": "DeleteV1CmsPagePageId",
        "parameters": [
          {
            "name": "pageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "cmsPage/{pageId}"
      }
    },
    "/V1/company/": {
      "get": {
        "tags": ["company/"],
        "description": "Returns the list of companies. The list is an array of objects, and detailed information about item attributes might not be included.",
        "operationId": "GetV1Company",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/"
      },
      "post": {
        "tags": ["company/"],
        "description": "Create or update a company account.",
        "operationId": "PostV1Company",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CompanyPostv1companybody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/"
      }
    },
    "/V1/company/assignRoles": {
      "put": {
        "tags": ["company/assignRoles"],
        "description": "Change a role for a company user.",
        "operationId": "PutV1CompanyAssignRoles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["userId", "roles"],
                "properties": {
                  "userId": {
                    "type": "integer"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/company-data-role-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["userId", "roles"],
                "properties": {
                  "userId": {
                    "type": "integer"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/company-data-role-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/assignRoles"
      }
    },
    "/V1/company/role/": {
      "get": {
        "tags": ["company/role/"],
        "description": "Returns the list of roles and permissions for a specified company.",
        "operationId": "GetV1CompanyRole",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/role/"
      },
      "post": {
        "tags": ["company/role/"],
        "description": "Create or update a role for a selected company.",
        "operationId": "PostV1CompanyRole",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CompanyRolePostv1companyrolebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/role/"
      }
    },
    "/V1/company/role/{id}": {
      "put": {
        "tags": ["company/role/{id}"],
        "description": "Create or update a role for a selected company.",
        "operationId": "PutV1CompanyRoleId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CompanyRolePostv1companyrolebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/role/{id}"
      }
    },
    "/V1/company/role/{roleId}": {
      "get": {
        "tags": ["company/role/{roleId}"],
        "description": "Returns the list of permissions for a specified role.",
        "operationId": "GetV1CompanyRoleRoleId",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/role/{roleId}"
      },
      "delete": {
        "tags": ["company/role/{roleId}"],
        "description": "Delete a role.",
        "operationId": "DeleteV1CompanyRoleRoleId",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/role/{roleId}"
      }
    },
    "/V1/company/role/{roleId}/users": {
      "get": {
        "tags": ["company/role/{roleId}/users"],
        "description": "View the list of company users assigned to a specified role.",
        "operationId": "GetV1CompanyRoleRoleIdUsers",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/role/{roleId}/users"
      }
    },
    "/V1/company/{companyId}": {
      "get": {
        "tags": ["company/{companyId}"],
        "description": "Returns company details.",
        "operationId": "GetV1CompanyCompanyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/{companyId}"
      },
      "delete": {
        "tags": ["company/{companyId}"],
        "description": "Delete a company. Customers belonging to a company are not deleted with this request.",
        "operationId": "DeleteV1CompanyCompanyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/{companyId}"
      },
      "put": {
        "tags": ["company/{companyId}"],
        "description": "Create or update a company account.",
        "operationId": "PutV1CompanyCompanyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CompanyPostv1companybody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "company/{companyId}"
      }
    },
    "/V1/companyCredits/": {
      "get": {
        "tags": ["companyCredits/"],
        "description": "Returns the list of credits for specified companies.",
        "operationId": "GetV1CompanyCredits",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "companyCredits/"
      }
    },
    "/V1/companyCredits/company/{companyId}": {
      "get": {
        "tags": ["companyCredits/company/{companyId}"],
        "description": "Returns data on the credit limit for a specified company.",
        "operationId": "GetV1CompanyCreditsCompanyCompanyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "companyCredits/company/{companyId}"
      }
    },
    "/V1/companyCredits/history": {
      "get": {
        "tags": ["companyCredits/history"],
        "description": "Returns the credit history for one or more companies.",
        "operationId": "GetV1CompanyCreditsHistory",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-history-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-history-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "companyCredits/history"
      }
    },
    "/V1/companyCredits/history/{historyId}": {
      "put": {
        "tags": ["companyCredits/history/{historyId}"],
        "description": "Update the PO Number and/or comment for a Reimburse transaction.",
        "operationId": "PutV1CompanyCreditsHistoryHistoryId",
        "parameters": [
          {
            "name": "historyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "purchaseOrder": {
                    "type": "string",
                    "description": "[optional]"
                  },
                  "comment": {
                    "type": "string",
                    "description": "[optional]"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "purchaseOrder": {
                    "type": "string",
                    "description": "[optional]"
                  },
                  "comment": {
                    "type": "string",
                    "description": "[optional]"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "companyCredits/history/{historyId}"
      }
    },
    "/V1/companyCredits/{creditId}": {
      "get": {
        "tags": ["companyCredits/{creditId}"],
        "description": "Returns data on the credit limit for a specified credit limit ID.",
        "operationId": "GetV1CompanyCreditsCreditId",
        "parameters": [
          {
            "name": "creditId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "reload",
            "in": "query",
            "description": "[optional]",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "companyCredits/{creditId}"
      }
    },
    "/V1/companyCredits/{creditId}/decreaseBalance": {
      "post": {
        "tags": ["companyCredits/{creditId}/decreaseBalance"],
        "description": "Decreases the company credit with an Update, Reimburse, or Purchase transaction. This transaction increases company's outstanding balance and decreases company's available credit.",
        "operationId": "PostV1CompanyCreditsCreditIdDecreaseBalance",
        "parameters": [
          {
            "name": "creditId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CompanyCreditsCreditIdDecreaseBalancePostv1companycreditscreditiddecreasebalancebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "companyCredits/{creditId}/decreaseBalance"
      }
    },
    "/V1/companyCredits/{creditId}/increaseBalance": {
      "post": {
        "tags": ["companyCredits/{creditId}/increaseBalance"],
        "description": "Increases the company credit with an Allocate, Update, Refund, Revert, or Reimburse transaction. This transaction decreases company's outstanding balance and increases company's available credit.",
        "operationId": "PostV1CompanyCreditsCreditIdIncreaseBalance",
        "parameters": [
          {
            "name": "creditId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CompanyCreditsCreditIdDecreaseBalancePostv1companycreditscreditiddecreasebalancebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "companyCredits/{creditId}/increaseBalance"
      }
    },
    "/V1/companyCredits/{id}": {
      "put": {
        "tags": ["companyCredits/{id}"],
        "description": "Update the following company credit attributes: credit currency, credit limit and setting to exceed credit.",
        "operationId": "PutV1CompanyCreditsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["creditLimit"],
                "properties": {
                  "creditLimit": {
                    "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["creditLimit"],
                "properties": {
                  "creditLimit": {
                    "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-credit-data-credit-limit-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "companyCredits/{id}"
      }
    },
    "/V1/configurable-products/variation": {
      "put": {
        "tags": ["configurable-products/variation"],
        "description": "Generate variation based on same product",
        "operationId": "PutV1ConfigurableproductsVariation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["product", "options"],
                "properties": {
                  "product": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/configurable-product-data-option-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["product", "options"],
                "properties": {
                  "product": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/configurable-product-data-option-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/variation"
      }
    },
    "/V1/configurable-products/{sku}/child": {
      "post": {
        "tags": ["configurable-products/{sku}/child"],
        "description": "",
        "operationId": "PostV1ConfigurableproductsSkuChild",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["childSku"],
                "properties": {
                  "childSku": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["childSku"],
                "properties": {
                  "childSku": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/child"
      }
    },
    "/V1/configurable-products/{sku}/children": {
      "get": {
        "tags": ["configurable-products/{sku}/children"],
        "description": "Get all children for Configurable product",
        "operationId": "GetV1ConfigurableproductsSkuChildren",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/children"
      }
    },
    "/V1/configurable-products/{sku}/children/{childSku}": {
      "delete": {
        "tags": ["configurable-products/{sku}/children/{childSku}"],
        "description": "Remove configurable product option",
        "operationId": "DeleteV1ConfigurableproductsSkuChildrenChildSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "childSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/children/{childSku}"
      }
    },
    "/V1/configurable-products/{sku}/options": {
      "post": {
        "tags": ["configurable-products/{sku}/options"],
        "description": "Save option",
        "operationId": "PostV1ConfigurableproductsSkuOptions",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ConfigurableproductsSkuOptionsPostv1configurableproductsskuoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/options"
      }
    },
    "/V1/configurable-products/{sku}/options/all": {
      "get": {
        "tags": ["configurable-products/{sku}/options/all"],
        "description": "Get all options for configurable product",
        "operationId": "GetV1ConfigurableproductsSkuOptionsAll",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/configurable-product-data-option-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/configurable-product-data-option-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/options/all"
      }
    },
    "/V1/configurable-products/{sku}/options/{id}": {
      "get": {
        "tags": ["configurable-products/{sku}/options/{id}"],
        "description": "Get option for configurable product",
        "operationId": "GetV1ConfigurableproductsSkuOptionsId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/configurable-product-data-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/configurable-product-data-option-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/options/{id}"
      },
      "put": {
        "tags": ["configurable-products/{sku}/options/{id}"],
        "description": "Save option",
        "operationId": "PutV1ConfigurableproductsSkuOptionsId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ConfigurableproductsSkuOptionsPostv1configurableproductsskuoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/options/{id}"
      },
      "delete": {
        "tags": ["configurable-products/{sku}/options/{id}"],
        "description": "Remove option from configurable product",
        "operationId": "DeleteV1ConfigurableproductsSkuOptionsId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/options/{id}"
      }
    },
    "/V1/coupons": {
      "post": {
        "tags": ["coupons"],
        "description": "Save a coupon.",
        "operationId": "PostV1Coupons",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CouponsPostv1couponsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "coupons"
      }
    },
    "/V1/coupons/deleteByCodes": {
      "post": {
        "tags": ["coupons/deleteByCodes"],
        "description": "Delete coupon by coupon codes.",
        "operationId": "PostV1CouponsDeleteByCodes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["codes"],
                "properties": {
                  "codes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ignoreInvalidCoupons": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["codes"],
                "properties": {
                  "codes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ignoreInvalidCoupons": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-mass-delete-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-mass-delete-result-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "coupons/deleteByCodes"
      }
    },
    "/V1/coupons/deleteByIds": {
      "post": {
        "tags": ["coupons/deleteByIds"],
        "description": "Delete coupon by coupon ids.",
        "operationId": "PostV1CouponsDeleteByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["ids"],
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "ignoreInvalidCoupons": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["ids"],
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "ignoreInvalidCoupons": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-mass-delete-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-mass-delete-result-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "coupons/deleteByIds"
      }
    },
    "/V1/coupons/generate": {
      "post": {
        "tags": ["coupons/generate"],
        "description": "Generate coupon for a rule",
        "operationId": "PostV1CouponsGenerate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["couponSpec"],
                "properties": {
                  "couponSpec": {
                    "$ref": "#/components/schemas/sales-rule-data-coupon-generation-spec-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["couponSpec"],
                "properties": {
                  "couponSpec": {
                    "$ref": "#/components/schemas/sales-rule-data-coupon-generation-spec-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "coupons/generate"
      }
    },
    "/V1/coupons/search": {
      "get": {
        "tags": ["coupons/search"],
        "description": "Retrieve a coupon using the specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#CouponRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1CouponsSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "coupons/search"
      }
    },
    "/V1/coupons/{couponId}": {
      "get": {
        "tags": ["coupons/{couponId}"],
        "description": "Get coupon by coupon id.",
        "operationId": "GetV1CouponsCouponId",
        "parameters": [
          {
            "name": "couponId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "coupons/{couponId}"
      },
      "put": {
        "tags": ["coupons/{couponId}"],
        "description": "Save a coupon.",
        "operationId": "PutV1CouponsCouponId",
        "parameters": [
          {
            "name": "couponId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CouponsPostv1couponsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "coupons/{couponId}"
      },
      "delete": {
        "tags": ["coupons/{couponId}"],
        "description": "Delete coupon by coupon id.",
        "operationId": "DeleteV1CouponsCouponId",
        "parameters": [
          {
            "name": "couponId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "coupons/{couponId}"
      }
    },
    "/V1/creditmemo": {
      "post": {
        "tags": ["creditmemo"],
        "description": "Performs persist operations for a specified credit memo.",
        "operationId": "PostV1Creditmemo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "creditmemo"
      }
    },
    "/V1/creditmemo/refund": {
      "post": {
        "tags": ["creditmemo/refund"],
        "description": "Prepare creditmemo to refund and save it.",
        "operationId": "PostV1CreditmemoRefund",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["creditmemo"],
                "properties": {
                  "creditmemo": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                  },
                  "offlineRequested": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["creditmemo"],
                "properties": {
                  "creditmemo": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                  },
                  "offlineRequested": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "creditmemo/refund"
      }
    },
    "/V1/creditmemo/{id}": {
      "put": {
        "tags": ["creditmemo/{id}"],
        "description": "Cancels a specified credit memo.",
        "operationId": "PutV1CreditmemoId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The credit memo ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "creditmemo/{id}"
      },
      "get": {
        "tags": ["creditmemo/{id}"],
        "description": "Loads a specified credit memo.",
        "operationId": "GetV1CreditmemoId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The credit memo ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "creditmemo/{id}"
      }
    },
    "/V1/creditmemo/{id}/comments": {
      "get": {
        "tags": ["creditmemo/{id}/comments"],
        "description": "Lists comments for a specified credit memo.",
        "operationId": "GetV1CreditmemoIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The credit memo ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-comment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-comment-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "creditmemo/{id}/comments"
      },
      "post": {
        "tags": ["creditmemo/{id}/comments"],
        "description": "Performs persist operations for a specified entity.",
        "operationId": "PostV1CreditmemoIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "creditmemo/{id}/comments"
      }
    },
    "/V1/creditmemo/{id}/emails": {
      "post": {
        "tags": ["creditmemo/{id}/emails"],
        "description": "Emails a user a specified credit memo.",
        "operationId": "PostV1CreditmemoIdEmails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The credit memo ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "creditmemo/{id}/emails"
      }
    },
    "/V1/creditmemos": {
      "get": {
        "tags": ["creditmemos"],
        "description": "Lists credit memos that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#CreditmemoRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1Creditmemos",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-creditmemo-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "creditmemos"
      }
    },
    "/V1/customerGroups": {
      "post": {
        "tags": ["customerGroups"],
        "description": "Save customer group.",
        "operationId": "PostV1CustomerGroups",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CustomerGroupsPostv1customergroupsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups"
      }
    },
    "/V1/customerGroups/default": {
      "get": {
        "tags": ["customerGroups/default"],
        "description": "Get default customer group.",
        "operationId": "GetV1CustomerGroupsDefault",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/default"
      }
    },
    "/V1/customerGroups/default/{id}": {
      "put": {
        "tags": ["customerGroups/default/{id}"],
        "description": "Set system default customer group.",
        "operationId": "PutV1CustomerGroupsDefaultId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/default/{id}"
      }
    },
    "/V1/customerGroups/default/{storeId}": {
      "get": {
        "tags": ["customerGroups/default/{storeId}"],
        "description": "Get default customer group.",
        "operationId": "GetV1CustomerGroupsDefaultStoreId",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/default/{storeId}"
      }
    },
    "/V1/customerGroups/search": {
      "get": {
        "tags": ["customerGroups/search"],
        "description": "Retrieve customer groups. The list of groups can be filtered to exclude the NOT_LOGGED_IN group using the first parameter and/or it can be filtered by tax class. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#GroupRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1CustomerGroupsSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/search"
      }
    },
    "/V1/customerGroups/{id}": {
      "get": {
        "tags": ["customerGroups/{id}"],
        "description": "Get customer group by group ID.",
        "operationId": "GetV1CustomerGroupsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/{id}"
      },
      "put": {
        "tags": ["customerGroups/{id}"],
        "description": "Save customer group.",
        "operationId": "PutV1CustomerGroupsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CustomerGroupsPostv1customergroupsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/{id}"
      },
      "delete": {
        "tags": ["customerGroups/{id}"],
        "description": "Delete customer group by ID.",
        "operationId": "DeleteV1CustomerGroupsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/{id}"
      }
    },
    "/V1/customerGroups/{id}/permissions": {
      "get": {
        "tags": ["customerGroups/{id}/permissions"],
        "description": "Check if customer group can be deleted.",
        "operationId": "GetV1CustomerGroupsIdPermissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/{id}/permissions"
      }
    },
    "/V1/customers": {
      "post": {
        "tags": ["customers"],
        "description": "Create customer account. Perform necessary business operations like sending email.",
        "operationId": "PostV1Customers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["customer"],
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  },
                  "password": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["customer"],
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  },
                  "password": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers"
      }
    },
    "/V1/customers/addresses/{addressId}": {
      "get": {
        "tags": ["customers/addresses/{addressId}"],
        "description": "Retrieve customer address.",
        "operationId": "GetV1CustomersAddressesAddressId",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/addresses/{addressId}"
      }
    },
    "/V1/customers/confirm": {
      "post": {
        "tags": ["customers/confirm"],
        "description": "Resend confirmation email.",
        "operationId": "PostV1CustomersConfirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "websiteId"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  },
                  "redirectUrl": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["email", "websiteId"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  },
                  "redirectUrl": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/confirm"
      }
    },
    "/V1/customers/isEmailAvailable": {
      "post": {
        "tags": ["customers/isEmailAvailable"],
        "description": "Check if given email is associated with a customer account in given website.",
        "operationId": "PostV1CustomersIsEmailAvailable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["customerEmail"],
                "properties": {
                  "customerEmail": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer",
                    "description": "If not set, will use the current websiteId"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["customerEmail"],
                "properties": {
                  "customerEmail": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer",
                    "description": "If not set, will use the current websiteId"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/isEmailAvailable"
      }
    },
    "/V1/customers/me": {
      "put": {
        "tags": ["customers/me"],
        "description": "Create or update a customer.",
        "operationId": "PutV1CustomersMe",
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CustomersMePutv1customersmebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me"
      },
      "get": {
        "tags": ["customers/me"],
        "description": "Get customer by Customer ID.",
        "operationId": "GetV1CustomersMe",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me"
      }
    },
    "/V1/customers/me/activate": {
      "put": {
        "tags": ["customers/me/activate"],
        "description": "Activate a customer account using a key that was sent in a confirmation email.",
        "operationId": "PutV1CustomersMeActivate",
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CustomersMeActivatePutv1customersmeactivatebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me/activate"
      }
    },
    "/V1/customers/me/billingAddress": {
      "get": {
        "tags": ["customers/me/billingAddress"],
        "description": "Retrieve default billing address for the given customerId.",
        "operationId": "GetV1CustomersMeBillingAddress",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me/billingAddress"
      }
    },
    "/V1/customers/me/password": {
      "put": {
        "tags": ["customers/me/password"],
        "description": "Change customer password.",
        "operationId": "PutV1CustomersMePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["currentPassword", "newPassword"],
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["currentPassword", "newPassword"],
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me/password"
      }
    },
    "/V1/customers/me/shippingAddress": {
      "get": {
        "tags": ["customers/me/shippingAddress"],
        "description": "Retrieve default shipping address for the given customerId.",
        "operationId": "GetV1CustomersMeShippingAddress",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me/shippingAddress"
      }
    },
    "/V1/customers/password": {
      "put": {
        "tags": ["customers/password"],
        "description": "Send an email to the customer with a password reset link.",
        "operationId": "PutV1CustomersPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "template"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "template": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["email", "template"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "template": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/password"
      }
    },
    "/V1/customers/resetPassword": {
      "post": {
        "tags": ["customers/resetPassword"],
        "description": "Reset customer password.",
        "operationId": "PostV1CustomersResetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "resetToken", "newPassword"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "If empty value given then the customer will be matched by the RP token."
                  },
                  "resetToken": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["email", "resetToken", "newPassword"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "If empty value given then the customer will be matched by the RP token."
                  },
                  "resetToken": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/resetPassword"
      }
    },
    "/V1/customers/search": {
      "get": {
        "tags": ["customers/search"],
        "description": "Retrieve customers which match a specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#CustomerRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1CustomersSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/search"
      }
    },
    "/V1/customers/validate": {
      "put": {
        "tags": ["customers/validate"],
        "description": "Validate customer data.",
        "operationId": "PutV1CustomersValidate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["customer"],
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["customer"],
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-validation-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-validation-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/validate"
      }
    },
    "/V1/customers/{customerId}": {
      "get": {
        "tags": ["customers/{customerId}"],
        "description": "Get customer by Customer ID.",
        "operationId": "GetV1CustomersCustomerId",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}"
      },
      "put": {
        "tags": ["customers/{customerId}"],
        "description": "Create or update a customer.",
        "operationId": "PutV1CustomersCustomerId",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CustomersMePutv1customersmebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}"
      },
      "delete": {
        "tags": ["customers/{customerId}"],
        "description": "Delete customer by Customer ID.",
        "operationId": "DeleteV1CustomersCustomerId",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}"
      }
    },
    "/V1/customers/{customerId}/billingAddress": {
      "get": {
        "tags": ["customers/{customerId}/billingAddress"],
        "description": "Retrieve default billing address for the given customerId.",
        "operationId": "GetV1CustomersCustomerIdBillingAddress",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/billingAddress"
      }
    },
    "/V1/customers/{customerId}/carts": {
      "post": {
        "tags": ["customers/{customerId}/carts"],
        "description": "Creates an empty cart and quote for a specified customer if customer does not have a cart yet.",
        "operationId": "PostV1CustomersCustomerIdCarts",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The customer ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/carts"
      }
    },
    "/V1/customers/{customerId}/confirm": {
      "get": {
        "tags": ["customers/{customerId}/confirm"],
        "description": "Gets the account confirmation status.",
        "operationId": "GetV1CustomersCustomerIdConfirm",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/confirm"
      }
    },
    "/V1/customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}": {
      "get": {
        "tags": ["customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}"],
        "description": "Check if password reset token is valid.",
        "operationId": "GetV1CustomersCustomerIdPasswordResetLinkTokenResetPasswordLinkToken",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "If null is given then a customer will be matched by the RP token.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resetPasswordLinkToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "True if the token is valid"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "True if the token is valid"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}"
      }
    },
    "/V1/customers/{customerId}/permissions/readonly": {
      "get": {
        "tags": ["customers/{customerId}/permissions/readonly"],
        "description": "Check if customer can be deleted.",
        "operationId": "GetV1CustomersCustomerIdPermissionsReadonly",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/permissions/readonly"
      }
    },
    "/V1/customers/{customerId}/shippingAddress": {
      "get": {
        "tags": ["customers/{customerId}/shippingAddress"],
        "description": "Retrieve default shipping address for the given customerId.",
        "operationId": "GetV1CustomersCustomerIdShippingAddress",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/shippingAddress"
      }
    },
    "/V1/customers/{email}/activate": {
      "put": {
        "tags": ["customers/{email}/activate"],
        "description": "Activate a customer account using a key that was sent in a confirmation email.",
        "operationId": "PutV1CustomersEmailActivate",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CustomersMeActivatePutv1customersmeactivatebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{email}/activate"
      }
    },
    "/V1/directory/countries": {
      "get": {
        "tags": ["directory/countries"],
        "description": "Get all countries and regions information for the store.",
        "operationId": "GetV1DirectoryCountries",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/directory-data-country-information-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/directory-data-country-information-interface"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "directory/countries"
      }
    },
    "/V1/directory/countries/{countryId}": {
      "get": {
        "tags": ["directory/countries/{countryId}"],
        "description": "Get country and region information for the store.",
        "operationId": "GetV1DirectoryCountriesCountryId",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/directory-data-country-information-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/directory-data-country-information-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "directory/countries/{countryId}"
      }
    },
    "/V1/directory/currency": {
      "get": {
        "tags": ["directory/currency"],
        "description": "Get currency information for the store.",
        "operationId": "GetV1DirectoryCurrency",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/directory-data-currency-information-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/directory-data-currency-information-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "directory/currency"
      }
    },
    "/V1/eav/attribute-sets": {
      "post": {
        "tags": ["eav/attribute-sets"],
        "description": "Create attribute set from data",
        "operationId": "PostV1EavAttributesets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["entityTypeCode", "attributeSet", "skeletonId"],
                "properties": {
                  "entityTypeCode": {
                    "type": "string"
                  },
                  "attributeSet": {
                    "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                  },
                  "skeletonId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["entityTypeCode", "attributeSet", "skeletonId"],
                "properties": {
                  "entityTypeCode": {
                    "type": "string"
                  },
                  "attributeSet": {
                    "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                  },
                  "skeletonId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "eav/attribute-sets"
      }
    },
    "/V1/eav/attribute-sets/list": {
      "get": {
        "tags": ["eav/attribute-sets/list"],
        "description": "Retrieve list of Attribute Sets This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#AttributeSetRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1EavAttributesetsList",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "eav/attribute-sets/list"
      }
    },
    "/V1/eav/attribute-sets/{attributeSetId}": {
      "get": {
        "tags": ["eav/attribute-sets/{attributeSetId}"],
        "description": "Retrieve attribute set information based on given ID",
        "operationId": "GetV1EavAttributesetsAttributeSetId",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "eav/attribute-sets/{attributeSetId}"
      },
      "delete": {
        "tags": ["eav/attribute-sets/{attributeSetId}"],
        "description": "Remove attribute set by given ID",
        "operationId": "DeleteV1EavAttributesetsAttributeSetId",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "eav/attribute-sets/{attributeSetId}"
      },
      "put": {
        "tags": ["eav/attribute-sets/{attributeSetId}"],
        "description": "Save attribute set data",
        "operationId": "PutV1EavAttributesetsAttributeSetId",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1EavAttributesetsAttributeSetIdPutv1eavattributesetsattributesetidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "eav/attribute-sets/{attributeSetId}"
      }
    },
    "/V1/eventing/eventSubscribe": {
      "post": {
        "tags": ["eventing/eventSubscribe"],
        "description": "Subscribes to the event.",
        "operationId": "PostV1EventingEventSubscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["event"],
                "properties": {
                  "event": {
                    "$ref": "#/components/schemas/adobe-commerce-events-client-data-event-data-interface"
                  },
                  "force": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["event"],
                "properties": {
                  "event": {
                    "$ref": "#/components/schemas/adobe-commerce-events-client-data-event-data-interface"
                  },
                  "force": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "eventing/eventSubscribe"
      }
    },
    "/V1/eventing/updateConfiguration": {
      "put": {
        "tags": ["eventing/updateConfiguration"],
        "description": "Updates eventing configuration",
        "operationId": "PutV1EventingUpdateConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["config"],
                "properties": {
                  "config": {
                    "$ref": "#/components/schemas/adobe-commerce-events-client-data-configuration-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["config"],
                "properties": {
                  "config": {
                    "$ref": "#/components/schemas/adobe-commerce-events-client-data-configuration-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "eventing/updateConfiguration"
      }
    },
    "/V1/gift-wrappings": {
      "post": {
        "tags": ["gift-wrappings"],
        "description": "Create/Update new gift wrapping with data object values",
        "operationId": "PostV1Giftwrappings",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1GiftwrappingsPostv1giftwrappingsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "gift-wrappings"
      },
      "get": {
        "tags": ["gift-wrappings"],
        "description": "Return list of gift wrapping data objects based on search criteria",
        "operationId": "GetV1Giftwrappings",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "gift-wrappings"
      }
    },
    "/V1/gift-wrappings/{id}": {
      "get": {
        "tags": ["gift-wrappings/{id}"],
        "description": "Return data object for specified wrapping ID and store.",
        "operationId": "GetV1GiftwrappingsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "gift-wrappings/{id}"
      },
      "delete": {
        "tags": ["gift-wrappings/{id}"],
        "description": "Delete gift wrapping",
        "operationId": "DeleteV1GiftwrappingsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "gift-wrappings/{id}"
      }
    },
    "/V1/gift-wrappings/{wrappingId}": {
      "put": {
        "tags": ["gift-wrappings/{wrappingId}"],
        "description": "Create/Update new gift wrapping with data object values",
        "operationId": "PutV1GiftwrappingsWrappingId",
        "parameters": [
          {
            "name": "wrappingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1GiftwrappingsPostv1giftwrappingsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "gift-wrappings/{wrappingId}"
      }
    },
    "/V1/giftregistry/mine/estimate-shipping-methods": {
      "post": {
        "tags": ["giftregistry/mine/estimate-shipping-methods"],
        "description": "Estimate shipping",
        "operationId": "PostV1GiftregistryMineEstimateshippingmethods",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1GiftregistryMineEstimateshippingmethodsPostv1giftregistrymineestimateshippingmethodsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "giftregistry/mine/estimate-shipping-methods"
      }
    },
    "/V1/guest-carts": {
      "post": {
        "tags": ["guest-carts"],
        "description": "Enable an customer or guest user to create an empty cart and quote for an anonymous customer.",
        "operationId": "PostV1Guestcarts",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Cart ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "Cart ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts"
      }
    },
    "/V1/guest-carts/{cartId}": {
      "get": {
        "tags": ["guest-carts/{cartId}"],
        "description": "Enable a guest user to return information for a specified cart.",
        "operationId": "GetV1GuestcartsCartId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}"
      },
      "put": {
        "tags": ["guest-carts/{cartId}"],
        "description": "Assign a specified customer to a specified shopping cart.",
        "operationId": "PutV1GuestcartsCartId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsCartIdPutv1cartscartidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}"
      }
    },
    "/V1/guest-carts/{cartId}/billing-address": {
      "get": {
        "tags": ["guest-carts/{cartId}/billing-address"],
        "description": "Return the billing address for a specified quote.",
        "operationId": "GetV1GuestcartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/billing-address"
      },
      "post": {
        "tags": ["guest-carts/{cartId}/billing-address"],
        "description": "Assign a specified billing address to a specified cart.",
        "operationId": "PostV1GuestcartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/billing-address"
      }
    },
    "/V1/guest-carts/{cartId}/collect-totals": {
      "put": {
        "tags": ["guest-carts/{cartId}/collect-totals"],
        "description": "Set shipping/billing methods and additional data for cart and collect totals for guest.",
        "operationId": "PutV1GuestcartsCartIdCollecttotals",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsMineCollecttotalsPutv1cartsminecollecttotalsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/collect-totals"
      }
    },
    "/V1/guest-carts/{cartId}/coupons": {
      "get": {
        "tags": ["guest-carts/{cartId}/coupons"],
        "description": "Return information for a coupon in a specified cart.",
        "operationId": "GetV1GuestcartsCartIdCoupons",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "The coupon code data."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "The coupon code data."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/coupons"
      },
      "delete": {
        "tags": ["guest-carts/{cartId}/coupons"],
        "description": "Delete a coupon from a specified cart.",
        "operationId": "DeleteV1GuestcartsCartIdCoupons",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/coupons"
      }
    },
    "/V1/guest-carts/{cartId}/coupons/{couponCode}": {
      "put": {
        "tags": ["guest-carts/{cartId}/coupons/{couponCode}"],
        "description": "Add a coupon by code to a specified cart.",
        "operationId": "PutV1GuestcartsCartIdCouponsCouponCode",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "couponCode",
            "in": "path",
            "required": true,
            "description": "The coupon code data.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/coupons/{couponCode}"
      }
    },
    "/V1/guest-carts/{cartId}/estimate-shipping-methods": {
      "post": {
        "tags": ["guest-carts/{cartId}/estimate-shipping-methods"],
        "description": "Estimate shipping by address and return list of available shipping methods",
        "operationId": "PostV1GuestcartsCartIdEstimateshippingmethods",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsPostv1cartsmineestimateshippingmethodsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/estimate-shipping-methods"
      }
    },
    "/V1/guest-carts/{cartId}/gift-message": {
      "get": {
        "tags": ["guest-carts/{cartId}/gift-message"],
        "description": "Return the gift message for a specified order.",
        "operationId": "GetV1GuestcartsCartIdGiftmessage",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/gift-message"
      },
      "post": {
        "tags": ["guest-carts/{cartId}/gift-message"],
        "description": "Set the gift message for an entire order.",
        "operationId": "PostV1GuestcartsCartIdGiftmessage",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineGiftmessagePostv1cartsminegiftmessagebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/gift-message"
      }
    },
    "/V1/guest-carts/{cartId}/gift-message/{itemId}": {
      "get": {
        "tags": ["guest-carts/{cartId}/gift-message/{itemId}"],
        "description": "Return the gift message for a specified item in a specified shopping cart.",
        "operationId": "GetV1GuestcartsCartIdGiftmessageItemId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The item ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/gift-message/{itemId}"
      },
      "post": {
        "tags": ["guest-carts/{cartId}/gift-message/{itemId}"],
        "description": "Set the gift message for a specified item in a specified shopping cart.",
        "operationId": "PostV1GuestcartsCartIdGiftmessageItemId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The item ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineGiftmessagePostv1cartsminegiftmessagebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/gift-message/{itemId}"
      }
    },
    "/V1/guest-carts/{cartId}/items": {
      "get": {
        "tags": ["guest-carts/{cartId}/items"],
        "description": "List items that are assigned to a specified cart.",
        "operationId": "GetV1GuestcartsCartIdItems",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "Array of items.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-cart-item-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/items"
      },
      "post": {
        "tags": ["guest-carts/{cartId}/items"],
        "description": "Add/update the specified cart item.",
        "operationId": "PostV1GuestcartsCartIdItems",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineItemsPostv1cartsmineitemsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/items"
      }
    },
    "/V1/guest-carts/{cartId}/items/{itemId}": {
      "put": {
        "tags": ["guest-carts/{cartId}/items/{itemId}"],
        "description": "Add/update the specified cart item.",
        "operationId": "PutV1GuestcartsCartIdItemsItemId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineItemsPostv1cartsmineitemsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/items/{itemId}"
      },
      "delete": {
        "tags": ["guest-carts/{cartId}/items/{itemId}"],
        "description": "Remove the specified item from the specified cart.",
        "operationId": "DeleteV1GuestcartsCartIdItemsItemId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The item ID of the item to be removed.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/items/{itemId}"
      }
    },
    "/V1/guest-carts/{cartId}/order": {
      "put": {
        "tags": ["guest-carts/{cartId}/order"],
        "description": "Place an order for a specified cart.",
        "operationId": "PutV1GuestcartsCartIdOrder",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsMineOrderPutv1cartsmineorderbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/order"
      }
    },
    "/V1/guest-carts/{cartId}/payment-information": {
      "post": {
        "tags": ["guest-carts/{cartId}/payment-information"],
        "description": "Set payment information and place order for a specified cart.",
        "operationId": "PostV1GuestcartsCartIdPaymentinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1GuestcartsCartIdPaymentinformationPostv1guestcartscartidpaymentinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/payment-information"
      },
      "get": {
        "tags": ["guest-carts/{cartId}/payment-information"],
        "description": "Get payment information",
        "operationId": "GetV1GuestcartsCartIdPaymentinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/payment-information"
      }
    },
    "/V1/guest-carts/{cartId}/payment-methods": {
      "get": {
        "tags": ["guest-carts/{cartId}/payment-methods"],
        "description": "List available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See https://developer.adobe.com/commerce/webapi/rest/attributes#GuestPaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1GuestcartsCartIdPaymentmethods",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "Array of payment methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-payment-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/payment-methods"
      }
    },
    "/V1/guest-carts/{cartId}/payment-order": {
      "post": {
        "tags": ["guest-carts/{cartId}/payment-order"],
        "description": "Create a payment order for guest customer",
        "operationId": "PostV1GuestcartsCartIdPaymentorder",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMinePaymentorderPostv1cartsminepaymentorderbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-order-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-order-interface"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/payment-order"
      }
    },
    "/V1/guest-carts/{cartId}/payment-order/{id}": {
      "get": {
        "tags": ["guest-carts/{cartId}/payment-order/{id}"],
        "description": "Get payment order for guest customer",
        "operationId": "GetV1GuestcartsCartIdPaymentorderId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-order-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-order-details-interface"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/payment-order/{id}"
      },
      "post": {
        "tags": ["guest-carts/{cartId}/payment-order/{id}"],
        "description": "Sync payment order for guest customer",
        "operationId": "PostV1GuestcartsCartIdPaymentorderId",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/payment-order/{id}"
      }
    },
    "/V1/guest-carts/{cartId}/selected-payment-method": {
      "get": {
        "tags": ["guest-carts/{cartId}/selected-payment-method"],
        "description": "Return the payment method for a specified shopping cart.",
        "operationId": "GetV1GuestcartsCartIdSelectedpaymentmethod",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/selected-payment-method"
      },
      "put": {
        "tags": ["guest-carts/{cartId}/selected-payment-method"],
        "description": "Add a specified payment method to a specified shopping cart.",
        "operationId": "PutV1GuestcartsCartIdSelectedpaymentmethod",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsMineSelectedpaymentmethodPutv1cartsmineselectedpaymentmethodbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Payment method ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Payment method ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/selected-payment-method"
      }
    },
    "/V1/guest-carts/{cartId}/set-payment-information": {
      "post": {
        "tags": ["guest-carts/{cartId}/set-payment-information"],
        "description": "Set payment information for a specified cart.",
        "operationId": "PostV1GuestcartsCartIdSetpaymentinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1GuestcartsCartIdPaymentinformationPostv1guestcartscartidpaymentinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/set-payment-information"
      }
    },
    "/V1/guest-carts/{cartId}/shipping-information": {
      "post": {
        "tags": ["guest-carts/{cartId}/shipping-information"],
        "description": "",
        "operationId": "PostV1GuestcartsCartIdShippinginformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineShippinginformationPostv1cartsmineshippinginformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/shipping-information"
      }
    },
    "/V1/guest-carts/{cartId}/shipping-methods": {
      "get": {
        "tags": ["guest-carts/{cartId}/shipping-methods"],
        "description": "List applicable shipping methods for a specified quote.",
        "operationId": "GetV1GuestcartsCartIdShippingmethods",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/shipping-methods"
      }
    },
    "/V1/guest-carts/{cartId}/totals": {
      "get": {
        "tags": ["guest-carts/{cartId}/totals"],
        "description": "Return quote totals data for a specified cart.",
        "operationId": "GetV1GuestcartsCartIdTotals",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/totals"
      }
    },
    "/V1/guest-carts/{cartId}/totals-information": {
      "post": {
        "tags": ["guest-carts/{cartId}/totals-information"],
        "description": "Calculate quote totals based on address and shipping method.",
        "operationId": "PostV1GuestcartsCartIdTotalsinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineTotalsinformationPostv1cartsminetotalsinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/totals-information"
      }
    },
    "/V1/guest-giftregistry/{cartId}/estimate-shipping-methods": {
      "post": {
        "tags": ["guest-giftregistry/{cartId}/estimate-shipping-methods"],
        "description": "Estimate shipping",
        "operationId": "PostV1GuestgiftregistryCartIdEstimateshippingmethods",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1GiftregistryMineEstimateshippingmethodsPostv1giftregistrymineestimateshippingmethodsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-giftregistry/{cartId}/estimate-shipping-methods"
      }
    },
    "/V1/hierarchy/move/{id}": {
      "put": {
        "tags": ["hierarchy/move/{id}"],
        "description": "Moves teams and users within the company structure.",
        "operationId": "PutV1HierarchyMoveId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["newParentId"],
                "properties": {
                  "newParentId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["newParentId"],
                "properties": {
                  "newParentId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "hierarchy/move/{id}"
      }
    },
    "/V1/hierarchy/{id}": {
      "get": {
        "tags": ["hierarchy/{id}"],
        "description": "Returns the list of teams and company users in the company structure.",
        "operationId": "GetV1HierarchyId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/company-data-hierarchy-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/company-data-hierarchy-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "hierarchy/{id}"
      }
    },
    "/V1/import/csv": {
      "post": {
        "tags": ["import/csv"],
        "description": "Start import operation",
        "operationId": "PostV1ImportCsv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["source"],
                "properties": {
                  "source": {
                    "$ref": "#/components/schemas/import-csv-api-data-localized-source-data-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["source"],
                "properties": {
                  "source": {
                    "$ref": "#/components/schemas/import-csv-api-data-localized-source-data-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "import/csv"
      }
    },
    "/V1/import/json": {
      "post": {
        "tags": ["import/json"],
        "description": "Starts import operation.",
        "operationId": "PostV1ImportJson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["source"],
                "properties": {
                  "source": {
                    "$ref": "#/components/schemas/import-json-api-data-source-data-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["source"],
                "properties": {
                  "source": {
                    "$ref": "#/components/schemas/import-json-api-data-source-data-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "import/json"
      }
    },
    "/V1/integration/admin/token": {
      "post": {
        "tags": ["integration/admin/token"],
        "description": "Create access token for admin given the admin credentials.",
        "operationId": "PostV1IntegrationAdminToken",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1IntegrationAdminTokenPostv1integrationadmintokenbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Token created"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "Token created"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "integration/admin/token"
      }
    },
    "/V1/integration/customer/revoke-customer-token": {
      "post": {
        "tags": ["integration/customer/revoke-customer-token"],
        "description": "Revoke token by customer id.",
        "operationId": "PostV1IntegrationCustomerRevokecustomertoken",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "integration/customer/revoke-customer-token"
      }
    },
    "/V1/integration/customer/token": {
      "post": {
        "tags": ["integration/customer/token"],
        "description": "Create access token for admin given the customer credentials.",
        "operationId": "PostV1IntegrationCustomerToken",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1IntegrationAdminTokenPostv1integrationadmintokenbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Token created"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "Token created"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "integration/customer/token"
      }
    },
    "/V1/inventory/are-product-salable-for-requested-qty/": {
      "get": {
        "tags": ["inventory/are-product-salable-for-requested-qty/"],
        "description": "Get whether products are salable in requested Qty for given set of SKUs in specified stock.",
        "operationId": "GetV1InventoryAreproductsalableforrequestedqty",
        "parameters": [
          {
            "name": "skuRequests[0][sku]",
            "in": "query",
            "description": "Product sku.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skuRequests[0][qty]",
            "in": "query",
            "description": "Product quantity.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "stockId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-for-requested-qty-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-for-requested-qty-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/are-product-salable-for-requested-qty/"
      }
    },
    "/V1/inventory/are-products-salable": {
      "get": {
        "tags": ["inventory/are-products-salable"],
        "description": "Get products salable status for given SKUs and given Stock.",
        "operationId": "GetV1InventoryAreproductssalable",
        "parameters": [
          {
            "name": "skus",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "stockId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/are-products-salable"
      }
    },
    "/V1/inventory/bulk-partial-source-transfer": {
      "post": {
        "tags": ["inventory/bulk-partial-source-transfer"],
        "description": "Run bulk partial inventory transfer for specified items.",
        "operationId": "PostV1InventoryBulkpartialsourcetransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["originSourceCode", "destinationSourceCode", "items"],
                "properties": {
                  "originSourceCode": {
                    "type": "string"
                  },
                  "destinationSourceCode": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/inventory-catalog-api-data-partial-inventory-transfer-item-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["originSourceCode", "destinationSourceCode", "items"],
                "properties": {
                  "originSourceCode": {
                    "type": "string"
                  },
                  "destinationSourceCode": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/inventory-catalog-api-data-partial-inventory-transfer-item-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/bulk-partial-source-transfer"
      }
    },
    "/V1/inventory/bulk-product-source-assign": {
      "post": {
        "tags": ["inventory/bulk-product-source-assign"],
        "description": "Run mass product to source assignment",
        "operationId": "PostV1InventoryBulkproductsourceassign",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryBulkproductsourceassignPostv1inventorybulkproductsourceassignbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/bulk-product-source-assign"
      }
    },
    "/V1/inventory/bulk-product-source-transfer": {
      "post": {
        "tags": ["inventory/bulk-product-source-transfer"],
        "description": "Run bulk inventory transfer",
        "operationId": "PostV1InventoryBulkproductsourcetransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["skus", "originSource", "destinationSource", "unassignFromOrigin"],
                "properties": {
                  "skus": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "originSource": {
                    "type": "string"
                  },
                  "destinationSource": {
                    "type": "string"
                  },
                  "unassignFromOrigin": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["skus", "originSource", "destinationSource", "unassignFromOrigin"],
                "properties": {
                  "skus": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "originSource": {
                    "type": "string"
                  },
                  "destinationSource": {
                    "type": "string"
                  },
                  "unassignFromOrigin": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/bulk-product-source-transfer"
      }
    },
    "/V1/inventory/bulk-product-source-unassign": {
      "post": {
        "tags": ["inventory/bulk-product-source-unassign"],
        "description": "Run mass product to source un-assignment",
        "operationId": "PostV1InventoryBulkproductsourceunassign",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryBulkproductsourceassignPostv1inventorybulkproductsourceassignbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/bulk-product-source-unassign"
      }
    },
    "/V1/inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}": {
      "get": {
        "tags": ["inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}"],
        "description": "Provides stock index export from inventory_stock_% table",
        "operationId": "GetV1InventoryDumpstockindexdataSalesChannelTypeSalesChannelCode",
        "parameters": [
          {
            "name": "salesChannelType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salesChannelCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-export-stock-api-data-product-stock-index-data-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-export-stock-api-data-product-stock-index-data-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}"
      }
    },
    "/V1/inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}": {
      "get": {
        "tags": ["inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}"],
        "description": "Export product stock data filtered by search criteria.",
        "operationId": "GetV1InventoryExportstocksalableqtySalesChannelTypeSalesChannelCode",
        "parameters": [
          {
            "name": "salesChannelType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salesChannelCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-export-stock-api-data-export-stock-salable-qty-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-export-stock-api-data-export-stock-salable-qty-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}"
      }
    },
    "/V1/inventory/get-distance": {
      "get": {
        "tags": ["inventory/get-distance"],
        "description": "Get distance between two points",
        "operationId": "GetV1InventoryGetdistance",
        "parameters": [
          {
            "name": "source[lat]",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "source[lng]",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "destination[lat]",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "destination[lng]",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-distance"
      }
    },
    "/V1/inventory/get-distance-provider-code": {
      "get": {
        "tags": ["inventory/get-distance-provider-code"],
        "description": "Get Default distance provider code",
        "operationId": "GetV1InventoryGetdistanceprovidercode",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-distance-provider-code"
      }
    },
    "/V1/inventory/get-latlng-from-address": {
      "get": {
        "tags": ["inventory/get-latlng-from-address"],
        "description": "Get latitude and longitude object from address",
        "operationId": "GetV1InventoryGetlatlngfromaddress",
        "parameters": [
          {
            "name": "address[country]",
            "in": "query",
            "description": "Shipping country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[postcode]",
            "in": "query",
            "description": "Shipping postcode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[street]",
            "in": "query",
            "description": "Shipping street address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[region]",
            "in": "query",
            "description": "Shipping region",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[city]",
            "in": "query",
            "description": "Shipping city",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-latlng-from-address"
      }
    },
    "/V1/inventory/get-latslngs-from-address": {
      "get": {
        "tags": ["inventory/get-latslngs-from-address"],
        "description": "Get all available latitude and longitude objects from address.",
        "operationId": "GetV1InventoryGetlatslngsfromaddress",
        "parameters": [
          {
            "name": "address[country]",
            "in": "query",
            "description": "Shipping country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[postcode]",
            "in": "query",
            "description": "Shipping postcode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[street]",
            "in": "query",
            "description": "Shipping street address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[region]",
            "in": "query",
            "description": "Shipping region",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[city]",
            "in": "query",
            "description": "Shipping city",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-latslngs-from-address"
      }
    },
    "/V1/inventory/get-product-salable-quantity/{sku}/{stockId}": {
      "get": {
        "tags": ["inventory/get-product-salable-quantity/{sku}/{stockId}"],
        "description": "Get Product Quantity for given SKU and Stock",
        "operationId": "GetV1InventoryGetproductsalablequantitySkuStockId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-product-salable-quantity/{sku}/{stockId}"
      }
    },
    "/V1/inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}": {
      "get": {
        "tags": ["inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}"],
        "description": "Get Sources assigned to Stock ordered by priority If Stock with given id doesn't exist then return an empty array",
        "operationId": "GetV1InventoryGetsourcesassignedtostockorderedbypriorityStockId",
        "parameters": [
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-source-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-source-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}"
      }
    },
    "/V1/inventory/in-store-pickup/pickup-locations/": {
      "get": {
        "tags": ["inventory/in-store-pickup/pickup-locations/"],
        "description": "Get Pickup Locations according to the results of filtration by Search Request.",
        "operationId": "GetV1InventoryInstorepickupPickuplocations",
        "parameters": [
          {
            "name": "searchRequest[area][radius]",
            "in": "query",
            "description": "Search radius in KM.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchRequest[area][searchTerm]",
            "in": "query",
            "description": "Search term string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][country][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][country][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][postcode][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][postcode][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][region][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][region][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][regionId][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][regionId][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][city][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][city][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][street][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][street][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][name][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][name][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][pickupLocationCode][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][pickupLocationCode][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchRequest[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchRequest[scopeType]",
            "in": "query",
            "description": "Sales Channel Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[scopeCode]",
            "in": "query",
            "description": "Sales Channel code.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[sort][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[sort][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[extensionAttributes][productsInfo][0][sku]",
            "in": "query",
            "description": "Product SKU.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-result-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/in-store-pickup/pickup-locations/"
      }
    },
    "/V1/inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}": {
      "get": {
        "tags": ["inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}"],
        "description": "Get is product salable for given SKU in a given Stock for a certain Qty",
        "operationId": "GetV1InventoryIsproductsalableforrequestedqtySkuStockIdRequestedQty",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "requestedQty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-sales-api-data-product-salable-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-sales-api-data-product-salable-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}"
      }
    },
    "/V1/inventory/is-product-salable/{sku}/{stockId}": {
      "get": {
        "tags": ["inventory/is-product-salable/{sku}/{stockId}"],
        "description": "Get is product in salable for given SKU in a given Stock",
        "operationId": "GetV1InventoryIsproductsalableSkuStockId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/is-product-salable/{sku}/{stockId}"
      }
    },
    "/V1/inventory/low-quantity-notification": {
      "post": {
        "tags": ["inventory/low-quantity-notification"],
        "description": "",
        "operationId": "PostV1InventoryLowquantitynotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["sourceItemConfigurations"],
                "properties": {
                  "sourceItemConfigurations": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["sourceItemConfigurations"],
                "properties": {
                  "sourceItemConfigurations": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/low-quantity-notification"
      }
    },
    "/V1/inventory/low-quantity-notification/{sourceCode}/{sku}": {
      "get": {
        "tags": ["inventory/low-quantity-notification/{sourceCode}/{sku}"],
        "description": "Get the source item configuration",
        "operationId": "GetV1InventoryLowquantitynotificationSourceCodeSku",
        "parameters": [
          {
            "name": "sourceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/low-quantity-notification/{sourceCode}/{sku}"
      }
    },
    "/V1/inventory/low-quantity-notifications-delete": {
      "post": {
        "tags": ["inventory/low-quantity-notifications-delete"],
        "description": "Delete multiple source items configuration for low quantity",
        "operationId": "PostV1InventoryLowquantitynotificationsdelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/low-quantity-notifications-delete"
      }
    },
    "/V1/inventory/source-items": {
      "get": {
        "tags": ["inventory/source-items"],
        "description": "Find SourceItems by SearchCriteria We need to have this method for direct work with SourceItems because this object contains additional data like as qty, status (for example can be searchable by additional field)",
        "operationId": "GetV1InventorySourceitems",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-item-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-item-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/source-items"
      },
      "post": {
        "tags": ["inventory/source-items"],
        "description": "Save Multiple Source item data",
        "operationId": "PostV1InventorySourceitems",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/source-items"
      }
    },
    "/V1/inventory/source-items-delete": {
      "post": {
        "tags": ["inventory/source-items-delete"],
        "description": "Delete Multiple Source item data",
        "operationId": "PostV1InventorySourceitemsdelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/source-items-delete"
      }
    },
    "/V1/inventory/source-selection-algorithm-list": {
      "get": {
        "tags": ["inventory/source-selection-algorithm-list"],
        "description": "",
        "operationId": "GetV1InventorySourceselectionalgorithmlist",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-algorithm-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-algorithm-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/source-selection-algorithm-list"
      }
    },
    "/V1/inventory/source-selection-algorithm-result": {
      "post": {
        "tags": ["inventory/source-selection-algorithm-result"],
        "description": "",
        "operationId": "PostV1InventorySourceselectionalgorithmresult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["inventoryRequest", "algorithmCode"],
                "properties": {
                  "inventoryRequest": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-inventory-request-interface"
                  },
                  "algorithmCode": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["inventoryRequest", "algorithmCode"],
                "properties": {
                  "inventoryRequest": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-inventory-request-interface"
                  },
                  "algorithmCode": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/source-selection-algorithm-result"
      }
    },
    "/V1/inventory/sources": {
      "get": {
        "tags": ["inventory/sources"],
        "description": "Find Sources by SearchCriteria SearchCriteria is not required because load all stocks is useful case",
        "operationId": "GetV1InventorySources",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/sources"
      },
      "post": {
        "tags": ["inventory/sources"],
        "description": "Save Source data",
        "operationId": "PostV1InventorySources",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventorySourcesPostv1inventorysourcesbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/sources"
      }
    },
    "/V1/inventory/sources/{sourceCode}": {
      "get": {
        "tags": ["inventory/sources/{sourceCode}"],
        "description": "Get Source data by given code. If you want to create plugin on get method, also you need to create separate plugin on getList method, because entity loading way is different for these methods",
        "operationId": "GetV1InventorySourcesSourceCode",
        "parameters": [
          {
            "name": "sourceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/sources/{sourceCode}"
      },
      "put": {
        "tags": ["inventory/sources/{sourceCode}"],
        "description": "Save Source data",
        "operationId": "PutV1InventorySourcesSourceCode",
        "parameters": [
          {
            "name": "sourceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventorySourcesPostv1inventorysourcesbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/sources/{sourceCode}"
      }
    },
    "/V1/inventory/stock-resolver/{type}/{code}": {
      "get": {
        "tags": ["inventory/stock-resolver/{type}/{code}"],
        "description": "Resolve Stock by Sales Channel type and code",
        "operationId": "GetV1InventoryStockresolverTypeCode",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stock-resolver/{type}/{code}"
      }
    },
    "/V1/inventory/stock-source-links": {
      "get": {
        "tags": ["inventory/stock-source-links"],
        "description": "Find StockSourceLink list by given SearchCriteria",
        "operationId": "GetV1InventoryStocksourcelinks",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-source-link-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-source-link-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stock-source-links"
      },
      "post": {
        "tags": ["inventory/stock-source-links"],
        "description": "Save StockSourceLink list data",
        "operationId": "PostV1InventoryStocksourcelinks",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryStocksourcelinksPostv1inventorystocksourcelinksbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stock-source-links"
      }
    },
    "/V1/inventory/stock-source-links-delete": {
      "post": {
        "tags": ["inventory/stock-source-links-delete"],
        "description": "Remove StockSourceLink list list",
        "operationId": "PostV1InventoryStocksourcelinksdelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryStocksourcelinksPostv1inventorystocksourcelinksbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stock-source-links-delete"
      }
    },
    "/V1/inventory/stocks": {
      "get": {
        "tags": ["inventory/stocks"],
        "description": "Find Stocks by given SearchCriteria SearchCriteria is not required because load all stocks is useful case",
        "operationId": "GetV1InventoryStocks",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stocks"
      },
      "post": {
        "tags": ["inventory/stocks"],
        "description": "Save Stock data",
        "operationId": "PostV1InventoryStocks",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryStocksPostv1inventorystocksbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stocks"
      }
    },
    "/V1/inventory/stocks/{stockId}": {
      "get": {
        "tags": ["inventory/stocks/{stockId}"],
        "description": "Get Stock data by given stockId. If you want to create plugin on get method, also you need to create separate plugin on getList method, because entity loading way is different for these methods",
        "operationId": "GetV1InventoryStocksStockId",
        "parameters": [
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stocks/{stockId}"
      },
      "delete": {
        "tags": ["inventory/stocks/{stockId}"],
        "description": "Delete the Stock data by stockId. If stock is not found do nothing",
        "operationId": "DeleteV1InventoryStocksStockId",
        "parameters": [
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stocks/{stockId}"
      },
      "put": {
        "tags": ["inventory/stocks/{stockId}"],
        "description": "Save Stock data",
        "operationId": "PutV1InventoryStocksStockId",
        "parameters": [
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryStocksPostv1inventorystocksbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stocks/{stockId}"
      }
    },
    "/V1/invoice/{invoiceId}/refund": {
      "post": {
        "tags": ["invoice/{invoiceId}/refund"],
        "description": "Create refund for invoice",
        "operationId": "PostV1InvoiceInvoiceIdRefund",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-interface"
                    }
                  },
                  "isOnline": {
                    "type": "boolean"
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-interface"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-interface"
                    }
                  },
                  "isOnline": {
                    "type": "boolean"
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-interface"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoice/{invoiceId}/refund"
      }
    },
    "/V1/invoices": {
      "get": {
        "tags": ["invoices"],
        "description": "Lists invoices that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#InvoiceRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1Invoices",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices"
      }
    },
    "/V1/invoices/": {
      "post": {
        "tags": ["invoices/"],
        "description": "Performs persist operations for a specified invoice.",
        "operationId": "PostV1Invoices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/"
      }
    },
    "/V1/invoices/comments": {
      "post": {
        "tags": ["invoices/comments"],
        "description": "Performs persist operations for a specified invoice comment.",
        "operationId": "PostV1InvoicesComments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/comments"
      }
    },
    "/V1/invoices/{id}": {
      "get": {
        "tags": ["invoices/{id}"],
        "description": "Loads a specified invoice.",
        "operationId": "GetV1InvoicesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The invoice ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/{id}"
      }
    },
    "/V1/invoices/{id}/capture": {
      "post": {
        "tags": ["invoices/{id}/capture"],
        "description": "Sets invoice capture.",
        "operationId": "PostV1InvoicesIdCapture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/{id}/capture"
      }
    },
    "/V1/invoices/{id}/comments": {
      "get": {
        "tags": ["invoices/{id}/comments"],
        "description": "Lists comments for a specified invoice.",
        "operationId": "GetV1InvoicesIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The invoice ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/{id}/comments"
      }
    },
    "/V1/invoices/{id}/emails": {
      "post": {
        "tags": ["invoices/{id}/emails"],
        "description": "Emails a user a specified invoice.",
        "operationId": "PostV1InvoicesIdEmails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The invoice ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/{id}/emails"
      }
    },
    "/V1/invoices/{id}/void": {
      "post": {
        "tags": ["invoices/{id}/void"],
        "description": "Voids a specified invoice.",
        "operationId": "PostV1InvoicesIdVoid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The invoice ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/{id}/void"
      }
    },
    "/V1/modules": {
      "get": {
        "tags": ["modules"],
        "description": "Returns an array of enabled modules",
        "operationId": "GetV1Modules",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "modules"
      }
    },
    "/V1/negotiable-cart-item-note": {
      "post": {
        "tags": ["negotiable-cart-item-note"],
        "description": "Set the note for an item in negotiable quote.",
        "operationId": "PostV1Negotiablecartitemnote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["itemNote"],
                "properties": {
                  "itemNote": {
                    "$ref": "#/components/schemas/negotiable-quote-data-item-note-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["itemNote"],
                "properties": {
                  "itemNote": {
                    "$ref": "#/components/schemas/negotiable-quote-data-item-note-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-cart-item-note"
      }
    },
    "/V1/negotiable-cart-item-note/search": {
      "get": {
        "tags": ["negotiable-cart-item-note/search"],
        "description": "Get list of item notes",
        "operationId": "GetV1NegotiablecartitemnoteSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/negotiable-quote-data-item-note-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/negotiable-quote-data-item-note-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-cart-item-note/search"
      }
    },
    "/V1/negotiable-cart-item-note/{noteId}": {
      "get": {
        "tags": ["negotiable-cart-item-note/{noteId}"],
        "description": "Get item note by ID",
        "operationId": "GetV1NegotiablecartitemnoteNoteId",
        "parameters": [
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/negotiable-quote-data-item-note-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/negotiable-quote-data-item-note-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-cart-item-note/{noteId}"
      },
      "delete": {
        "tags": ["negotiable-cart-item-note/{noteId}"],
        "description": "Delete item note by ID.",
        "operationId": "DeleteV1NegotiablecartitemnoteNoteId",
        "parameters": [
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-cart-item-note/{noteId}"
      }
    },
    "/V1/negotiable-carts/{cartId}/billing-address": {
      "get": {
        "tags": ["negotiable-carts/{cartId}/billing-address"],
        "description": "Returns the billing address for a specified quote.",
        "operationId": "GetV1NegotiablecartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/billing-address"
      },
      "post": {
        "tags": ["negotiable-carts/{cartId}/billing-address"],
        "description": "Assigns a specified billing address to a specified cart.",
        "operationId": "PostV1NegotiablecartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/billing-address"
      }
    },
    "/V1/negotiable-carts/{cartId}/coupons": {
      "delete": {
        "tags": ["negotiable-carts/{cartId}/coupons"],
        "description": "Deletes a coupon from a specified cart.",
        "operationId": "DeleteV1NegotiablecartsCartIdCoupons",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/coupons"
      }
    },
    "/V1/negotiable-carts/{cartId}/coupons/{couponCode}": {
      "put": {
        "tags": ["negotiable-carts/{cartId}/coupons/{couponCode}"],
        "description": "Adds a coupon by code to a specified cart.",
        "operationId": "PutV1NegotiablecartsCartIdCouponsCouponCode",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "couponCode",
            "in": "path",
            "required": true,
            "description": "The coupon code data.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/coupons/{couponCode}"
      }
    },
    "/V1/negotiable-carts/{cartId}/estimate-shipping-methods": {
      "post": {
        "tags": ["negotiable-carts/{cartId}/estimate-shipping-methods"],
        "description": "Estimate shipping by address and return list of available shipping methods",
        "operationId": "PostV1NegotiablecartsCartIdEstimateshippingmethods",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsPostv1cartsmineestimateshippingmethodsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/estimate-shipping-methods"
      }
    },
    "/V1/negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id": {
      "post": {
        "tags": ["negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id"],
        "description": "Estimate shipping",
        "operationId": "PostV1NegotiablecartsCartIdEstimateshippingmethodsbyaddressid",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsbyaddressidPostv1cartsmineestimateshippingmethodsbyaddressidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id"
      }
    },
    "/V1/negotiable-carts/{cartId}/giftCards": {
      "post": {
        "tags": ["negotiable-carts/{cartId}/giftCards"],
        "description": "",
        "operationId": "PostV1NegotiablecartsCartIdGiftCards",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsGuestcartsCartIdGiftCardsPostv1cartsguestcartscartidgiftcardsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/giftCards"
      }
    },
    "/V1/negotiable-carts/{cartId}/giftCards/{giftCardCode}": {
      "delete": {
        "tags": ["negotiable-carts/{cartId}/giftCards/{giftCardCode}"],
        "description": "Remove GiftCard Account entity",
        "operationId": "DeleteV1NegotiablecartsCartIdGiftCardsGiftCardCode",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "giftCardCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/giftCards/{giftCardCode}"
      }
    },
    "/V1/negotiable-carts/{cartId}/payment-information": {
      "post": {
        "tags": ["negotiable-carts/{cartId}/payment-information"],
        "description": "Set payment information and place order for a specified cart.",
        "operationId": "PostV1NegotiablecartsCartIdPaymentinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMinePaymentinformationPostv1cartsminepaymentinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/payment-information"
      },
      "get": {
        "tags": ["negotiable-carts/{cartId}/payment-information"],
        "description": "Get payment information",
        "operationId": "GetV1NegotiablecartsCartIdPaymentinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/payment-information"
      }
    },
    "/V1/negotiable-carts/{cartId}/set-payment-information": {
      "post": {
        "tags": ["negotiable-carts/{cartId}/set-payment-information"],
        "description": "Set payment information for a specified cart.",
        "operationId": "PostV1NegotiablecartsCartIdSetpaymentinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMinePaymentinformationPostv1cartsminepaymentinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/set-payment-information"
      }
    },
    "/V1/negotiable-carts/{cartId}/shipping-information": {
      "post": {
        "tags": ["negotiable-carts/{cartId}/shipping-information"],
        "description": "",
        "operationId": "PostV1NegotiablecartsCartIdShippinginformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineShippinginformationPostv1cartsmineshippinginformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/shipping-information"
      }
    },
    "/V1/negotiable-carts/{cartId}/totals": {
      "get": {
        "tags": ["negotiable-carts/{cartId}/totals"],
        "description": "Returns quote totals data for a specified cart.",
        "operationId": "GetV1NegotiablecartsCartIdTotals",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/totals"
      }
    },
    "/V1/negotiableQuote/attachmentContent": {
      "get": {
        "tags": ["negotiableQuote/attachmentContent"],
        "description": "Returns content for one or more files attached on the quote comment.",
        "operationId": "GetV1NegotiableQuoteAttachmentContent",
        "parameters": [
          {
            "name": "attachmentIds",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuote/attachmentContent"
      }
    },
    "/V1/negotiableQuote/decline": {
      "post": {
        "tags": ["negotiableQuote/decline"],
        "description": "Decline the B2B quote. All custom pricing will be removed from this quote. The buyer will be able to place an order using their standard catalog prices and discounts.",
        "operationId": "PostV1NegotiableQuoteDecline",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["quoteId", "reason"],
                "properties": {
                  "quoteId": {
                    "type": "integer"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["quoteId", "reason"],
                "properties": {
                  "quoteId": {
                    "type": "integer"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuote/decline"
      }
    },
    "/V1/negotiableQuote/draft": {
      "post": {
        "tags": ["negotiableQuote/draft"],
        "description": "Create a new empty B2B quote with NegotiableQuoteInterface::STATUS_DRAFT_BY_ADMIN status.",
        "operationId": "PostV1NegotiableQuoteDraft",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["customerId"],
                "properties": {
                  "customerId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["customerId"],
                "properties": {
                  "customerId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Quote Id"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Quote Id"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuote/draft"
      }
    },
    "/V1/negotiableQuote/pricesUpdated": {
      "post": {
        "tags": ["negotiableQuote/pricesUpdated"],
        "description": "Refreshes item prices, taxes, discounts, cart rules in the negotiable quote as per the latest changes in the catalog / shared catalog and in the price rules. Depending on the negotiable quote state and totals, all or just some of quote numbers will be recalculated. 'Update Prices' parameter forces refresh on any quote that is not locked for admin user, including the quotes with a negotiated price. The request can be applied to one or more quotes at the same time.",
        "operationId": "PostV1NegotiableQuotePricesUpdated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["quoteIds"],
                "properties": {
                  "quoteIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["quoteIds"],
                "properties": {
                  "quoteIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuote/pricesUpdated"
      }
    },
    "/V1/negotiableQuote/request": {
      "post": {
        "tags": ["negotiableQuote/request"],
        "description": "Create a B2B quote based on a regular Magento quote. If the B2B quote requires a shipping address (for negotiation or tax calculations), add it to the regular quote before you create a B2B quote.",
        "operationId": "PostV1NegotiableQuoteRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["quoteId", "quoteName"],
                "properties": {
                  "quoteId": {
                    "type": "integer"
                  },
                  "quoteName": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["quoteId", "quoteName"],
                "properties": {
                  "quoteId": {
                    "type": "integer"
                  },
                  "quoteName": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuote/request"
      }
    },
    "/V1/negotiableQuote/submitToCustomer": {
      "post": {
        "tags": ["negotiableQuote/submitToCustomer"],
        "description": "Submit the B2B quote to the customer. The quote status for the customer will be changed to 'Updated', and the customer can work with the quote.",
        "operationId": "PostV1NegotiableQuoteSubmitToCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["quoteId"],
                "properties": {
                  "quoteId": {
                    "type": "integer"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["quoteId"],
                "properties": {
                  "quoteId": {
                    "type": "integer"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuote/submitToCustomer"
      }
    },
    "/V1/negotiableQuote/{quoteId}": {
      "put": {
        "tags": ["negotiableQuote/{quoteId}"],
        "description": "Save quote",
        "operationId": "PutV1NegotiableQuoteQuoteId",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CartsMinePutv1cartsminebody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuote/{quoteId}"
      }
    },
    "/V1/negotiableQuote/{quoteId}/comments": {
      "get": {
        "tags": ["negotiableQuote/{quoteId}/comments"],
        "description": "Returns comments for a specified negotiable quote.",
        "operationId": "GetV1NegotiableQuoteQuoteIdComments",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "description": "Negotiable Quote ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of quote comments.",
                  "items": {
                    "$ref": "#/components/schemas/negotiable-quote-data-comment-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of quote comments.",
                  "items": {
                    "$ref": "#/components/schemas/negotiable-quote-data-comment-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuote/{quoteId}/comments"
      }
    },
    "/V1/negotiableQuote/{quoteId}/shippingMethod": {
      "put": {
        "tags": ["negotiableQuote/{quoteId}/shippingMethod"],
        "description": "Updates the shipping method on a negotiable quote.",
        "operationId": "PutV1NegotiableQuoteQuoteIdShippingMethod",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "description": "Negotiable Quote id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["shippingMethod"],
                "properties": {
                  "shippingMethod": {
                    "type": "string",
                    "description": "The shipping method code."
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["shippingMethod"],
                "properties": {
                  "shippingMethod": {
                    "type": "string",
                    "description": "The shipping method code."
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuote/{quoteId}/shippingMethod"
      }
    },
    "/V1/order/notify-orders-are-ready-for-pickup": {
      "post": {
        "tags": ["order/notify-orders-are-ready-for-pickup"],
        "description": "Notify customer that the orders is ready for pickup.",
        "operationId": "PostV1OrderNotifyordersarereadyforpickup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["orderIds"],
                "properties": {
                  "orderIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["orderIds"],
                "properties": {
                  "orderIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-in-store-pickup-sales-api-data-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-in-store-pickup-sales-api-data-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "order/notify-orders-are-ready-for-pickup"
      }
    },
    "/V1/order/{orderId}/invoice": {
      "post": {
        "tags": ["order/{orderId}/invoice"],
        "description": "",
        "operationId": "PostV1OrderOrderIdInvoice",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "capture": {
                    "type": "boolean"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-invoice-item-creation-interface"
                    }
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-creation-interface"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-invoice-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "capture": {
                    "type": "boolean"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-invoice-item-creation-interface"
                    }
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-creation-interface"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-invoice-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "order/{orderId}/invoice"
      }
    },
    "/V1/order/{orderId}/refund": {
      "post": {
        "tags": ["order/{orderId}/refund"],
        "description": "Create offline refund for order",
        "operationId": "PostV1OrderOrderIdRefund",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-interface"
                    }
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-interface"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-interface"
                    }
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-interface"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "order/{orderId}/refund"
      }
    },
    "/V1/order/{orderId}/ship": {
      "post": {
        "tags": ["order/{orderId}/ship"],
        "description": "Creates new Shipment for given Order.",
        "operationId": "PostV1OrderOrderIdShip",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-item-creation-interface"
                    }
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-shipment-comment-creation-interface"
                  },
                  "tracks": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-track-creation-interface"
                    }
                  },
                  "packages": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-package-creation-interface"
                    }
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-shipment-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-item-creation-interface"
                    }
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-shipment-comment-creation-interface"
                  },
                  "tracks": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-track-creation-interface"
                    }
                  },
                  "packages": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-shipment-package-creation-interface"
                    }
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-shipment-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Id of created Shipment."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Id of created Shipment."
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "order/{orderId}/ship"
      }
    },
    "/V1/orders": {
      "get": {
        "tags": ["orders"],
        "description": "Lists orders that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#OrderRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1Orders",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders"
      },
      "post": {
        "tags": ["orders"],
        "description": "Performs persist operations for a specified order.",
        "operationId": "PostV1Orders",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1OrdersPostv1ordersbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders"
      }
    },
    "/V1/orders/create": {
      "put": {
        "tags": ["orders/create"],
        "description": "Performs persist operations for a specified order.",
        "operationId": "PutV1OrdersCreate",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1OrdersPostv1ordersbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/create"
      }
    },
    "/V1/orders/items": {
      "get": {
        "tags": ["orders/items"],
        "description": "Lists order items that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#OrderItemRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1OrdersItems",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-item-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-item-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/items"
      }
    },
    "/V1/orders/items/{id}": {
      "get": {
        "tags": ["orders/items/{id}"],
        "description": "Loads a specified order item.",
        "operationId": "GetV1OrdersItemsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The order item ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-item-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/items/{id}"
      }
    },
    "/V1/orders/{id}": {
      "get": {
        "tags": ["orders/{id}"],
        "description": "Loads a specified order.",
        "operationId": "GetV1OrdersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The order ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/{id}"
      }
    },
    "/V1/orders/{id}/cancel": {
      "post": {
        "tags": ["orders/{id}/cancel"],
        "description": "Cancels a specified order.",
        "operationId": "PostV1OrdersIdCancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The order ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/{id}/cancel"
      }
    },
    "/V1/orders/{id}/comments": {
      "post": {
        "tags": ["orders/{id}/comments"],
        "description": "Adds a comment to a specified order.",
        "operationId": "PostV1OrdersIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The order ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["statusHistory"],
                "properties": {
                  "statusHistory": {
                    "$ref": "#/components/schemas/sales-data-order-status-history-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["statusHistory"],
                "properties": {
                  "statusHistory": {
                    "$ref": "#/components/schemas/sales-data-order-status-history-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/{id}/comments"
      },
      "get": {
        "tags": ["orders/{id}/comments"],
        "description": "Lists comments for a specified order.",
        "operationId": "GetV1OrdersIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The order ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-status-history-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-status-history-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/{id}/comments"
      }
    },
    "/V1/orders/{id}/emails": {
      "post": {
        "tags": ["orders/{id}/emails"],
        "description": "Emails a user a specified order.",
        "operationId": "PostV1OrdersIdEmails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The order ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/{id}/emails"
      }
    },
    "/V1/orders/{id}/hold": {
      "post": {
        "tags": ["orders/{id}/hold"],
        "description": "Holds a specified order.",
        "operationId": "PostV1OrdersIdHold",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The order ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/{id}/hold"
      }
    },
    "/V1/orders/{id}/statuses": {
      "get": {
        "tags": ["orders/{id}/statuses"],
        "description": "Gets the status for a specified order.",
        "operationId": "GetV1OrdersIdStatuses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The order ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Order status."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "Order status."
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/{id}/statuses"
      }
    },
    "/V1/orders/{id}/unhold": {
      "post": {
        "tags": ["orders/{id}/unhold"],
        "description": "Releases a specified order from hold status.",
        "operationId": "PostV1OrdersIdUnhold",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The order ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/{id}/unhold"
      }
    },
    "/V1/orders/{parent_id}": {
      "put": {
        "tags": ["orders/{parent_id}"],
        "description": "Performs persist operations for a specified order address.",
        "operationId": "PutV1OrdersParent_id",
        "parameters": [
          {
            "name": "parent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-order-address-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-order-address-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-order-address-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "orders/{parent_id}"
      }
    },
    "/V1/payments-config/apple-pay/{location}": {
      "get": {
        "tags": ["payments-config/apple-pay/{location}"],
        "description": "Get Apple Pay Config.",
        "operationId": "GetV1PaymentsconfigApplepayLocation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "description": "sdk location.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-apple-pay-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-apple-pay-interface"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "payments-config/apple-pay/{location}"
      }
    },
    "/V1/payments-config/hosted-fields/{location}": {
      "get": {
        "tags": ["payments-config/hosted-fields/{location}"],
        "description": "Get Hosted Fields Config.",
        "operationId": "GetV1PaymentsconfigHostedfieldsLocation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "description": "sdk location.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-hosted-fields-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-hosted-fields-interface"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "payments-config/hosted-fields/{location}"
      }
    },
    "/V1/payments-config/smart-buttons/{location}": {
      "get": {
        "tags": ["payments-config/smart-buttons/{location}"],
        "description": "Get Smart Buttons Config.",
        "operationId": "GetV1PaymentsconfigSmartbuttonsLocation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "description": "sdk location.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-smart-buttons-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-smart-buttons-interface"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "payments-config/smart-buttons/{location}"
      }
    },
    "/V1/payments-config/{location}": {
      "get": {
        "tags": ["payments-config/{location}"],
        "description": "Get Config.",
        "operationId": "GetV1PaymentsconfigLocation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "description": "sdk location.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-payment-config-response-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-payment-config-response-interface"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "payments-config/{location}"
      }
    },
    "/V1/payments-sdk/{location}": {
      "get": {
        "tags": ["payments-sdk/{location}"],
        "description": "Get payment sdk url by location",
        "operationId": "GetV1PaymentssdkLocation",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/payment-services-paypal-data-payment-sdk-params-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/payment-services-paypal-data-payment-sdk-params-interface"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "payments-sdk/{location}"
      }
    },
    "/V1/payments-sdk/{location}/{methodCode}": {
      "get": {
        "tags": ["payments-sdk/{location}/{methodCode}"],
        "description": "Get payment sdk url by location and methodCode",
        "operationId": "GetV1PaymentssdkLocationMethodCode",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "methodCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-sdk-params-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/payment-services-paypal-data-payment-sdk-params-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "payments-sdk/{location}/{methodCode}"
      }
    },
    "/V1/products": {
      "post": {
        "tags": ["products"],
        "description": "Create product",
        "operationId": "PostV1Products",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsPostv1productsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products"
      },
      "get": {
        "tags": ["products"],
        "description": "Get product list",
        "operationId": "GetV1Products",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products"
      }
    },
    "/V1/products-render-info": {
      "get": {
        "tags": ["products-render-info"],
        "description": "Collect and retrieve the list of product render info. This info contains raw prices and formatted prices, product name, stock status, store_id, etc.",
        "operationId": "GetV1Productsrenderinfo",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-render-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-render-search-results-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products-render-info"
      }
    },
    "/V1/products/attribute-sets": {
      "post": {
        "tags": ["products/attribute-sets"],
        "description": "Create attribute set from data",
        "operationId": "PostV1ProductsAttributesets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["attributeSet", "skeletonId"],
                "properties": {
                  "attributeSet": {
                    "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                  },
                  "skeletonId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["attributeSet", "skeletonId"],
                "properties": {
                  "attributeSet": {
                    "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                  },
                  "skeletonId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets"
      }
    },
    "/V1/products/attribute-sets/attributes": {
      "post": {
        "tags": ["products/attribute-sets/attributes"],
        "description": "Assign attribute to attribute set",
        "operationId": "PostV1ProductsAttributesetsAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["attributeSetId", "attributeGroupId", "attributeCode", "sortOrder"],
                "properties": {
                  "attributeSetId": {
                    "type": "integer"
                  },
                  "attributeGroupId": {
                    "type": "integer"
                  },
                  "attributeCode": {
                    "type": "string"
                  },
                  "sortOrder": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["attributeSetId", "attributeGroupId", "attributeCode", "sortOrder"],
                "properties": {
                  "attributeSetId": {
                    "type": "integer"
                  },
                  "attributeGroupId": {
                    "type": "integer"
                  },
                  "attributeCode": {
                    "type": "string"
                  },
                  "sortOrder": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/attributes"
      }
    },
    "/V1/products/attribute-sets/groups": {
      "post": {
        "tags": ["products/attribute-sets/groups"],
        "description": "Save attribute group",
        "operationId": "PostV1ProductsAttributesetsGroups",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesetsGroupsPostv1productsattributesetsgroupsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/groups"
      }
    },
    "/V1/products/attribute-sets/groups/list": {
      "get": {
        "tags": ["products/attribute-sets/groups/list"],
        "description": "Retrieve list of attribute groups",
        "operationId": "GetV1ProductsAttributesetsGroupsList",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-search-results-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/groups/list"
      }
    },
    "/V1/products/attribute-sets/groups/{groupId}": {
      "delete": {
        "tags": ["products/attribute-sets/groups/{groupId}"],
        "description": "Remove attribute group by id",
        "operationId": "DeleteV1ProductsAttributesetsGroupsGroupId",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/groups/{groupId}"
      }
    },
    "/V1/products/attribute-sets/sets/list": {
      "get": {
        "tags": ["products/attribute-sets/sets/list"],
        "description": "Retrieve list of Attribute Sets",
        "operationId": "GetV1ProductsAttributesetsSetsList",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/sets/list"
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}": {
      "get": {
        "tags": ["products/attribute-sets/{attributeSetId}"],
        "description": "Retrieve attribute set information based on given ID",
        "operationId": "GetV1ProductsAttributesetsAttributeSetId",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}"
      },
      "delete": {
        "tags": ["products/attribute-sets/{attributeSetId}"],
        "description": "Remove attribute set by given ID",
        "operationId": "DeleteV1ProductsAttributesetsAttributeSetId",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}"
      },
      "put": {
        "tags": ["products/attribute-sets/{attributeSetId}"],
        "description": "Save attribute set data",
        "operationId": "PutV1ProductsAttributesetsAttributeSetId",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1EavAttributesetsAttributeSetIdPutv1eavattributesetsattributesetidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}"
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}/attributes": {
      "get": {
        "tags": ["products/attribute-sets/{attributeSetId}/attributes"],
        "description": "Retrieve related attributes based on given attribute set ID",
        "operationId": "GetV1ProductsAttributesetsAttributeSetIdAttributes",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}/attributes"
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}/attributes/{attributeCode}": {
      "delete": {
        "tags": ["products/attribute-sets/{attributeSetId}/attributes/{attributeCode}"],
        "description": "Remove attribute from attribute set",
        "operationId": "DeleteV1ProductsAttributesetsAttributeSetIdAttributesAttributeCode",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}/attributes/{attributeCode}"
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}/groups": {
      "put": {
        "tags": ["products/attribute-sets/{attributeSetId}/groups"],
        "description": "Save attribute group",
        "operationId": "PutV1ProductsAttributesetsAttributeSetIdGroups",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesetsGroupsPostv1productsattributesetsgroupsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}/groups"
      }
    },
    "/V1/products/attributes": {
      "get": {
        "tags": ["products/attributes"],
        "description": "Retrieve all attributes for entity type",
        "operationId": "GetV1ProductsAttributes",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes"
      },
      "post": {
        "tags": ["products/attributes"],
        "description": "Save attribute data",
        "operationId": "PostV1ProductsAttributes",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesPostv1productsattributesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes"
      }
    },
    "/V1/products/attributes/types": {
      "get": {
        "tags": ["products/attributes/types"],
        "description": "Retrieve list of product attribute types",
        "operationId": "GetV1ProductsAttributesTypes",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-type-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-type-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/types"
      }
    },
    "/V1/products/attributes/{attributeCode}": {
      "get": {
        "tags": ["products/attributes/{attributeCode}"],
        "description": "Retrieve specific attribute",
        "operationId": "GetV1ProductsAttributesAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}"
      },
      "put": {
        "tags": ["products/attributes/{attributeCode}"],
        "description": "Save attribute data",
        "operationId": "PutV1ProductsAttributesAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesPostv1productsattributesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}"
      },
      "delete": {
        "tags": ["products/attributes/{attributeCode}"],
        "description": "Delete Attribute by id",
        "operationId": "DeleteV1ProductsAttributesAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}"
      }
    },
    "/V1/products/attributes/{attributeCode}/is-filterable": {
      "get": {
        "tags": ["products/attributes/{attributeCode}/is-filterable"],
        "description": "Retrieve 'is_filterable' property for specific attribute as integer",
        "operationId": "GetV1ProductsAttributesAttributeCodeIsfilterable",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/is-filterable"
      }
    },
    "/V1/products/attributes/{attributeCode}/is-filterable/{isFilterable}": {
      "put": {
        "tags": ["products/attributes/{attributeCode}/is-filterable/{isFilterable}"],
        "description": "Set 'is_filterable' property for specific attribute as integer",
        "operationId": "PutV1ProductsAttributesAttributeCodeIsfilterableIsFilterable",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isFilterable",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/is-filterable/{isFilterable}"
      }
    },
    "/V1/products/attributes/{attributeCode}/options": {
      "get": {
        "tags": ["products/attributes/{attributeCode}/options"],
        "description": "Retrieve list of attribute options",
        "operationId": "GetV1ProductsAttributesAttributeCodeOptions",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/options"
      },
      "post": {
        "tags": ["products/attributes/{attributeCode}/options"],
        "description": "Add option to attribute",
        "operationId": "PostV1ProductsAttributesAttributeCodeOptions",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesAttributeCodeOptionsPostv1productsattributesattributecodeoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/options"
      }
    },
    "/V1/products/attributes/{attributeCode}/options/{optionId}": {
      "delete": {
        "tags": ["products/attributes/{attributeCode}/options/{optionId}"],
        "description": "Delete option from attribute",
        "operationId": "DeleteV1ProductsAttributesAttributeCodeOptionsOptionId",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/options/{optionId}"
      },
      "put": {
        "tags": ["products/attributes/{attributeCode}/options/{optionId}"],
        "description": "Update attribute option",
        "operationId": "PutV1ProductsAttributesAttributeCodeOptionsOptionId",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesAttributeCodeOptionsPostv1productsattributesattributecodeoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/options/{optionId}"
      }
    },
    "/V1/products/base-prices": {
      "post": {
        "tags": ["products/base-prices"],
        "description": "Add or update product prices. Input item should correspond \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid price, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PostV1ProductsBaseprices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["prices"],
                "properties": {
                  "prices": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-base-price-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["prices"],
                "properties": {
                  "prices": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-base-price-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/base-prices"
      }
    },
    "/V1/products/base-prices-information": {
      "post": {
        "tags": ["products/base-prices-information"],
        "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "PostV1ProductsBasepricesinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-base-price-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-base-price-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/base-prices-information"
      }
    },
    "/V1/products/cost": {
      "post": {
        "tags": ["products/cost"],
        "description": "Add or update product cost. Input item should correspond to \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid cost, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PostV1ProductsCost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["prices"],
                "properties": {
                  "prices": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-cost-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["prices"],
                "properties": {
                  "prices": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-cost-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/cost"
      }
    },
    "/V1/products/cost-delete": {
      "post": {
        "tags": ["products/cost-delete"],
        "description": "Delete product cost. In case of at least one of skus is not found exception will be thrown. If error occurred during the delete exception will be thrown.",
        "operationId": "PostV1ProductsCostdelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Will return True if deleted."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "Will return True if deleted."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/cost-delete"
      }
    },
    "/V1/products/cost-information": {
      "post": {
        "tags": ["products/cost-information"],
        "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "PostV1ProductsCostinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-cost-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-cost-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/cost-information"
      }
    },
    "/V1/products/downloadable-links/samples/{id}": {
      "delete": {
        "tags": ["products/downloadable-links/samples/{id}"],
        "description": "Delete downloadable sample",
        "operationId": "DeleteV1ProductsDownloadablelinksSamplesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/downloadable-links/samples/{id}"
      }
    },
    "/V1/products/downloadable-links/{id}": {
      "delete": {
        "tags": ["products/downloadable-links/{id}"],
        "description": "Delete downloadable link",
        "operationId": "DeleteV1ProductsDownloadablelinksId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/downloadable-links/{id}"
      }
    },
    "/V1/products/links/types": {
      "get": {
        "tags": ["products/links/types"],
        "description": "Retrieve information about available product link types",
        "operationId": "GetV1ProductsLinksTypes",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-type-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-type-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/links/types"
      }
    },
    "/V1/products/links/{type}/attributes": {
      "get": {
        "tags": ["products/links/{type}/attributes"],
        "description": "Provide a list of the product link type attributes",
        "operationId": "GetV1ProductsLinksTypeAttributes",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-attribute-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-attribute-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/links/{type}/attributes"
      }
    },
    "/V1/products/media/types/{attributeSetName}": {
      "get": {
        "tags": ["products/media/types/{attributeSetName}"],
        "description": "Retrieve the list of media attributes (fronted input type is media_image) assigned to the given attribute set.",
        "operationId": "GetV1ProductsMediaTypesAttributeSetName",
        "parameters": [
          {
            "name": "attributeSetName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "list of media attributes",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "list of media attributes",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/media/types/{attributeSetName}"
      }
    },
    "/V1/products/options": {
      "post": {
        "tags": ["products/options"],
        "description": "Save Custom Option",
        "operationId": "PostV1ProductsOptions",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsOptionsPostv1productsoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/options"
      }
    },
    "/V1/products/options/types": {
      "get": {
        "tags": ["products/options/types"],
        "description": "Get custom option types",
        "operationId": "GetV1ProductsOptionsTypes",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-type-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-type-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/options/types"
      }
    },
    "/V1/products/options/{optionId}": {
      "put": {
        "tags": ["products/options/{optionId}"],
        "description": "Save Custom Option",
        "operationId": "PutV1ProductsOptionsOptionId",
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsOptionsPostv1productsoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/options/{optionId}"
      }
    },
    "/V1/products/special-price": {
      "post": {
        "tags": ["products/special-price"],
        "description": "Add or update product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PostV1ProductsSpecialprice",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSpecialpricePostv1productsspecialpricebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/special-price"
      }
    },
    "/V1/products/special-price-delete": {
      "post": {
        "tags": ["products/special-price-delete"],
        "description": "Delete product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the delete exception will be thrown.",
        "operationId": "PostV1ProductsSpecialpricedelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSpecialpricePostv1productsspecialpricebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/special-price-delete"
      }
    },
    "/V1/products/special-price-information": {
      "post": {
        "tags": ["products/special-price-information"],
        "description": "Return product's special price. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "PostV1ProductsSpecialpriceinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/special-price-information"
      }
    },
    "/V1/products/tier-prices": {
      "post": {
        "tags": ["products/tier-prices"],
        "description": "Add or update product prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PostV1ProductsTierprices",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsTierpricesPostv1productstierpricesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/tier-prices"
      },
      "put": {
        "tags": ["products/tier-prices"],
        "description": "Remove existing tier prices and replace them with the new ones. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from replace list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PutV1ProductsTierprices",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsTierpricesPostv1productstierpricesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/tier-prices"
      }
    },
    "/V1/products/tier-prices-delete": {
      "post": {
        "tags": ["products/tier-prices-delete"],
        "description": "Delete product tier prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PostV1ProductsTierpricesdelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsTierpricesPostv1productstierpricesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/tier-prices-delete"
      }
    },
    "/V1/products/tier-prices-information": {
      "post": {
        "tags": ["products/tier-prices-information"],
        "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "PostV1ProductsTierpricesinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/tier-prices-information"
      }
    },
    "/V1/products/types": {
      "get": {
        "tags": ["products/types"],
        "description": "Retrieve available product types",
        "operationId": "GetV1ProductsTypes",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-type-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-type-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/types"
      }
    },
    "/V1/products/{productSku}/stockItems/{itemId}": {
      "put": {
        "tags": ["products/{productSku}/stockItems/{itemId}"],
        "description": "",
        "operationId": "PutV1ProductsProductSkuStockItemsItemId",
        "parameters": [
          {
            "name": "productSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["stockItem"],
                "properties": {
                  "stockItem": {
                    "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["stockItem"],
                "properties": {
                  "stockItem": {
                    "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{productSku}/stockItems/{itemId}"
      }
    },
    "/V1/products/{sku}": {
      "put": {
        "tags": ["products/{sku}"],
        "description": "Create product",
        "operationId": "PutV1ProductsSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsPostv1productsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}"
      },
      "delete": {
        "tags": ["products/{sku}"],
        "description": "",
        "operationId": "DeleteV1ProductsSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Will returned True if deleted"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "Will returned True if deleted"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}"
      },
      "get": {
        "tags": ["products/{sku}"],
        "description": "Get info about product by product SKU",
        "operationId": "GetV1ProductsSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "editMode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "forceReload",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}"
      }
    },
    "/V1/products/{sku}/downloadable-links": {
      "get": {
        "tags": ["products/{sku}/downloadable-links"],
        "description": "List of links with associated samples",
        "operationId": "GetV1ProductsSkuDownloadablelinks",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-link-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-link-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links"
      },
      "post": {
        "tags": ["products/{sku}/downloadable-links"],
        "description": "Update downloadable link of the given product (link type and its resources cannot be changed)",
        "operationId": "PostV1ProductsSkuDownloadablelinks",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuDownloadablelinksPostv1productsskudownloadablelinksbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links"
      }
    },
    "/V1/products/{sku}/downloadable-links/samples": {
      "get": {
        "tags": ["products/{sku}/downloadable-links/samples"],
        "description": "List of samples for downloadable product",
        "operationId": "GetV1ProductsSkuDownloadablelinksSamples",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-sample-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-sample-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links/samples"
      },
      "post": {
        "tags": ["products/{sku}/downloadable-links/samples"],
        "description": "Update downloadable sample of the given product",
        "operationId": "PostV1ProductsSkuDownloadablelinksSamples",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuDownloadablelinksSamplesPostv1productsskudownloadablelinkssamplesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links/samples"
      }
    },
    "/V1/products/{sku}/downloadable-links/samples/{id}": {
      "put": {
        "tags": ["products/{sku}/downloadable-links/samples/{id}"],
        "description": "Update downloadable sample of the given product",
        "operationId": "PutV1ProductsSkuDownloadablelinksSamplesId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuDownloadablelinksSamplesPostv1productsskudownloadablelinkssamplesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links/samples/{id}"
      }
    },
    "/V1/products/{sku}/downloadable-links/{id}": {
      "put": {
        "tags": ["products/{sku}/downloadable-links/{id}"],
        "description": "Update downloadable link of the given product (link type and its resources cannot be changed)",
        "operationId": "PutV1ProductsSkuDownloadablelinksId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuDownloadablelinksPostv1productsskudownloadablelinksbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links/{id}"
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers": {
      "get": {
        "tags": ["products/{sku}/group-prices/{customerGroupId}/tiers"],
        "description": "Get tier price of product",
        "operationId": "GetV1ProductsSkuGrouppricesCustomerGroupIdTiers",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerGroupId",
            "in": "path",
            "required": true,
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers"
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}": {
      "delete": {
        "tags": ["products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"],
        "description": "Remove tier price from product",
        "operationId": "DeleteV1ProductsSkuGrouppricesCustomerGroupIdTiersQty",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerGroupId",
            "in": "path",
            "required": true,
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}": {
      "post": {
        "tags": ["products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"],
        "description": "Create tier price for product",
        "operationId": "PostV1ProductsSkuGrouppricesCustomerGroupIdTiersQtyPricePrice",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerGroupId",
            "in": "path",
            "required": true,
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "qty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
      }
    },
    "/V1/products/{sku}/links": {
      "post": {
        "tags": ["products/{sku}/links"],
        "description": "Assign a product link to another product",
        "operationId": "PostV1ProductsSkuLinks",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["items"],
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-product-link-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["items"],
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-product-link-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/links"
      },
      "put": {
        "tags": ["products/{sku}/links"],
        "description": "Save product link",
        "operationId": "PutV1ProductsSkuLinks",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/links"
      }
    },
    "/V1/products/{sku}/links/{type}": {
      "get": {
        "tags": ["products/{sku}/links/{type}"],
        "description": "Provide the list of links for a specific product",
        "operationId": "GetV1ProductsSkuLinksType",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/links/{type}"
      }
    },
    "/V1/products/{sku}/links/{type}/{linkedProductSku}": {
      "delete": {
        "tags": ["products/{sku}/links/{type}/{linkedProductSku}"],
        "description": "",
        "operationId": "DeleteV1ProductsSkuLinksTypeLinkedProductSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedProductSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/links/{type}/{linkedProductSku}"
      }
    },
    "/V1/products/{sku}/media": {
      "post": {
        "tags": ["products/{sku}/media"],
        "description": "Create new gallery entry",
        "operationId": "PostV1ProductsSkuMedia",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuMediaPostv1productsskumediabody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "gallery entry ID"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "gallery entry ID"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/media"
      },
      "get": {
        "tags": ["products/{sku}/media"],
        "description": "Retrieve the list of gallery entries associated with given product",
        "operationId": "GetV1ProductsSkuMedia",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/media"
      }
    },
    "/V1/products/{sku}/media/{entryId}": {
      "get": {
        "tags": ["products/{sku}/media/{entryId}"],
        "description": "Return information about gallery entry",
        "operationId": "GetV1ProductsSkuMediaEntryId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/media/{entryId}"
      },
      "put": {
        "tags": ["products/{sku}/media/{entryId}"],
        "description": "Update gallery entry",
        "operationId": "PutV1ProductsSkuMediaEntryId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuMediaPostv1productsskumediabody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/media/{entryId}"
      },
      "delete": {
        "tags": ["products/{sku}/media/{entryId}"],
        "description": "Remove gallery entry",
        "operationId": "DeleteV1ProductsSkuMediaEntryId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/media/{entryId}"
      }
    },
    "/V1/products/{sku}/options": {
      "get": {
        "tags": ["products/{sku}/options"],
        "description": "Get the list of custom options for a specific product",
        "operationId": "GetV1ProductsSkuOptions",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/options"
      }
    },
    "/V1/products/{sku}/options/{optionId}": {
      "get": {
        "tags": ["products/{sku}/options/{optionId}"],
        "description": "Get custom option for a specific product",
        "operationId": "GetV1ProductsSkuOptionsOptionId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/options/{optionId}"
      },
      "delete": {
        "tags": ["products/{sku}/options/{optionId}"],
        "description": "",
        "operationId": "DeleteV1ProductsSkuOptionsOptionId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/options/{optionId}"
      }
    },
    "/V1/products/{sku}/websites": {
      "post": {
        "tags": ["products/{sku}/websites"],
        "description": "Assign a product to the website",
        "operationId": "PostV1ProductsSkuWebsites",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuWebsitesPostv1productsskuwebsitesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully assigned to product"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully assigned to product"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/websites"
      },
      "put": {
        "tags": ["products/{sku}/websites"],
        "description": "Assign a product to the website",
        "operationId": "PutV1ProductsSkuWebsites",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuWebsitesPostv1productsskuwebsitesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully assigned to product"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully assigned to product"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/websites"
      }
    },
    "/V1/products/{sku}/websites/{websiteId}": {
      "delete": {
        "tags": ["products/{sku}/websites/{websiteId}"],
        "description": "Remove the website assignment from the product by product sku",
        "operationId": "DeleteV1ProductsSkuWebsitesWebsiteId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "websiteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully unassigned from product"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully unassigned from product"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/websites/{websiteId}"
      }
    },
    "/V1/purchase-order-carts/{cartId}/billing-address": {
      "post": {
        "tags": ["purchase-order-carts/{cartId}/billing-address"],
        "description": "Assigns a specified billing address to a specified cart.",
        "operationId": "PostV1PurchaseordercartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/billing-address"
      }
    },
    "/V1/purchase-order-carts/{cartId}/estimate-shipping-methods": {
      "post": {
        "tags": ["purchase-order-carts/{cartId}/estimate-shipping-methods"],
        "description": "Estimate shipping by address and return list of available shipping methods",
        "operationId": "PostV1PurchaseordercartsCartIdEstimateshippingmethods",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsPostv1cartsmineestimateshippingmethodsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/estimate-shipping-methods"
      }
    },
    "/V1/purchase-order-carts/{cartId}/estimate-shipping-methods-by-address-id": {
      "post": {
        "tags": ["purchase-order-carts/{cartId}/estimate-shipping-methods-by-address-id"],
        "description": "Estimate shipping",
        "operationId": "PostV1PurchaseordercartsCartIdEstimateshippingmethodsbyaddressid",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsbyaddressidPostv1cartsmineestimateshippingmethodsbyaddressidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/estimate-shipping-methods-by-address-id"
      }
    },
    "/V1/purchase-order-carts/{cartId}/giftCards": {
      "post": {
        "tags": ["purchase-order-carts/{cartId}/giftCards"],
        "description": "Add gift card to the cart.",
        "operationId": "PostV1PurchaseordercartsCartIdGiftCards",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsGuestcartsCartIdGiftCardsPostv1cartsguestcartscartidgiftcardsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/giftCards"
      }
    },
    "/V1/purchase-order-carts/{cartId}/giftCards/{giftCardCode}": {
      "delete": {
        "tags": ["purchase-order-carts/{cartId}/giftCards/{giftCardCode}"],
        "description": "Remove GiftCard Account entity",
        "operationId": "DeleteV1PurchaseordercartsCartIdGiftCardsGiftCardCode",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "giftCardCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/giftCards/{giftCardCode}"
      }
    },
    "/V1/purchase-order-carts/{cartId}/payment-information": {
      "post": {
        "tags": ["purchase-order-carts/{cartId}/payment-information"],
        "description": "Set payment information and place order for a specified cart.",
        "operationId": "PostV1PurchaseordercartsCartIdPaymentinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMinePaymentinformationPostv1cartsminepaymentinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/payment-information"
      },
      "get": {
        "tags": ["purchase-order-carts/{cartId}/payment-information"],
        "description": "Get payment information",
        "operationId": "GetV1PurchaseordercartsCartIdPaymentinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/checkout-data-payment-details-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/payment-information"
      }
    },
    "/V1/purchase-order-carts/{cartId}/set-payment-information": {
      "post": {
        "tags": ["purchase-order-carts/{cartId}/set-payment-information"],
        "description": "Set payment information for a specified cart.",
        "operationId": "PostV1PurchaseordercartsCartIdSetpaymentinformation",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMinePaymentinformationPostv1cartsminepaymentinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Order ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/set-payment-information"
      }
    },
    "/V1/purchase-order-carts/{cartId}/totals": {
      "get": {
        "tags": ["purchase-order-carts/{cartId}/totals"],
        "description": "Returns quote totals data for a specified cart.",
        "operationId": "GetV1PurchaseordercartsCartIdTotals",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-totals-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/totals"
      }
    },
    "/V1/requisition_lists": {
      "post": {
        "tags": ["requisition_lists"],
        "description": "Save Requisition List",
        "operationId": "PostV1Requisition_lists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["requisitionList"],
                "properties": {
                  "requisitionList": {
                    "$ref": "#/components/schemas/requisition-list-data-requisition-list-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["requisitionList"],
                "properties": {
                  "requisitionList": {
                    "$ref": "#/components/schemas/requisition-list-data-requisition-list-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/requisition-list-data-requisition-list-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/requisition-list-data-requisition-list-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "requisition_lists"
      }
    },
    "/V1/returns": {
      "post": {
        "tags": ["returns"],
        "description": "Save RMA",
        "operationId": "PostV1Returns",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ReturnsPostv1returnsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns"
      },
      "get": {
        "tags": ["returns"],
        "description": "Return list of rma data objects based on search criteria",
        "operationId": "GetV1Returns",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns"
      }
    },
    "/V1/returns/{id}": {
      "get": {
        "tags": ["returns/{id}"],
        "description": "Return data object for specified RMA id",
        "operationId": "GetV1ReturnsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns/{id}"
      },
      "delete": {
        "tags": ["returns/{id}"],
        "description": "Delete RMA",
        "operationId": "DeleteV1ReturnsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ReturnsPostv1returnsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns/{id}"
      },
      "put": {
        "tags": ["returns/{id}"],
        "description": "Save RMA",
        "operationId": "PutV1ReturnsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ReturnsPostv1returnsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns/{id}"
      }
    },
    "/V1/returns/{id}/comments": {
      "post": {
        "tags": ["returns/{id}/comments"],
        "description": "Add comment",
        "operationId": "PostV1ReturnsIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["data"],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/rma-data-comment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["data"],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/rma-data-comment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns/{id}/comments"
      },
      "get": {
        "tags": ["returns/{id}/comments"],
        "description": "Comments list",
        "operationId": "GetV1ReturnsIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-comment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-comment-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns/{id}/comments"
      }
    },
    "/V1/returns/{id}/labels": {
      "get": {
        "tags": ["returns/{id}/labels"],
        "description": "Get shipping label int the PDF format",
        "operationId": "GetV1ReturnsIdLabels",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns/{id}/labels"
      }
    },
    "/V1/returns/{id}/tracking-numbers": {
      "post": {
        "tags": ["returns/{id}/tracking-numbers"],
        "description": "Add track",
        "operationId": "PostV1ReturnsIdTrackingnumbers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["track"],
                "properties": {
                  "track": {
                    "$ref": "#/components/schemas/rma-data-track-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["track"],
                "properties": {
                  "track": {
                    "$ref": "#/components/schemas/rma-data-track-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns/{id}/tracking-numbers"
      },
      "get": {
        "tags": ["returns/{id}/tracking-numbers"],
        "description": "Get track list",
        "operationId": "GetV1ReturnsIdTrackingnumbers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-track-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/rma-data-track-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns/{id}/tracking-numbers"
      }
    },
    "/V1/returns/{id}/tracking-numbers/{trackId}": {
      "delete": {
        "tags": ["returns/{id}/tracking-numbers/{trackId}"],
        "description": "Remove track by id",
        "operationId": "DeleteV1ReturnsIdTrackingnumbersTrackId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "trackId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returns/{id}/tracking-numbers/{trackId}"
      }
    },
    "/V1/returnsAttributeMetadata": {
      "get": {
        "tags": ["returnsAttributeMetadata"],
        "description": "Get all attribute metadata.",
        "operationId": "GetV1ReturnsAttributeMetadata",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returnsAttributeMetadata"
      }
    },
    "/V1/returnsAttributeMetadata/custom": {
      "get": {
        "tags": ["returnsAttributeMetadata/custom"],
        "description": "Get custom attribute metadata for the given Data object's attribute set",
        "operationId": "GetV1ReturnsAttributeMetadataCustom",
        "parameters": [
          {
            "name": "dataObjectClassName",
            "in": "query",
            "description": "Data object class name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/framework-metadata-object-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/framework-metadata-object-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returnsAttributeMetadata/custom"
      }
    },
    "/V1/returnsAttributeMetadata/form/{formCode}": {
      "get": {
        "tags": ["returnsAttributeMetadata/form/{formCode}"],
        "description": "Retrieve all attributes filtered by form code",
        "operationId": "GetV1ReturnsAttributeMetadataFormFormCode",
        "parameters": [
          {
            "name": "formCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returnsAttributeMetadata/form/{formCode}"
      }
    },
    "/V1/returnsAttributeMetadata/{attributeCode}": {
      "get": {
        "tags": ["returnsAttributeMetadata/{attributeCode}"],
        "description": "Retrieve attribute metadata.",
        "operationId": "GetV1ReturnsAttributeMetadataAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "returnsAttributeMetadata/{attributeCode}"
      }
    },
    "/V1/reward/mine/use-reward": {
      "post": {
        "tags": ["reward/mine/use-reward"],
        "description": "Set reward points to quote",
        "operationId": "PostV1RewardMineUsereward",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "reward/mine/use-reward"
      }
    },
    "/V1/salesRules": {
      "post": {
        "tags": ["salesRules"],
        "description": "Save sales rule.",
        "operationId": "PostV1SalesRules",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SalesRulesPostv1salesrulesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "salesRules"
      }
    },
    "/V1/salesRules/search": {
      "get": {
        "tags": ["salesRules/search"],
        "description": "Retrieve sales rules that match te specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#RuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1SalesRulesSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "salesRules/search"
      }
    },
    "/V1/salesRules/{ruleId}": {
      "get": {
        "tags": ["salesRules/{ruleId}"],
        "description": "Get rule by ID.",
        "operationId": "GetV1SalesRulesRuleId",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "salesRules/{ruleId}"
      },
      "put": {
        "tags": ["salesRules/{ruleId}"],
        "description": "Save sales rule.",
        "operationId": "PutV1SalesRulesRuleId",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SalesRulesPostv1salesrulesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "salesRules/{ruleId}"
      },
      "delete": {
        "tags": ["salesRules/{ruleId}"],
        "description": "Delete rule by ID.",
        "operationId": "DeleteV1SalesRulesRuleId",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "salesRules/{ruleId}"
      }
    },
    "/V1/search": {
      "get": {
        "tags": ["search"],
        "description": "Make Full Text Search and return found Documents",
        "operationId": "GetV1Search",
        "parameters": [
          {
            "name": "searchCriteria[requestName]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/framework-search-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/framework-search-search-result-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "search"
      }
    },
    "/V1/sharedCatalog": {
      "post": {
        "tags": ["sharedCatalog"],
        "description": "Create or update Shared Catalog service.",
        "operationId": "PostV1SharedCatalog",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogPostv1sharedcatalogbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog"
      }
    },
    "/V1/sharedCatalog/": {
      "get": {
        "tags": ["sharedCatalog/"],
        "description": "Return the list of shared catalogs and basic properties for each catalog.",
        "operationId": "GetV1SharedCatalog",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/"
      }
    },
    "/V1/sharedCatalog/{id}": {
      "put": {
        "tags": ["sharedCatalog/{id}"],
        "description": "Create or update Shared Catalog service.",
        "operationId": "PutV1SharedCatalogId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogPostv1sharedcatalogbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}"
      }
    },
    "/V1/sharedCatalog/{id}/assignCategories": {
      "post": {
        "tags": ["sharedCatalog/{id}/assignCategories"],
        "description": "Add categories into the shared catalog.",
        "operationId": "PostV1SharedCatalogIdAssignCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogIdAssignCategoriesPostv1sharedcatalogidassigncategoriesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/assignCategories"
      }
    },
    "/V1/sharedCatalog/{id}/assignProducts": {
      "post": {
        "tags": ["sharedCatalog/{id}/assignProducts"],
        "description": "Add products into the shared catalog.",
        "operationId": "PostV1SharedCatalogIdAssignProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogIdAssignProductsPostv1sharedcatalogidassignproductsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/assignProducts"
      }
    },
    "/V1/sharedCatalog/{id}/categories": {
      "get": {
        "tags": ["sharedCatalog/{id}/categories"],
        "description": "Return the list of categories in the selected shared catalog.",
        "operationId": "GetV1SharedCatalogIdCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/categories"
      }
    },
    "/V1/sharedCatalog/{id}/products": {
      "get": {
        "tags": ["sharedCatalog/{id}/products"],
        "description": "Return the list of product SKUs in the selected shared catalog.",
        "operationId": "GetV1SharedCatalogIdProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/products"
      }
    },
    "/V1/sharedCatalog/{id}/unassignCategories": {
      "post": {
        "tags": ["sharedCatalog/{id}/unassignCategories"],
        "description": "Remove the specified categories from the shared catalog.",
        "operationId": "PostV1SharedCatalogIdUnassignCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogIdAssignCategoriesPostv1sharedcatalogidassigncategoriesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/unassignCategories"
      }
    },
    "/V1/sharedCatalog/{id}/unassignProducts": {
      "post": {
        "tags": ["sharedCatalog/{id}/unassignProducts"],
        "description": "Remove the specified products from the shared catalog.",
        "operationId": "PostV1SharedCatalogIdUnassignProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogIdAssignProductsPostv1sharedcatalogidassignproductsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/unassignProducts"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}": {
      "get": {
        "tags": ["sharedCatalog/{sharedCatalogId}"],
        "description": "Return the following properties for the selected shared catalog: ID, Store Group ID, Name, Type, Description, Customer Group, Tax Class.",
        "operationId": "GetV1SharedCatalogSharedCatalogId",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}"
      },
      "delete": {
        "tags": ["sharedCatalog/{sharedCatalogId}"],
        "description": "Delete a shared catalog by ID.",
        "operationId": "DeleteV1SharedCatalogSharedCatalogId",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/assignCompanies": {
      "post": {
        "tags": ["sharedCatalog/{sharedCatalogId}/assignCompanies"],
        "description": "Assign companies to a shared catalog.",
        "operationId": "PostV1SharedCatalogSharedCatalogIdAssignCompanies",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogSharedCatalogIdAssignCompaniesPostv1sharedcatalogsharedcatalogidassigncompaniesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/assignCompanies"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/assignTierPrices": {
      "post": {
        "tags": ["sharedCatalog/{sharedCatalogId}/assignTierPrices"],
        "description": "Assign custom prices",
        "operationId": "PostV1SharedCatalogSharedCatalogIdAssignTierPrices",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsTierpricesPostv1productstierpricesbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/assignTierPrices"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/companies": {
      "get": {
        "tags": ["sharedCatalog/{sharedCatalogId}/companies"],
        "description": "Return the list of company IDs for the companies assigned to the selected catalog.",
        "operationId": "GetV1SharedCatalogSharedCatalogIdCompanies",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/companies"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/resetTierPrices": {
      "post": {
        "tags": ["sharedCatalog/{sharedCatalogId}/resetTierPrices"],
        "description": "Reset custom prices",
        "operationId": "PostV1SharedCatalogSharedCatalogIdResetTierPrices",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/resetTierPrices"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/unassignCompanies": {
      "post": {
        "tags": ["sharedCatalog/{sharedCatalogId}/unassignCompanies"],
        "description": "Unassign companies from a shared catalog.",
        "operationId": "PostV1SharedCatalogSharedCatalogIdUnassignCompanies",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogSharedCatalogIdAssignCompaniesPostv1sharedcatalogsharedcatalogidassigncompaniesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/unassignCompanies"
      }
    },
    "/V1/shipment/": {
      "post": {
        "tags": ["shipment/"],
        "description": "Performs persist operations for a specified shipment.",
        "operationId": "PostV1Shipment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "shipment/"
      }
    },
    "/V1/shipment/track": {
      "post": {
        "tags": ["shipment/track"],
        "description": "Performs persist operations for a specified shipment track.",
        "operationId": "PostV1ShipmentTrack",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-track-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-track-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-track-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-track-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "shipment/track"
      }
    },
    "/V1/shipment/track/{id}": {
      "delete": {
        "tags": ["shipment/track/{id}"],
        "description": "Deletes a specified shipment track by ID.",
        "operationId": "DeleteV1ShipmentTrackId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The shipment track ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "shipment/track/{id}"
      }
    },
    "/V1/shipment/{id}": {
      "get": {
        "tags": ["shipment/{id}"],
        "description": "Loads a specified shipment.",
        "operationId": "GetV1ShipmentId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The shipment ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "shipment/{id}"
      }
    },
    "/V1/shipment/{id}/comments": {
      "get": {
        "tags": ["shipment/{id}/comments"],
        "description": "Lists comments for a specified shipment.",
        "operationId": "GetV1ShipmentIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The shipment ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-comment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-comment-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "shipment/{id}/comments"
      },
      "post": {
        "tags": ["shipment/{id}/comments"],
        "description": "Performs persist operations for a specified shipment comment.",
        "operationId": "PostV1ShipmentIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["entity"],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "shipment/{id}/comments"
      }
    },
    "/V1/shipment/{id}/emails": {
      "post": {
        "tags": ["shipment/{id}/emails"],
        "description": "Emails user a specified shipment.",
        "operationId": "PostV1ShipmentIdEmails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The shipment ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "shipment/{id}/emails"
      }
    },
    "/V1/shipment/{id}/label": {
      "get": {
        "tags": ["shipment/{id}/label"],
        "description": "Gets a specified shipment label.",
        "operationId": "GetV1ShipmentIdLabel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The shipment label ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Shipment label."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "Shipment label."
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "shipment/{id}/label"
      }
    },
    "/V1/shipments": {
      "get": {
        "tags": ["shipments"],
        "description": "Lists shipments that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#ShipmentRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1Shipments",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-shipment-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "shipments"
      }
    },
    "/V1/stockItems/lowStock/": {
      "get": {
        "tags": ["stockItems/lowStock/"],
        "description": "Retrieves a list of SKU's with low inventory qty",
        "operationId": "GetV1StockItemsLowStock",
        "parameters": [
          {
            "name": "scopeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-collection-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-collection-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "stockItems/lowStock/"
      }
    },
    "/V1/stockItems/{productSku}": {
      "get": {
        "tags": ["stockItems/{productSku}"],
        "description": "",
        "operationId": "GetV1StockItemsProductSku",
        "parameters": [
          {
            "name": "productSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "stockItems/{productSku}"
      }
    },
    "/V1/stockStatuses/{productSku}": {
      "get": {
        "tags": ["stockStatuses/{productSku}"],
        "description": "",
        "operationId": "GetV1StockStatusesProductSku",
        "parameters": [
          {
            "name": "productSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-status-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-status-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "stockStatuses/{productSku}"
      }
    },
    "/V1/store/storeConfigs": {
      "get": {
        "tags": ["store/storeConfigs"],
        "description": "",
        "operationId": "GetV1StoreStoreConfigs",
        "parameters": [
          {
            "name": "storeCodes",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/store-data-store-config-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/store-data-store-config-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "store/storeConfigs"
      }
    },
    "/V1/store/storeGroups": {
      "get": {
        "tags": ["store/storeGroups"],
        "description": "Retrieve list of all groups",
        "operationId": "GetV1StoreStoreGroups",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/store-data-group-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/store-data-group-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "store/storeGroups"
      }
    },
    "/V1/store/storeViews": {
      "get": {
        "tags": ["store/storeViews"],
        "description": "Retrieve list of all stores",
        "operationId": "GetV1StoreStoreViews",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/store-data-store-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/store-data-store-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "store/storeViews"
      }
    },
    "/V1/store/websites": {
      "get": {
        "tags": ["store/websites"],
        "description": "Retrieve list of all websites",
        "operationId": "GetV1StoreWebsites",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/store-data-website-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/store-data-website-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "store/websites"
      }
    },
    "/V1/taxClasses": {
      "post": {
        "tags": ["taxClasses"],
        "description": "Create a Tax Class",
        "operationId": "PostV1TaxClasses",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TaxClassesPostv1taxclassesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "id for the newly created Tax class"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "id for the newly created Tax class"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxClasses"
      }
    },
    "/V1/taxClasses/search": {
      "get": {
        "tags": ["taxClasses/search"],
        "description": "Retrieve tax classes which match a specific criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TaxClassRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1TaxClassesSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-class-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-class-search-results-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxClasses/search"
      }
    },
    "/V1/taxClasses/{classId}": {
      "put": {
        "tags": ["taxClasses/{classId}"],
        "description": "Create a Tax Class",
        "operationId": "PutV1TaxClassesClassId",
        "parameters": [
          {
            "name": "classId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TaxClassesPostv1taxclassesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "id for the newly created Tax class"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "id for the newly created Tax class"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxClasses/{classId}"
      }
    },
    "/V1/taxClasses/{taxClassId}": {
      "get": {
        "tags": ["taxClasses/{taxClassId}"],
        "description": "Get a tax class with the given tax class id.",
        "operationId": "GetV1TaxClassesTaxClassId",
        "parameters": [
          {
            "name": "taxClassId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-class-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-class-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxClasses/{taxClassId}"
      },
      "delete": {
        "tags": ["taxClasses/{taxClassId}"],
        "description": "Delete a tax class with the given tax class id.",
        "operationId": "DeleteV1TaxClassesTaxClassId",
        "parameters": [
          {
            "name": "taxClassId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "True if the tax class was deleted, false otherwise"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "True if the tax class was deleted, false otherwise"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxClasses/{taxClassId}"
      }
    },
    "/V1/taxRates": {
      "post": {
        "tags": ["taxRates"],
        "description": "Create or update tax rate",
        "operationId": "PostV1TaxRates",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TaxRatesPostv1taxratesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxRates"
      },
      "put": {
        "tags": ["taxRates"],
        "description": "Create or update tax rate",
        "operationId": "PutV1TaxRates",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TaxRatesPostv1taxratesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxRates"
      }
    },
    "/V1/taxRates/search": {
      "get": {
        "tags": ["taxRates/search"],
        "description": "Search TaxRates This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TaxRateRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1TaxRatesSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-search-results-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxRates/search"
      }
    },
    "/V1/taxRates/{rateId}": {
      "get": {
        "tags": ["taxRates/{rateId}"],
        "description": "Get tax rate",
        "operationId": "GetV1TaxRatesRateId",
        "parameters": [
          {
            "name": "rateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxRates/{rateId}"
      },
      "delete": {
        "tags": ["taxRates/{rateId}"],
        "description": "Delete tax rate",
        "operationId": "DeleteV1TaxRatesRateId",
        "parameters": [
          {
            "name": "rateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxRates/{rateId}"
      }
    },
    "/V1/taxRules": {
      "post": {
        "tags": ["taxRules"],
        "description": "Save TaxRule",
        "operationId": "PostV1TaxRules",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TaxRulesPostv1taxrulesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxRules"
      },
      "put": {
        "tags": ["taxRules"],
        "description": "Save TaxRule",
        "operationId": "PutV1TaxRules",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TaxRulesPostv1taxrulesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxRules"
      }
    },
    "/V1/taxRules/search": {
      "get": {
        "tags": ["taxRules/search"],
        "description": "Search TaxRules This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TaxRuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1TaxRulesSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-search-results-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxRules/search"
      }
    },
    "/V1/taxRules/{ruleId}": {
      "delete": {
        "tags": ["taxRules/{ruleId}"],
        "description": "Delete TaxRule",
        "operationId": "DeleteV1TaxRulesRuleId",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxRules/{ruleId}"
      },
      "get": {
        "tags": ["taxRules/{ruleId}"],
        "description": "Get TaxRule",
        "operationId": "GetV1TaxRulesRuleId",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "taxRules/{ruleId}"
      }
    },
    "/V1/team/": {
      "get": {
        "tags": ["team/"],
        "description": "Returns the list of teams for the specified search criteria (team name or description).",
        "operationId": "GetV1Team",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-team-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-team-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "team/"
      }
    },
    "/V1/team/{companyId}": {
      "post": {
        "tags": ["team/{companyId}"],
        "description": "Create a team in the company structure.",
        "operationId": "PostV1TeamCompanyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TeamCompanyIdPostv1teamcompanyidbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "team/{companyId}"
      }
    },
    "/V1/team/{teamId}": {
      "get": {
        "tags": ["team/{teamId}"],
        "description": "Returns data for a team in the company, by entity id.",
        "operationId": "GetV1TeamTeamId",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-team-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-team-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "team/{teamId}"
      },
      "delete": {
        "tags": ["team/{teamId}"],
        "description": "Delete a team from the company structure.",
        "operationId": "DeleteV1TeamTeamId",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "team/{teamId}"
      },
      "put": {
        "tags": ["team/{teamId}"],
        "description": "Update a team in the company structure.",
        "operationId": "PutV1TeamTeamId",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TeamCompanyIdPostv1teamcompanyidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "team/{teamId}"
      }
    },
    "/V1/tfa/default-provider-code/{userId}": {
      "put": {
        "tags": ["tfa/default-provider-code/{userId}"],
        "description": "Set default provider code",
        "operationId": "PutV1TfaDefaultprovidercodeUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["providerCode"],
                "properties": {
                  "providerCode": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["providerCode"],
                "properties": {
                  "providerCode": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/default-provider-code/{userId}"
      },
      "get": {
        "tags": ["tfa/default-provider-code/{userId}"],
        "description": "Get default provider",
        "operationId": "GetV1TfaDefaultprovidercodeUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/default-provider-code/{userId}"
      }
    },
    "/V1/tfa/forced-providers": {
      "get": {
        "tags": ["tfa/forced-providers"],
        "description": "Retrieve forced providers list",
        "operationId": "GetV1TfaForcedproviders",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/forced-providers"
      }
    },
    "/V1/tfa/installed-providers": {
      "get": {
        "tags": ["tfa/installed-providers"],
        "description": "Get a list of providers",
        "operationId": "GetV1TfaInstalledproviders",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/installed-providers"
      }
    },
    "/V1/tfa/provider/authy/activate": {
      "post": {
        "tags": ["tfa/provider/authy/activate"],
        "description": "Activate the provider and get an admin token",
        "operationId": "PostV1TfaProviderAuthyActivate",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TfaProviderAuthyActivatePostv1tfaproviderauthyactivatebody"
        },
        "responses": {
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/authy/activate"
      }
    },
    "/V1/tfa/provider/authy/authenticate": {
      "post": {
        "tags": ["tfa/provider/authy/authenticate"],
        "description": "Get an admin token using authy 2fa",
        "operationId": "PostV1TfaProviderAuthyAuthenticate",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TfaProviderAuthyAuthenticatePostv1tfaproviderauthyauthenticatebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "$otp"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "$otp"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/authy/authenticate"
      }
    },
    "/V1/tfa/provider/authy/authenticate-onetouch": {
      "post": {
        "tags": ["tfa/provider/authy/authenticate-onetouch"],
        "description": "Authenticate using the present one touch response and get an admin token",
        "operationId": "PostV1TfaProviderAuthyAuthenticateonetouch",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1IntegrationAdminTokenPostv1integrationadmintokenbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/authy/authenticate-onetouch"
      }
    },
    "/V1/tfa/provider/authy/configure": {
      "post": {
        "tags": ["tfa/provider/authy/configure"],
        "description": "Get the information required to configure google",
        "operationId": "PostV1TfaProviderAuthyConfigure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["tfaToken", "deviceData"],
                "properties": {
                  "tfaToken": {
                    "type": "string"
                  },
                  "deviceData": {
                    "$ref": "#/components/schemas/two-factor-auth-data-authy-device-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["tfaToken", "deviceData"],
                "properties": {
                  "tfaToken": {
                    "type": "string"
                  },
                  "deviceData": {
                    "$ref": "#/components/schemas/two-factor-auth-data-authy-device-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-authy-registration-prompt-response-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-authy-registration-prompt-response-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/authy/configure"
      }
    },
    "/V1/tfa/provider/authy/send-token/{via}": {
      "post": {
        "tags": ["tfa/provider/authy/send-token/{via}"],
        "description": "Send a one time password to a device using authy",
        "operationId": "PostV1TfaProviderAuthySendtokenVia",
        "parameters": [
          {
            "name": "via",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1IntegrationAdminTokenPostv1integrationadmintokenbody"
        },
        "responses": {
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/authy/send-token/{via}"
      }
    },
    "/V1/tfa/provider/duo_security/activate": {
      "post": {
        "tags": ["tfa/provider/duo_security/activate"],
        "description": "Activate the provider and get an admin token",
        "operationId": "PostV1TfaProviderDuo_securityActivate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["tfaToken", "signatureResponse"],
                "properties": {
                  "tfaToken": {
                    "type": "string"
                  },
                  "signatureResponse": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["tfaToken", "signatureResponse"],
                "properties": {
                  "tfaToken": {
                    "type": "string"
                  },
                  "signatureResponse": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/duo_security/activate"
      }
    },
    "/V1/tfa/provider/duo_security/authenticate": {
      "post": {
        "tags": ["tfa/provider/duo_security/authenticate"],
        "description": "Authenticate and get an admin token",
        "operationId": "PostV1TfaProviderDuo_securityAuthenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["username", "password", "signatureResponse"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "signatureResponse": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["username", "password", "signatureResponse"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "signatureResponse": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/duo_security/authenticate"
      }
    },
    "/V1/tfa/provider/duo_security/configure": {
      "post": {
        "tags": ["tfa/provider/duo_security/configure"],
        "description": "Get the information required to configure duo",
        "operationId": "PostV1TfaProviderDuo_securityConfigure",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TfaProviderDuo_securityConfigurePostv1tfaproviderduoSecurityconfigurebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-duo-data-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-duo-data-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/duo_security/configure"
      }
    },
    "/V1/tfa/provider/duo_security/get-authentication-data": {
      "post": {
        "tags": ["tfa/provider/duo_security/get-authentication-data"],
        "description": "Get the information required to configure duo",
        "operationId": "PostV1TfaProviderDuo_securityGetauthenticationdata",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1IntegrationAdminTokenPostv1integrationadmintokenbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-duo-data-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-duo-data-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/duo_security/get-authentication-data"
      }
    },
    "/V1/tfa/provider/google/activate": {
      "post": {
        "tags": ["tfa/provider/google/activate"],
        "description": "Activate the provider and get an admin token",
        "operationId": "PostV1TfaProviderGoogleActivate",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TfaProviderAuthyActivatePostv1tfaproviderauthyactivatebody"
        },
        "responses": {
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/google/activate"
      }
    },
    "/V1/tfa/provider/google/authenticate": {
      "post": {
        "tags": ["tfa/provider/google/authenticate"],
        "description": "Get an admin token by authenticating using google",
        "operationId": "PostV1TfaProviderGoogleAuthenticate",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TfaProviderAuthyAuthenticatePostv1tfaproviderauthyauthenticatebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/google/authenticate"
      }
    },
    "/V1/tfa/provider/google/configure": {
      "post": {
        "tags": ["tfa/provider/google/configure"],
        "description": "Get the information required to configure google",
        "operationId": "PostV1TfaProviderGoogleConfigure",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TfaProviderDuo_securityConfigurePostv1tfaproviderduoSecurityconfigurebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-google-configure-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-google-configure-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/google/configure"
      }
    },
    "/V1/tfa/provider/u2fkey/activate": {
      "post": {
        "tags": ["tfa/provider/u2fkey/activate"],
        "description": "Activate the provider and get a token",
        "operationId": "PostV1TfaProviderU2fkeyActivate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["tfaToken", "publicKeyCredentialJson"],
                "properties": {
                  "tfaToken": {
                    "type": "string"
                  },
                  "publicKeyCredentialJson": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["tfaToken", "publicKeyCredentialJson"],
                "properties": {
                  "tfaToken": {
                    "type": "string"
                  },
                  "publicKeyCredentialJson": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/u2fkey/activate"
      }
    },
    "/V1/tfa/provider/u2fkey/authentication-challenge": {
      "post": {
        "tags": ["tfa/provider/u2fkey/authentication-challenge"],
        "description": "Get the information to initiate a WebAuthn registration ceremony",
        "operationId": "PostV1TfaProviderU2fkeyAuthenticationchallenge",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1IntegrationAdminTokenPostv1integrationadmintokenbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-u2f-web-authn-request-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-u2f-web-authn-request-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/u2fkey/authentication-challenge"
      }
    },
    "/V1/tfa/provider/u2fkey/configure": {
      "post": {
        "tags": ["tfa/provider/u2fkey/configure"],
        "description": "Get the information to initiate a WebAuthn registration ceremony",
        "operationId": "PostV1TfaProviderU2fkeyConfigure",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1TfaProviderDuo_securityConfigurePostv1tfaproviderduoSecurityconfigurebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-u2f-web-authn-request-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/two-factor-auth-data-u2f-web-authn-request-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/u2fkey/configure"
      }
    },
    "/V1/tfa/provider/u2fkey/verify": {
      "post": {
        "tags": ["tfa/provider/u2fkey/verify"],
        "description": "Authenticate with the provider and get a token",
        "operationId": "PostV1TfaProviderU2fkeyVerify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["username", "password", "publicKeyCredentialJson"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "publicKeyCredentialJson": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["username", "password", "publicKeyCredentialJson"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "publicKeyCredentialJson": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/provider/u2fkey/verify"
      }
    },
    "/V1/tfa/providers-to-activate/{userId}": {
      "get": {
        "tags": ["tfa/providers-to-activate/{userId}"],
        "description": "Returns a list of providers to configure/enroll",
        "operationId": "GetV1TfaProviderstoactivateUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/providers-to-activate/{userId}"
      }
    },
    "/V1/tfa/tfat-providers-to-activate": {
      "get": {
        "tags": ["tfa/tfat-providers-to-activate"],
        "description": "Get the providers that the user still needs to configure",
        "operationId": "GetV1TfaTfatproviderstoactivate",
        "parameters": [
          {
            "name": "tfaToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/tfat-providers-to-activate"
      }
    },
    "/V1/tfa/tfat-user-providers": {
      "get": {
        "tags": ["tfa/tfat-user-providers"],
        "description": "Get the providers that the user is able to use for 2fa",
        "operationId": "GetV1TfaTfatuserproviders",
        "parameters": [
          {
            "name": "tfaToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/tfat-user-providers"
      }
    },
    "/V1/tfa/user-providers/{userId}": {
      "get": {
        "tags": ["tfa/user-providers/{userId}"],
        "description": "Get a user provider",
        "operationId": "GetV1TfaUserprovidersUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/two-factor-auth-provider-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/user-providers/{userId}"
      },
      "put": {
        "tags": ["tfa/user-providers/{userId}"],
        "description": "Set providers",
        "operationId": "PutV1TfaUserprovidersUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["providersCodes"],
                "properties": {
                  "providersCodes": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": ["providersCodes"],
                "properties": {
                  "providersCodes": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "tfa/user-providers/{userId}"
      }
    },
    "/V1/transactions": {
      "get": {
        "tags": ["transactions"],
        "description": "Lists transactions that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#TransactionRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1Transactions",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-transaction-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-transaction-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "transactions"
      }
    },
    "/V1/transactions/{id}": {
      "get": {
        "tags": ["transactions/{id}"],
        "description": "Loads a specified transaction.",
        "operationId": "GetV1TransactionsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The transaction ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-transaction-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-transaction-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "transactions/{id}"
      }
    },
    "/V2/carts/mine/coupons": {
      "get": {
        "tags": ["carts/mine/coupons"],
        "description": "Returns information for all coupons in a specified cart.",
        "operationId": "GetV2CartsMineCoupons",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "The coupon code data.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "The coupon code data.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/coupons"
      },
      "post": {
        "tags": ["carts/mine/coupons"],
        "description": "Append the coupon code(s) to cart",
        "operationId": "PostV2CartsMineCoupons",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV2CartsMineCouponsPostv2cartsminecouponsbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/coupons"
      },
      "put": {
        "tags": ["carts/mine/coupons"],
        "description": "Replace the coupon code(s) in cart with the new code(s)",
        "operationId": "PutV2CartsMineCoupons",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV2CartsMineCouponsPostv2cartsminecouponsbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/coupons"
      }
    },
    "/V2/carts/mine/coupons/deleteByCodes": {
      "post": {
        "tags": ["carts/mine/coupons/deleteByCodes"],
        "description": "Deletes coupon(s) from a specified cart.",
        "operationId": "PostV2CartsMineCouponsDeleteByCodes",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV2CartsMineCouponsDeleteByCodesPostv2cartsminecouponsdeletebycodesbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/coupons/deleteByCodes"
      }
    },
    "/V2/carts/{cartId}/coupons": {
      "get": {
        "tags": ["carts/{cartId}/coupons"],
        "description": "Returns information for all coupons in a specified cart.",
        "operationId": "GetV2CartsCartIdCoupons",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "The coupon code data.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "The coupon code data.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/coupons"
      },
      "post": {
        "tags": ["carts/{cartId}/coupons"],
        "description": "Append the coupon code(s) to cart",
        "operationId": "PostV2CartsCartIdCoupons",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV2CartsMineCouponsPostv2cartsminecouponsbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/coupons"
      },
      "put": {
        "tags": ["carts/{cartId}/coupons"],
        "description": "Replace the coupon code(s) in cart with the new code(s)",
        "operationId": "PutV2CartsCartIdCoupons",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV2CartsMineCouponsPostv2cartsminecouponsbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/coupons"
      }
    },
    "/V2/carts/{cartId}/coupons/deleteByCodes": {
      "post": {
        "tags": ["carts/{cartId}/coupons/deleteByCodes"],
        "description": "Deletes coupon(s) from a specified cart.",
        "operationId": "PostV2CartsCartIdCouponsDeleteByCodes",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV2CartsMineCouponsDeleteByCodesPostv2cartsminecouponsdeletebycodesbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/coupons/deleteByCodes"
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "addresses",
      "tags": ["addresses/{addressId}"]
    },
    {
      "name": "adobe_io_events",
      "tags": ["adobe_io_events/check_configuration"]
    },
    {
      "name": "adobestock",
      "tags": [
        "adobestock/asset/list",
        "adobestock/asset/search",
        "adobestock/asset/{id}",
        "adobestock/search"
      ]
    },
    {
      "name": "analytics",
      "tags": ["analytics/link"]
    },
    {
      "name": "applepay",
      "tags": ["applepay/auth"]
    },
    {
      "name": "attributeMetadata",
      "tags": [
        "attributeMetadata/customer",
        "attributeMetadata/customer/attribute/{attributeCode}",
        "attributeMetadata/customer/custom",
        "attributeMetadata/customer/form/{formCode}",
        "attributeMetadata/customerAddress",
        "attributeMetadata/customerAddress/attribute/{attributeCode}",
        "attributeMetadata/customerAddress/custom",
        "attributeMetadata/customerAddress/form/{formCode}"
      ]
    },
    {
      "name": "braintree",
      "tags": ["braintree/mine/payment/vault"]
    },
    {
      "name": "bulk",
      "tags": [
        "bulk",
        "bulk/{bulkUuid}/detailed-status",
        "bulk/{bulkUuid}/operation-status/{status}",
        "bulk/{bulkUuid}/status"
      ]
    },
    {
      "name": "bundle products",
      "tags": [
        "bundle-products/options/add",
        "bundle-products/options/types",
        "bundle-products/options/{optionId}",
        "bundle-products/{productSku}/children",
        "bundle-products/{sku}/links/{id}",
        "bundle-products/{sku}/links/{optionId}",
        "bundle-products/{sku}/options/all",
        "bundle-products/{sku}/options/{optionId}",
        "bundle-products/{sku}/options/{optionId}/children/{childSku}"
      ]
    },
    {
      "name": "carts",
      "tags": [
        "carts/",
        "carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}",
        "carts/guest-carts/{cartId}/giftCards",
        "carts/guest-carts/{cartId}/giftCards/{giftCardCode}",
        "carts/licence",
        "carts/licence/list",
        "carts/mine",
        "carts/mine/balance/apply",
        "carts/mine/billing-address",
        "carts/mine/checkGiftCard/{giftCardCode}",
        "carts/mine/collect-totals",
        "carts/mine/coupons",
        "carts/mine/coupons/deleteByCodes",
        "carts/mine/coupons/{couponCode}",
        "carts/mine/estimate-shipping-methods",
        "carts/mine/estimate-shipping-methods-by-address-id",
        "carts/mine/gift-message",
        "carts/mine/gift-message/{itemId}",
        "carts/mine/giftCards",
        "carts/mine/giftCards/{giftCardCode}",
        "carts/mine/items",
        "carts/mine/items/{itemId}",
        "carts/mine/order",
        "carts/mine/payment-information",
        "carts/mine/payment-methods",
        "carts/mine/payment-order",
        "carts/mine/payment-order/{id}",
        "carts/mine/po-payment-information",
        "carts/mine/selected-payment-method",
        "carts/mine/set-payment-information",
        "carts/mine/shipping-information",
        "carts/mine/shipping-methods",
        "carts/mine/totals",
        "carts/mine/totals-information",
        "carts/search",
        "carts/{cartId}",
        "carts/{cartId}/billing-address",
        "carts/{cartId}/coupons",
        "carts/{cartId}/coupons/deleteByCodes",
        "carts/{cartId}/coupons/{couponCode}",
        "carts/{cartId}/estimate-shipping-methods",
        "carts/{cartId}/estimate-shipping-methods-by-address-id",
        "carts/{cartId}/gift-message",
        "carts/{cartId}/gift-message/{itemId}",
        "carts/{cartId}/giftCards",
        "carts/{cartId}/giftCards/{giftCardCode}",
        "carts/{cartId}/items",
        "carts/{cartId}/items/{itemId}",
        "carts/{cartId}/order",
        "carts/{cartId}/payment-methods",
        "carts/{cartId}/selected-payment-method",
        "carts/{cartId}/shipping-information",
        "carts/{cartId}/shipping-methods",
        "carts/{cartId}/totals",
        "carts/{cartId}/totals-information",
        "carts/{quoteId}/giftCards",
        "carts/{quoteId}/items"
      ]
    },
    {
      "name": "categories",
      "tags": [
        "categories",
        "categories/attributes",
        "categories/attributes/{attributeCode}",
        "categories/attributes/{attributeCode}/options",
        "categories/list",
        "categories/{categoryId}",
        "categories/{categoryId}/move",
        "categories/{categoryId}/products",
        "categories/{categoryId}/products/{sku}",
        "categories/{id}"
      ]
    },
    {
      "name": "cmsBlock",
      "tags": ["cmsBlock", "cmsBlock/search", "cmsBlock/{blockId}", "cmsBlock/{id}"]
    },
    {
      "name": "cmsPage",
      "tags": ["cmsPage", "cmsPage/search", "cmsPage/{id}", "cmsPage/{pageId}"]
    },
    {
      "name": "company",
      "tags": [
        "company/",
        "company/assignRoles",
        "company/role/",
        "company/role/{id}",
        "company/role/{roleId}",
        "company/role/{roleId}/users",
        "company/{companyId}"
      ]
    },
    {
      "name": "companyCredits",
      "tags": [
        "companyCredits/",
        "companyCredits/company/{companyId}",
        "companyCredits/history",
        "companyCredits/history/{historyId}",
        "companyCredits/{creditId}",
        "companyCredits/{creditId}/decreaseBalance",
        "companyCredits/{creditId}/increaseBalance",
        "companyCredits/{id}"
      ]
    },
    {
      "name": "configurable products",
      "tags": [
        "configurable-products/variation",
        "configurable-products/{sku}/child",
        "configurable-products/{sku}/children",
        "configurable-products/{sku}/children/{childSku}",
        "configurable-products/{sku}/options",
        "configurable-products/{sku}/options/all",
        "configurable-products/{sku}/options/{id}"
      ]
    },
    {
      "name": "coupons",
      "tags": [
        "coupons",
        "coupons/deleteByCodes",
        "coupons/deleteByIds",
        "coupons/generate",
        "coupons/search",
        "coupons/{couponId}"
      ]
    },
    {
      "name": "creditmemo",
      "tags": [
        "creditmemo",
        "creditmemo/refund",
        "creditmemo/{id}",
        "creditmemo/{id}/comments",
        "creditmemo/{id}/emails"
      ]
    },
    {
      "name": "creditmemos",
      "tags": ["creditmemos"]
    },
    {
      "name": "customerGroups",
      "tags": [
        "customerGroups",
        "customerGroups/default",
        "customerGroups/default/{id}",
        "customerGroups/default/{storeId}",
        "customerGroups/search",
        "customerGroups/{id}",
        "customerGroups/{id}/permissions"
      ]
    },
    {
      "name": "customers",
      "tags": [
        "customers",
        "customers/addresses/{addressId}",
        "customers/confirm",
        "customers/isEmailAvailable",
        "customers/me",
        "customers/me/activate",
        "customers/me/billingAddress",
        "customers/me/password",
        "customers/me/shippingAddress",
        "customers/password",
        "customers/resetPassword",
        "customers/search",
        "customers/validate",
        "customers/{customerId}",
        "customers/{customerId}/billingAddress",
        "customers/{customerId}/carts",
        "customers/{customerId}/confirm",
        "customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}",
        "customers/{customerId}/permissions/readonly",
        "customers/{customerId}/shippingAddress",
        "customers/{email}/activate"
      ]
    },
    {
      "name": "directory",
      "tags": ["directory/countries", "directory/countries/{countryId}", "directory/currency"]
    },
    {
      "name": "eav",
      "tags": [
        "eav/attribute-sets",
        "eav/attribute-sets/list",
        "eav/attribute-sets/{attributeSetId}"
      ]
    },
    {
      "name": "eventing",
      "tags": ["eventing/eventSubscribe", "eventing/updateConfiguration"]
    },
    {
      "name": "gift wrappings",
      "tags": ["gift-wrappings", "gift-wrappings/{id}", "gift-wrappings/{wrappingId}"]
    },
    {
      "name": "giftregistry",
      "tags": ["giftregistry/mine/estimate-shipping-methods"]
    },
    {
      "name": "guest carts",
      "tags": [
        "guest-carts",
        "guest-carts/{cartId}",
        "guest-carts/{cartId}/billing-address",
        "guest-carts/{cartId}/collect-totals",
        "guest-carts/{cartId}/coupons",
        "guest-carts/{cartId}/coupons/{couponCode}",
        "guest-carts/{cartId}/estimate-shipping-methods",
        "guest-carts/{cartId}/gift-message",
        "guest-carts/{cartId}/gift-message/{itemId}",
        "guest-carts/{cartId}/items",
        "guest-carts/{cartId}/items/{itemId}",
        "guest-carts/{cartId}/order",
        "guest-carts/{cartId}/payment-information",
        "guest-carts/{cartId}/payment-methods",
        "guest-carts/{cartId}/payment-order",
        "guest-carts/{cartId}/payment-order/{id}",
        "guest-carts/{cartId}/selected-payment-method",
        "guest-carts/{cartId}/set-payment-information",
        "guest-carts/{cartId}/shipping-information",
        "guest-carts/{cartId}/shipping-methods",
        "guest-carts/{cartId}/totals",
        "guest-carts/{cartId}/totals-information"
      ]
    },
    {
      "name": "guest giftregistry",
      "tags": ["guest-giftregistry/{cartId}/estimate-shipping-methods"]
    },
    {
      "name": "hierarchy",
      "tags": ["hierarchy/move/{id}", "hierarchy/{id}"]
    },
    {
      "name": "import",
      "tags": ["import/csv", "import/json"]
    },
    {
      "name": "integration",
      "tags": [
        "integration/admin/token",
        "integration/customer/revoke-customer-token",
        "integration/customer/token"
      ]
    },
    {
      "name": "inventory",
      "tags": [
        "inventory/are-product-salable-for-requested-qty/",
        "inventory/are-products-salable",
        "inventory/bulk-partial-source-transfer",
        "inventory/bulk-product-source-assign",
        "inventory/bulk-product-source-transfer",
        "inventory/bulk-product-source-unassign",
        "inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}",
        "inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}",
        "inventory/get-distance",
        "inventory/get-distance-provider-code",
        "inventory/get-latlng-from-address",
        "inventory/get-latslngs-from-address",
        "inventory/get-product-salable-quantity/{sku}/{stockId}",
        "inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}",
        "inventory/in-store-pickup/pickup-locations/",
        "inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}",
        "inventory/is-product-salable/{sku}/{stockId}",
        "inventory/low-quantity-notification",
        "inventory/low-quantity-notification/{sourceCode}/{sku}",
        "inventory/low-quantity-notifications-delete",
        "inventory/source-items",
        "inventory/source-items-delete",
        "inventory/source-selection-algorithm-list",
        "inventory/source-selection-algorithm-result",
        "inventory/sources",
        "inventory/sources/{sourceCode}",
        "inventory/stock-resolver/{type}/{code}",
        "inventory/stock-source-links",
        "inventory/stock-source-links-delete",
        "inventory/stocks",
        "inventory/stocks/{stockId}"
      ]
    },
    {
      "name": "invoice",
      "tags": ["invoice/{invoiceId}/refund"]
    },
    {
      "name": "invoices",
      "tags": [
        "invoices",
        "invoices/",
        "invoices/comments",
        "invoices/{id}",
        "invoices/{id}/capture",
        "invoices/{id}/comments",
        "invoices/{id}/emails",
        "invoices/{id}/void"
      ]
    },
    {
      "name": "modules",
      "tags": ["modules"]
    },
    {
      "name": "negotiable cart item note",
      "tags": [
        "negotiable-cart-item-note",
        "negotiable-cart-item-note/search",
        "negotiable-cart-item-note/{noteId}"
      ]
    },
    {
      "name": "negotiable carts",
      "tags": [
        "negotiable-carts/{cartId}/billing-address",
        "negotiable-carts/{cartId}/coupons",
        "negotiable-carts/{cartId}/coupons/{couponCode}",
        "negotiable-carts/{cartId}/estimate-shipping-methods",
        "negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id",
        "negotiable-carts/{cartId}/giftCards",
        "negotiable-carts/{cartId}/giftCards/{giftCardCode}",
        "negotiable-carts/{cartId}/payment-information",
        "negotiable-carts/{cartId}/set-payment-information",
        "negotiable-carts/{cartId}/shipping-information",
        "negotiable-carts/{cartId}/totals"
      ]
    },
    {
      "name": "negotiableQuote",
      "tags": [
        "negotiableQuote/attachmentContent",
        "negotiableQuote/decline",
        "negotiableQuote/draft",
        "negotiableQuote/pricesUpdated",
        "negotiableQuote/request",
        "negotiableQuote/submitToCustomer",
        "negotiableQuote/{quoteId}",
        "negotiableQuote/{quoteId}/comments",
        "negotiableQuote/{quoteId}/shippingMethod"
      ]
    },
    {
      "name": "order",
      "tags": [
        "order/notify-orders-are-ready-for-pickup",
        "order/{orderId}/invoice",
        "order/{orderId}/refund",
        "order/{orderId}/ship"
      ]
    },
    {
      "name": "orders",
      "tags": [
        "orders",
        "orders/create",
        "orders/items",
        "orders/items/{id}",
        "orders/{id}",
        "orders/{id}/cancel",
        "orders/{id}/comments",
        "orders/{id}/emails",
        "orders/{id}/hold",
        "orders/{id}/statuses",
        "orders/{id}/unhold",
        "orders/{parent_id}"
      ]
    },
    {
      "name": "payments config",
      "tags": [
        "payments-config/apple-pay/{location}",
        "payments-config/hosted-fields/{location}",
        "payments-config/smart-buttons/{location}",
        "payments-config/{location}"
      ]
    },
    {
      "name": "payments sdk",
      "tags": ["payments-sdk/{location}", "payments-sdk/{location}/{methodCode}"]
    },
    {
      "name": "products",
      "tags": [
        "products",
        "products/attribute-sets",
        "products/attribute-sets/attributes",
        "products/attribute-sets/groups",
        "products/attribute-sets/groups/list",
        "products/attribute-sets/groups/{groupId}",
        "products/attribute-sets/sets/list",
        "products/attribute-sets/{attributeSetId}",
        "products/attribute-sets/{attributeSetId}/attributes",
        "products/attribute-sets/{attributeSetId}/attributes/{attributeCode}",
        "products/attribute-sets/{attributeSetId}/groups",
        "products/attributes",
        "products/attributes/types",
        "products/attributes/{attributeCode}",
        "products/attributes/{attributeCode}/is-filterable",
        "products/attributes/{attributeCode}/is-filterable/{isFilterable}",
        "products/attributes/{attributeCode}/options",
        "products/attributes/{attributeCode}/options/{optionId}",
        "products/base-prices",
        "products/base-prices-information",
        "products/cost",
        "products/cost-delete",
        "products/cost-information",
        "products/downloadable-links/samples/{id}",
        "products/downloadable-links/{id}",
        "products/links/types",
        "products/links/{type}/attributes",
        "products/media/types/{attributeSetName}",
        "products/options",
        "products/options/types",
        "products/options/{optionId}",
        "products/special-price",
        "products/special-price-delete",
        "products/special-price-information",
        "products/tier-prices",
        "products/tier-prices-delete",
        "products/tier-prices-information",
        "products/types",
        "products/{productSku}/stockItems/{itemId}",
        "products/{sku}",
        "products/{sku}/downloadable-links",
        "products/{sku}/downloadable-links/samples",
        "products/{sku}/downloadable-links/samples/{id}",
        "products/{sku}/downloadable-links/{id}",
        "products/{sku}/group-prices/{customerGroupId}/tiers",
        "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}",
        "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}",
        "products/{sku}/links",
        "products/{sku}/links/{type}",
        "products/{sku}/links/{type}/{linkedProductSku}",
        "products/{sku}/media",
        "products/{sku}/media/{entryId}",
        "products/{sku}/options",
        "products/{sku}/options/{optionId}",
        "products/{sku}/websites",
        "products/{sku}/websites/{websiteId}"
      ]
    },
    {
      "name": "products render info",
      "tags": ["products-render-info"]
    },
    {
      "name": "purchase order carts",
      "tags": [
        "purchase-order-carts/{cartId}/billing-address",
        "purchase-order-carts/{cartId}/estimate-shipping-methods",
        "purchase-order-carts/{cartId}/estimate-shipping-methods-by-address-id",
        "purchase-order-carts/{cartId}/giftCards",
        "purchase-order-carts/{cartId}/giftCards/{giftCardCode}",
        "purchase-order-carts/{cartId}/payment-information",
        "purchase-order-carts/{cartId}/set-payment-information",
        "purchase-order-carts/{cartId}/totals"
      ]
    },
    {
      "name": "requisition_lists",
      "tags": ["requisition_lists"]
    },
    {
      "name": "returns",
      "tags": [
        "returns",
        "returns/{id}",
        "returns/{id}/comments",
        "returns/{id}/labels",
        "returns/{id}/tracking-numbers",
        "returns/{id}/tracking-numbers/{trackId}"
      ]
    },
    {
      "name": "returnsAttributeMetadata",
      "tags": [
        "returnsAttributeMetadata",
        "returnsAttributeMetadata/custom",
        "returnsAttributeMetadata/form/{formCode}",
        "returnsAttributeMetadata/{attributeCode}"
      ]
    },
    {
      "name": "reward",
      "tags": ["reward/mine/use-reward"]
    },
    {
      "name": "salesRules",
      "tags": ["salesRules", "salesRules/search", "salesRules/{ruleId}"]
    },
    {
      "name": "search",
      "tags": ["search"]
    },
    {
      "name": "sharedCatalog",
      "tags": [
        "sharedCatalog",
        "sharedCatalog/",
        "sharedCatalog/{id}",
        "sharedCatalog/{id}/assignCategories",
        "sharedCatalog/{id}/assignProducts",
        "sharedCatalog/{id}/categories",
        "sharedCatalog/{id}/products",
        "sharedCatalog/{id}/unassignCategories",
        "sharedCatalog/{id}/unassignProducts",
        "sharedCatalog/{sharedCatalogId}",
        "sharedCatalog/{sharedCatalogId}/assignCompanies",
        "sharedCatalog/{sharedCatalogId}/assignTierPrices",
        "sharedCatalog/{sharedCatalogId}/companies",
        "sharedCatalog/{sharedCatalogId}/resetTierPrices",
        "sharedCatalog/{sharedCatalogId}/unassignCompanies"
      ]
    },
    {
      "name": "shipment",
      "tags": [
        "shipment/",
        "shipment/track",
        "shipment/track/{id}",
        "shipment/{id}",
        "shipment/{id}/comments",
        "shipment/{id}/emails",
        "shipment/{id}/label"
      ]
    },
    {
      "name": "shipments",
      "tags": ["shipments"]
    },
    {
      "name": "stockItems",
      "tags": ["stockItems/lowStock/", "stockItems/{productSku}"]
    },
    {
      "name": "stockStatuses",
      "tags": ["stockStatuses/{productSku}"]
    },
    {
      "name": "store",
      "tags": ["store/storeConfigs", "store/storeGroups", "store/storeViews", "store/websites"]
    },
    {
      "name": "taxClasses",
      "tags": ["taxClasses", "taxClasses/search", "taxClasses/{classId}", "taxClasses/{taxClassId}"]
    },
    {
      "name": "taxRates",
      "tags": ["taxRates", "taxRates/search", "taxRates/{rateId}"]
    },
    {
      "name": "taxRules",
      "tags": ["taxRules", "taxRules/search", "taxRules/{ruleId}"]
    },
    {
      "name": "team",
      "tags": ["team/", "team/{companyId}", "team/{teamId}"]
    },
    {
      "name": "tfa",
      "tags": [
        "tfa/default-provider-code/{userId}",
        "tfa/forced-providers",
        "tfa/installed-providers",
        "tfa/provider/authy/activate",
        "tfa/provider/authy/authenticate",
        "tfa/provider/authy/authenticate-onetouch",
        "tfa/provider/authy/configure",
        "tfa/provider/authy/send-token/{via}",
        "tfa/provider/duo_security/activate",
        "tfa/provider/duo_security/authenticate",
        "tfa/provider/duo_security/configure",
        "tfa/provider/duo_security/get-authentication-data",
        "tfa/provider/google/activate",
        "tfa/provider/google/authenticate",
        "tfa/provider/google/configure",
        "tfa/provider/u2fkey/activate",
        "tfa/provider/u2fkey/authentication-challenge",
        "tfa/provider/u2fkey/configure",
        "tfa/provider/u2fkey/verify",
        "tfa/providers-to-activate/{userId}",
        "tfa/tfat-providers-to-activate",
        "tfa/tfat-user-providers",
        "tfa/user-providers/{userId}"
      ]
    },
    {
      "name": "transactions",
      "tags": ["transactions", "transactions/{id}"]
    }
  ],
  "servers": [
    {
      "url": "http://example.com/rest/default"
    }
  ],
  "components": {
    "requestBodies": {
      "PostV1OrdersPostv1ordersbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["entity"],
              "properties": {
                "entity": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["entity"],
              "properties": {
                "entity": {
                  "$ref": "#/components/schemas/sales-data-order-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsAttributesetsGroupsPostv1productsattributesetsgroupsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["group"],
              "properties": {
                "group": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["group"],
              "properties": {
                "group": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsSkuDownloadablelinksPostv1productsskudownloadablelinksbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["link"],
              "properties": {
                "link": {
                  "$ref": "#/components/schemas/downloadable-data-link-interface"
                },
                "isGlobalScopeContent": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["link"],
              "properties": {
                "link": {
                  "$ref": "#/components/schemas/downloadable-data-link-interface"
                },
                "isGlobalScopeContent": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["address"],
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                },
                "useForShipping": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["address"],
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                },
                "useForShipping": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMineShippinginformationPostv1cartsmineshippinginformationbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["addressInformation"],
              "properties": {
                "addressInformation": {
                  "$ref": "#/components/schemas/checkout-data-shipping-information-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["addressInformation"],
              "properties": {
                "addressInformation": {
                  "$ref": "#/components/schemas/checkout-data-shipping-information-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1SharedCatalogPostv1sharedcatalogbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["sharedCatalog"],
              "properties": {
                "sharedCatalog": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["sharedCatalog"],
              "properties": {
                "sharedCatalog": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1SharedCatalogIdAssignProductsPostv1sharedcatalogidassignproductsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["products"],
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["products"],
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsSkuDownloadablelinksSamplesPostv1productsskudownloadablelinkssamplesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["sample"],
              "properties": {
                "sample": {
                  "$ref": "#/components/schemas/downloadable-data-sample-interface"
                },
                "isGlobalScopeContent": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["sample"],
              "properties": {
                "sample": {
                  "$ref": "#/components/schemas/downloadable-data-sample-interface"
                },
                "isGlobalScopeContent": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PutV1EavAttributesetsAttributeSetIdPutv1eavattributesetsattributesetidbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["attributeSet"],
              "properties": {
                "attributeSet": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["attributeSet"],
              "properties": {
                "attributeSet": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1GiftwrappingsPostv1giftwrappingsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                },
                "storeId": {
                  "type": "integer"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
                },
                "storeId": {
                  "type": "integer"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1SharedCatalogIdAssignCategoriesPostv1sharedcatalogidassigncategoriesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["categories"],
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["categories"],
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1GiftregistryMineEstimateshippingmethodsPostv1giftregistrymineestimateshippingmethodsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["registryId"],
              "properties": {
                "registryId": {
                  "type": "integer",
                  "description": "The estimate registry id"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["registryId"],
              "properties": {
                "registryId": {
                  "type": "integer",
                  "description": "The estimate registry id"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ReturnsPostv1returnsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["rmaDataObject"],
              "properties": {
                "rmaDataObject": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["rmaDataObject"],
              "properties": {
                "rmaDataObject": {
                  "$ref": "#/components/schemas/rma-data-rma-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PutV1CartsMinePutv1cartsminebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["quote"],
              "properties": {
                "quote": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["quote"],
              "properties": {
                "quote": {
                  "$ref": "#/components/schemas/quote-data-cart-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsOptionsPostv1productsoptionsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["option"],
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["option"],
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsTierpricesPostv1productstierpricesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["prices"],
              "properties": {
                "prices": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["prices"],
              "properties": {
                "prices": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMineEstimateshippingmethodsPostv1cartsmineestimateshippingmethodsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["address"],
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["address"],
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["sourceItems"],
              "properties": {
                "sourceItems": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-source-item-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["sourceItems"],
              "properties": {
                "sourceItems": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-source-item-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV2CartsMineCouponsDeleteByCodesPostv2cartsminecouponsdeletebycodesbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "couponCodes": {
                  "type": "array",
                  "description": "coupon codes",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "couponCodes": {
                  "type": "array",
                  "description": "coupon codes",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsSpecialpricePostv1productsspecialpricebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["prices"],
              "properties": {
                "prices": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["prices"],
              "properties": {
                "prices": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMineItemsPostv1cartsmineitemsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["cartItem"],
              "properties": {
                "cartItem": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["cartItem"],
              "properties": {
                "cartItem": {
                  "$ref": "#/components/schemas/quote-data-cart-item-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1TfaProviderDuo_securityConfigurePostv1tfaproviderduoSecurityconfigurebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["tfaToken"],
              "properties": {
                "tfaToken": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["tfaToken"],
              "properties": {
                "tfaToken": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1IntegrationAdminTokenPostv1integrationadmintokenbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["username", "password"],
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["username", "password"],
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1BundleproductsOptionsAddPostv1bundleproductsoptionsaddbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["option"],
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/bundle-data-option-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["option"],
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/bundle-data-option-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMineTotalsinformationPostv1cartsminetotalsinformationbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["addressInformation"],
              "properties": {
                "addressInformation": {
                  "$ref": "#/components/schemas/checkout-data-totals-information-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["addressInformation"],
              "properties": {
                "addressInformation": {
                  "$ref": "#/components/schemas/checkout-data-totals-information-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CompanyRolePostv1companyrolebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["role"],
              "properties": {
                "role": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["role"],
              "properties": {
                "role": {
                  "$ref": "#/components/schemas/company-data-role-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PutV1CustomersMeActivatePutv1customersmeactivatebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["confirmationKey"],
              "properties": {
                "confirmationKey": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["confirmationKey"],
              "properties": {
                "confirmationKey": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CompanyPostv1companybody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["company"],
              "properties": {
                "company": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["company"],
              "properties": {
                "company": {
                  "$ref": "#/components/schemas/company-data-company-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CategoriesCategoryIdProductsPostv1categoriescategoryidproductsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["productLink"],
              "properties": {
                "productLink": {
                  "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["productLink"],
              "properties": {
                "productLink": {
                  "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PutV1CartsMineSelectedpaymentmethodPutv1cartsmineselectedpaymentmethodbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["method"],
              "properties": {
                "method": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["method"],
              "properties": {
                "method": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PutV1CartsCartIdPutv1cartscartidbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["customerId", "storeId"],
              "properties": {
                "customerId": {
                  "type": "integer",
                  "description": "The customer ID."
                },
                "storeId": {
                  "type": "integer"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["customerId", "storeId"],
              "properties": {
                "customerId": {
                  "type": "integer",
                  "description": "The customer ID."
                },
                "storeId": {
                  "type": "integer"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsPostv1productsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["product"],
              "properties": {
                "product": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                },
                "saveOptions": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["product"],
              "properties": {
                "product": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                },
                "saveOptions": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1SalesRulesPostv1salesrulesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["rule"],
              "properties": {
                "rule": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["rule"],
              "properties": {
                "rule": {
                  "$ref": "#/components/schemas/sales-rule-data-rule-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PutV1BundleproductsSkuLinksIdPutv1bundleproductsskulinksidbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["linkedProduct"],
              "properties": {
                "linkedProduct": {
                  "$ref": "#/components/schemas/bundle-data-link-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["linkedProduct"],
              "properties": {
                "linkedProduct": {
                  "$ref": "#/components/schemas/bundle-data-link-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsGuestcartsCartIdGiftCardsPostv1cartsguestcartscartidgiftcardsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["giftCardAccountData"],
              "properties": {
                "giftCardAccountData": {
                  "$ref": "#/components/schemas/gift-card-account-data-gift-card-account-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["giftCardAccountData"],
              "properties": {
                "giftCardAccountData": {
                  "$ref": "#/components/schemas/gift-card-account-data-gift-card-account-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PutV1CartsMineCollecttotalsPutv1cartsminecollecttotalsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["paymentMethod"],
              "properties": {
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "shippingCarrierCode": {
                  "type": "string",
                  "description": "The carrier code."
                },
                "shippingMethodCode": {
                  "type": "string",
                  "description": "The shipping method code."
                },
                "additionalData": {
                  "$ref": "#/components/schemas/quote-data-totals-additional-data-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["paymentMethod"],
              "properties": {
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "shippingCarrierCode": {
                  "type": "string",
                  "description": "The carrier code."
                },
                "shippingMethodCode": {
                  "type": "string",
                  "description": "The shipping method code."
                },
                "additionalData": {
                  "$ref": "#/components/schemas/quote-data-totals-additional-data-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMineEstimateshippingmethodsbyaddressidPostv1cartsmineestimateshippingmethodsbyaddressidbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["addressId"],
              "properties": {
                "addressId": {
                  "type": "integer",
                  "description": "The estimate address id"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["addressId"],
              "properties": {
                "addressId": {
                  "type": "integer",
                  "description": "The estimate address id"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMineGiftmessagePostv1cartsminegiftmessagebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["giftMessage"],
              "properties": {
                "giftMessage": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["giftMessage"],
              "properties": {
                "giftMessage": {
                  "$ref": "#/components/schemas/gift-message-data-message-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PutV1CartsMineOrderPutv1cartsmineorderbody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMinePaymentinformationPostv1cartsminepaymentinformationbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["paymentMethod"],
              "properties": {
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["paymentMethod"],
              "properties": {
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMinePaymentorderPostv1cartsminepaymentorderbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["methodCode", "paymentSource", "location"],
              "properties": {
                "methodCode": {
                  "type": "string"
                },
                "paymentSource": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "vaultIntent": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["methodCode", "paymentSource", "location"],
              "properties": {
                "methodCode": {
                  "type": "string"
                },
                "paymentSource": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "vaultIntent": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CategoriesPostv1categoriesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["category"],
              "properties": {
                "category": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["category"],
              "properties": {
                "category": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CmsBlockPostv1cmsblockbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["block"],
              "properties": {
                "block": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["block"],
              "properties": {
                "block": {
                  "$ref": "#/components/schemas/cms-data-block-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CmsPagePostv1cmspagebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["page"],
              "properties": {
                "page": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["page"],
              "properties": {
                "page": {
                  "$ref": "#/components/schemas/cms-data-page-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CompanyCreditsCreditIdDecreaseBalancePostv1companycreditscreditiddecreasebalancebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["value", "currency", "operationType"],
              "properties": {
                "value": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                },
                "operationType": {
                  "type": "integer"
                },
                "comment": {
                  "type": "string",
                  "description": "[optional]"
                },
                "options": {
                  "$ref": "#/components/schemas/company-credit-data-credit-balance-options-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["value", "currency", "operationType"],
              "properties": {
                "value": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                },
                "operationType": {
                  "type": "integer"
                },
                "comment": {
                  "type": "string",
                  "description": "[optional]"
                },
                "options": {
                  "$ref": "#/components/schemas/company-credit-data-credit-balance-options-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ConfigurableproductsSkuOptionsPostv1configurableproductsskuoptionsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["option"],
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/configurable-product-data-option-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["option"],
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/configurable-product-data-option-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CouponsPostv1couponsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["coupon"],
              "properties": {
                "coupon": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["coupon"],
              "properties": {
                "coupon": {
                  "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CustomerGroupsPostv1customergroupsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["group"],
              "properties": {
                "group": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["group"],
              "properties": {
                "group": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PutV1CustomersMePutv1customersmebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["customer"],
              "properties": {
                "customer": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                },
                "passwordHash": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["customer"],
              "properties": {
                "customer": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                },
                "passwordHash": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1GuestcartsCartIdPaymentinformationPostv1guestcartscartidpaymentinformationbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["email", "paymentMethod"],
              "properties": {
                "email": {
                  "type": "string"
                },
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["email", "paymentMethod"],
              "properties": {
                "email": {
                  "type": "string"
                },
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1InventoryBulkproductsourceassignPostv1inventorybulkproductsourceassignbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["skus", "sourceCodes"],
              "properties": {
                "skus": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sourceCodes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["skus", "sourceCodes"],
              "properties": {
                "skus": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sourceCodes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1InventorySourcesPostv1inventorysourcesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["source"],
              "properties": {
                "source": {
                  "$ref": "#/components/schemas/inventory-api-data-source-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["source"],
              "properties": {
                "source": {
                  "$ref": "#/components/schemas/inventory-api-data-source-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1InventoryStocksourcelinksPostv1inventorystocksourcelinksbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["links"],
              "properties": {
                "links": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-stock-source-link-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["links"],
              "properties": {
                "links": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-stock-source-link-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1InventoryStocksPostv1inventorystocksbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["stock"],
              "properties": {
                "stock": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["stock"],
              "properties": {
                "stock": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsAttributesPostv1productsattributesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["attribute"],
              "properties": {
                "attribute": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["attribute"],
              "properties": {
                "attribute": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsAttributesAttributeCodeOptionsPostv1productsattributesattributecodeoptionsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["option"],
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["option"],
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["skus"],
              "properties": {
                "skus": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["skus"],
              "properties": {
                "skus": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsSkuMediaPostv1productsskumediabody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["entry"],
              "properties": {
                "entry": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["entry"],
              "properties": {
                "entry": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsSkuWebsitesPostv1productsskuwebsitesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["productWebsiteLink"],
              "properties": {
                "productWebsiteLink": {
                  "$ref": "#/components/schemas/catalog-data-product-website-link-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["productWebsiteLink"],
              "properties": {
                "productWebsiteLink": {
                  "$ref": "#/components/schemas/catalog-data-product-website-link-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1SharedCatalogSharedCatalogIdAssignCompaniesPostv1sharedcatalogsharedcatalogidassigncompaniesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["companies"],
              "properties": {
                "companies": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/company-data-company-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["companies"],
              "properties": {
                "companies": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/company-data-company-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1TaxClassesPostv1taxclassesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["taxClass"],
              "properties": {
                "taxClass": {
                  "$ref": "#/components/schemas/tax-data-tax-class-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["taxClass"],
              "properties": {
                "taxClass": {
                  "$ref": "#/components/schemas/tax-data-tax-class-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1TaxRatesPostv1taxratesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["taxRate"],
              "properties": {
                "taxRate": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["taxRate"],
              "properties": {
                "taxRate": {
                  "$ref": "#/components/schemas/tax-data-tax-rate-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1TaxRulesPostv1taxrulesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["rule"],
              "properties": {
                "rule": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["rule"],
              "properties": {
                "rule": {
                  "$ref": "#/components/schemas/tax-data-tax-rule-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1TeamCompanyIdPostv1teamcompanyidbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["team"],
              "properties": {
                "team": {
                  "$ref": "#/components/schemas/company-data-team-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["team"],
              "properties": {
                "team": {
                  "$ref": "#/components/schemas/company-data-team-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1TfaProviderAuthyActivatePostv1tfaproviderauthyactivatebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["tfaToken", "otp"],
              "properties": {
                "tfaToken": {
                  "type": "string"
                },
                "otp": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["tfaToken", "otp"],
              "properties": {
                "tfaToken": {
                  "type": "string"
                },
                "otp": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1TfaProviderAuthyAuthenticatePostv1tfaproviderauthyauthenticatebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["username", "password", "otp"],
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "otp": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["username", "password", "otp"],
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "otp": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV2CartsMineCouponsPostv2cartsminecouponsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": ["couponCodes"],
              "properties": {
                "couponCodes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": ["couponCodes"],
              "properties": {
                "couponCodes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "schemas": {
      "error-response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "$ref": "#/components/schemas/error-errors"
          },
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "parameters": {
            "$ref": "#/components/schemas/error-parameters"
          },
          "trace": {
            "type": "string",
            "description": "Stack trace"
          }
        },
        "required": ["message"]
      },
      "error-errors": {
        "type": "array",
        "description": "Errors list",
        "items": {
          "$ref": "#/components/schemas/error-errors-item"
        }
      },
      "error-errors-item": {
        "type": "object",
        "description": "Error details",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "parameters": {
            "$ref": "#/components/schemas/error-parameters"
          }
        }
      },
      "error-parameters": {
        "type": "array",
        "description": "Error parameters list",
        "items": {
          "$ref": "#/components/schemas/error-parameters-item"
        }
      },
      "error-parameters-item": {
        "type": "object",
        "description": "Error parameters item",
        "properties": {
          "resources": {
            "type": "string",
            "description": "ACL resource"
          },
          "fieldName": {
            "type": "string",
            "description": "Missing or invalid field name"
          },
          "fieldValue": {
            "type": "string",
            "description": "Incorrect field value"
          }
        }
      },
      "store-data-store-interface": {
        "type": "object",
        "description": "Store interface",
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Store name"
          },
          "website_id": {
            "type": "integer"
          },
          "store_group_id": {
            "type": "integer"
          },
          "is_active": {
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/store-data-store-extension-interface"
          }
        },
        "required": ["id", "code", "name", "website_id", "store_group_id", "is_active"]
      },
      "store-data-store-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\StoreInterface"
      },
      "store-data-group-interface": {
        "type": "object",
        "description": "Group interface",
        "properties": {
          "id": {
            "type": "integer"
          },
          "website_id": {
            "type": "integer"
          },
          "root_category_id": {
            "type": "integer"
          },
          "default_store_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "description": "Group code."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/store-data-group-extension-interface"
          }
        },
        "required": ["id", "website_id", "root_category_id", "default_store_id", "name", "code"]
      },
      "store-data-group-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\GroupInterface"
      },
      "store-data-website-interface": {
        "type": "object",
        "description": "Website interface",
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Website name"
          },
          "default_group_id": {
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/store-data-website-extension-interface"
          }
        },
        "required": ["id", "code", "name", "default_group_id"]
      },
      "store-data-website-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\WebsiteInterface"
      },
      "store-data-store-config-interface": {
        "type": "object",
        "description": "Interface for store config",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Store id"
          },
          "code": {
            "type": "string",
            "description": "Store code"
          },
          "website_id": {
            "type": "integer",
            "description": "Website id of the store"
          },
          "locale": {
            "type": "string",
            "description": "Store locale"
          },
          "base_currency_code": {
            "type": "string",
            "description": "Base currency code"
          },
          "default_display_currency_code": {
            "type": "string",
            "description": "Default display currency code"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of the store"
          },
          "weight_unit": {
            "type": "string",
            "description": "The unit of weight"
          },
          "base_url": {
            "type": "string",
            "description": "Base URL for the store"
          },
          "base_link_url": {
            "type": "string",
            "description": "Base link URL for the store"
          },
          "base_static_url": {
            "type": "string",
            "description": "Base static URL for the store"
          },
          "base_media_url": {
            "type": "string",
            "description": "Base media URL for the store"
          },
          "secure_base_url": {
            "type": "string",
            "description": "Secure base URL for the store"
          },
          "secure_base_link_url": {
            "type": "string",
            "description": "Secure base link URL for the store"
          },
          "secure_base_static_url": {
            "type": "string",
            "description": "Secure base static URL for the store"
          },
          "secure_base_media_url": {
            "type": "string",
            "description": "Secure base media URL for the store"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/store-data-store-config-extension-interface"
          }
        },
        "required": [
          "id",
          "code",
          "website_id",
          "locale",
          "base_currency_code",
          "default_display_currency_code",
          "timezone",
          "weight_unit",
          "base_url",
          "base_link_url",
          "base_static_url",
          "base_media_url",
          "secure_base_url",
          "secure_base_link_url",
          "secure_base_static_url",
          "secure_base_media_url"
        ]
      },
      "store-data-store-config-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\StoreConfigInterface"
      },
      "directory-data-currency-information-interface": {
        "type": "object",
        "description": "Currency Information interface.",
        "properties": {
          "base_currency_code": {
            "type": "string",
            "description": "The base currency code for the store."
          },
          "base_currency_symbol": {
            "type": "string",
            "description": "The currency symbol of the base currency for the store."
          },
          "default_display_currency_code": {
            "type": "string",
            "description": "The default display currency code for the store."
          },
          "default_display_currency_symbol": {
            "type": "string",
            "description": "The currency symbol of the default display currency for the store."
          },
          "available_currency_codes": {
            "type": "array",
            "description": "The list of allowed currency codes for the store.",
            "items": {
              "type": "string"
            }
          },
          "exchange_rates": {
            "type": "array",
            "description": "The list of exchange rate information for the store.",
            "items": {
              "$ref": "#/components/schemas/directory-data-exchange-rate-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/directory-data-currency-information-extension-interface"
          }
        },
        "required": [
          "base_currency_code",
          "base_currency_symbol",
          "default_display_currency_code",
          "default_display_currency_symbol",
          "available_currency_codes",
          "exchange_rates"
        ]
      },
      "directory-data-exchange-rate-interface": {
        "type": "object",
        "description": "Exchange Rate interface.",
        "properties": {
          "currency_to": {
            "type": "string",
            "description": "The currency code associated with the exchange rate."
          },
          "rate": {
            "type": "number",
            "description": "The exchange rate for the associated currency and the store's base currency."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/directory-data-exchange-rate-extension-interface"
          }
        },
        "required": ["currency_to", "rate"]
      },
      "directory-data-exchange-rate-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\ExchangeRateInterface"
      },
      "directory-data-currency-information-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\CurrencyInformationInterface"
      },
      "directory-data-country-information-interface": {
        "type": "object",
        "description": "Country Information interface.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The country id for the store."
          },
          "two_letter_abbreviation": {
            "type": "string",
            "description": "The country 2 letter abbreviation for the store."
          },
          "three_letter_abbreviation": {
            "type": "string",
            "description": "The country 3 letter abbreviation for the store."
          },
          "full_name_locale": {
            "type": "string",
            "description": "The country full name (in store locale) for the store."
          },
          "full_name_english": {
            "type": "string",
            "description": "The country full name (in English) for the store."
          },
          "available_regions": {
            "type": "array",
            "description": "The available regions for the store.",
            "items": {
              "$ref": "#/components/schemas/directory-data-region-information-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/directory-data-country-information-extension-interface"
          }
        },
        "required": [
          "id",
          "two_letter_abbreviation",
          "three_letter_abbreviation",
          "full_name_locale",
          "full_name_english"
        ]
      },
      "directory-data-region-information-interface": {
        "type": "object",
        "description": "Region Information interface.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Region id"
          },
          "code": {
            "type": "string",
            "description": "Region code"
          },
          "name": {
            "type": "string",
            "description": "Region name"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/directory-data-region-information-extension-interface"
          }
        },
        "required": ["id", "code", "name"]
      },
      "directory-data-region-information-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\RegionInformationInterface"
      },
      "directory-data-country-information-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\CountryInformationInterface"
      },
      "adobe-io-events-client-configuration-check-result-interface": {
        "type": "object",
        "description": "Contains configuration status for each necessary config setting",
        "properties": {
          "status": {
            "type": "string",
            "description": "Ok/error status of the configuration"
          },
          "technical_service_account_configured": {
            "type": "boolean",
            "description": "The technical service account is configured"
          },
          "technical_service_account_can_connect_to_io_events": {
            "type": "boolean",
            "description": "Providers are configured to allow the service account to connect"
          },
          "provider_id_configured": {
            "type": "string",
            "description": "The provider id if configured"
          },
          "provider_id_valid": {
            "type": "boolean",
            "description": "A configured provider id is valid"
          }
        },
        "required": [
          "status",
          "technical_service_account_configured",
          "technical_service_account_can_connect_to_io_events",
          "provider_id_configured",
          "provider_id_valid"
        ]
      },
      "adobe-commerce-events-client-data-event-data-interface": {
        "type": "object",
        "description": "Interface for event data from webapi requests",
        "properties": {
          "name": {
            "type": "string",
            "description": "Event name"
          },
          "parent": {
            "type": "string",
            "description": "Event parent name"
          },
          "fields": {
            "type": "array",
            "description": "Event fields",
            "items": {
              "$ref": "#/components/schemas/adobe-commerce-events-client-data-event-field-interface"
            }
          },
          "rules": {
            "type": "array",
            "description": "Event fields",
            "items": {
              "$ref": "#/components/schemas/adobe-commerce-events-client-data-event-rule-interface"
            }
          },
          "destination": {
            "type": "string",
            "description": "Event destination"
          },
          "priority": {
            "type": "boolean",
            "description": "Event priority"
          }
        },
        "required": ["name", "parent", "fields", "rules", "destination", "priority"]
      },
      "adobe-commerce-events-client-data-event-field-interface": {
        "type": "object",
        "description": "Interface for event field data from webapi requests",
        "properties": {
          "name": {
            "type": "string",
            "description": "Event field name"
          },
          "converter": {
            "type": "string",
            "description": "Event field converter"
          }
        },
        "required": ["name", "converter"]
      },
      "adobe-commerce-events-client-data-event-rule-interface": {
        "type": "object",
        "description": "Interface for event rule data from webapi requests",
        "properties": {
          "field": {
            "type": "string",
            "description": "Event rule field name"
          },
          "operator": {
            "type": "string",
            "description": "Event rule operator"
          },
          "value": {
            "type": "string",
            "description": "Event rule value"
          }
        },
        "required": ["field", "operator", "value"]
      },
      "adobe-commerce-events-client-data-configuration-interface": {
        "type": "object",
        "description": "Eventing configuration",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "If is enabled"
          },
          "merchant_id": {
            "type": "string",
            "description": "Merchant id"
          },
          "environment_id": {
            "type": "string",
            "description": "Environment id"
          },
          "provider_id": {
            "type": "string",
            "description": "Provider id"
          },
          "instance_id": {
            "type": "string",
            "description": "Instance id"
          },
          "workspace_configuration": {
            "type": "string",
            "description": "Workspace configuration"
          }
        },
        "required": [
          "enabled",
          "merchant_id",
          "environment_id",
          "provider_id",
          "instance_id",
          "workspace_configuration"
        ]
      },
      "framework-search-search-result-interface": {
        "type": "object",
        "description": "Interface SearchResultInterface",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/framework-search-document-interface"
            }
          },
          "aggregations": {
            "$ref": "#/components/schemas/framework-search-aggregation-interface"
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "aggregations", "search_criteria", "total_count"]
      },
      "framework-search-document-interface": {
        "type": "object",
        "description": "Interface Search Document",
        "properties": {
          "id": {
            "type": "integer"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": ["id"]
      },
      "framework-attribute-interface": {
        "type": "object",
        "description": "Interface for custom attribute value.",
        "properties": {
          "attribute_code": {
            "type": "string",
            "description": "Attribute code"
          },
          "value": {
            "type": "string",
            "description": "Attribute value"
          }
        },
        "required": ["attribute_code", "value"]
      },
      "framework-search-aggregation-interface": {
        "type": "object",
        "description": "Interface Aggregation to get faceted data",
        "properties": {
          "buckets": {
            "type": "array",
            "description": "All Document fields",
            "items": {
              "$ref": "#/components/schemas/framework-search-bucket-interface"
            }
          },
          "bucket_names": {
            "type": "array",
            "description": "Document field names",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["buckets", "bucket_names"]
      },
      "framework-search-bucket-interface": {
        "type": "object",
        "description": "Interface for facet Bucket",
        "properties": {
          "name": {
            "type": "string",
            "description": "Field name"
          },
          "values": {
            "type": "array",
            "description": "Field values",
            "items": {
              "$ref": "#/components/schemas/framework-search-aggregation-value-interface"
            }
          }
        },
        "required": ["name", "values"]
      },
      "framework-search-aggregation-value-interface": {
        "type": "object",
        "description": "Interface Aggregation Value",
        "properties": {
          "value": {
            "type": "string",
            "description": "Aggregation"
          },
          "metrics": {
            "type": "array",
            "description": "Metrics",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["value", "metrics"]
      },
      "framework-search-search-criteria-interface": {
        "type": "object",
        "description": "Interface SearchCriteriaInterface",
        "properties": {
          "request_name": {
            "type": "string"
          },
          "filter_groups": {
            "type": "array",
            "description": "A list of filter groups.",
            "items": {
              "$ref": "#/components/schemas/framework-search-filter-group"
            }
          },
          "sort_orders": {
            "type": "array",
            "description": "Sort order.",
            "items": {
              "$ref": "#/components/schemas/framework-sort-order"
            }
          },
          "page_size": {
            "type": "integer",
            "description": "Page size."
          },
          "current_page": {
            "type": "integer",
            "description": "Current page."
          }
        },
        "required": ["request_name", "filter_groups"]
      },
      "framework-search-filter-group": {
        "type": "object",
        "description": "Groups two or more filters together using a logical OR",
        "properties": {
          "filters": {
            "type": "array",
            "description": "A list of filters in this group",
            "items": {
              "$ref": "#/components/schemas/framework-filter"
            }
          }
        }
      },
      "framework-filter": {
        "type": "object",
        "description": "Filter which can be used by any methods from service layer.",
        "properties": {
          "field": {
            "type": "string",
            "description": "Field"
          },
          "value": {
            "type": "string",
            "description": "Value"
          },
          "condition_type": {
            "type": "string",
            "description": "Condition type"
          }
        },
        "required": ["field", "value"]
      },
      "framework-sort-order": {
        "type": "object",
        "description": "Data object for sort order.",
        "properties": {
          "field": {
            "type": "string",
            "description": "Sorting field."
          },
          "direction": {
            "type": "string",
            "description": "Sorting direction."
          }
        },
        "required": ["field", "direction"]
      },
      "eav-data-attribute-set-search-results-interface": {
        "type": "object",
        "description": "Interface AttributeSetSearchResultsInterface",
        "properties": {
          "items": {
            "type": "array",
            "description": "Attribute sets list.",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-set-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "eav-data-attribute-set-interface": {
        "type": "object",
        "description": "Interface AttributeSetInterface",
        "properties": {
          "attribute_set_id": {
            "type": "integer",
            "description": "Attribute set ID"
          },
          "attribute_set_name": {
            "type": "string",
            "description": "Attribute set name"
          },
          "sort_order": {
            "type": "integer",
            "description": "Attribute set sort order index"
          },
          "entity_type_id": {
            "type": "integer",
            "description": "Attribute set entity type id"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/eav-data-attribute-set-extension-interface"
          }
        },
        "required": ["attribute_set_name", "sort_order"]
      },
      "eav-data-attribute-set-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeSetInterface"
      },
      "framework-search-criteria-interface": {
        "type": "object",
        "description": "Search criteria interface.",
        "properties": {
          "filter_groups": {
            "type": "array",
            "description": "A list of filter groups.",
            "items": {
              "$ref": "#/components/schemas/framework-search-filter-group"
            }
          },
          "sort_orders": {
            "type": "array",
            "description": "Sort order.",
            "items": {
              "$ref": "#/components/schemas/framework-sort-order"
            }
          },
          "page_size": {
            "type": "integer",
            "description": "Page size."
          },
          "current_page": {
            "type": "integer",
            "description": "Current page."
          }
        },
        "required": ["filter_groups"]
      },
      "customer-data-group-interface": {
        "type": "object",
        "description": "Customer group interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "code": {
            "type": "string",
            "description": "Code"
          },
          "tax_class_id": {
            "type": "integer",
            "description": "Tax class id"
          },
          "tax_class_name": {
            "type": "string",
            "description": "Tax class name"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-group-extension-interface"
          }
        },
        "required": ["code", "tax_class_id"]
      },
      "customer-data-group-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\GroupInterface",
        "properties": {
          "exclude_website_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "customer-data-group-search-results-interface": {
        "type": "object",
        "description": "Interface for customer groups search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Customer groups list.",
            "items": {
              "$ref": "#/components/schemas/customer-data-group-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "customer-data-attribute-metadata-interface": {
        "type": "object",
        "description": "Customer attribute metadata interface.",
        "properties": {
          "frontend_input": {
            "type": "string",
            "description": "HTML for input element."
          },
          "input_filter": {
            "type": "string",
            "description": "Template used for input (e.g. \"date\")"
          },
          "store_label": {
            "type": "string",
            "description": "Label of the store."
          },
          "validation_rules": {
            "type": "array",
            "description": "Validation rules.",
            "items": {
              "$ref": "#/components/schemas/customer-data-validation-rule-interface"
            }
          },
          "multiline_count": {
            "type": "integer",
            "description": "Of lines of the attribute value."
          },
          "visible": {
            "type": "boolean",
            "description": "Attribute is visible on frontend."
          },
          "required": {
            "type": "boolean",
            "description": "Attribute is required."
          },
          "data_model": {
            "type": "string",
            "description": "Data model for attribute."
          },
          "options": {
            "type": "array",
            "description": "Options of the attribute (key => value pairs for select)",
            "items": {
              "$ref": "#/components/schemas/customer-data-option-interface"
            }
          },
          "frontend_class": {
            "type": "string",
            "description": "Class which is used to display the attribute on frontend."
          },
          "user_defined": {
            "type": "boolean",
            "description": "Current attribute has been defined by a user."
          },
          "sort_order": {
            "type": "integer",
            "description": "Attributes sort order."
          },
          "frontend_label": {
            "type": "string",
            "description": "Label which supposed to be displayed on frontend."
          },
          "note": {
            "type": "string",
            "description": "The note attribute for the element."
          },
          "system": {
            "type": "boolean",
            "description": "This is a system attribute."
          },
          "backend_type": {
            "type": "string",
            "description": "Backend type."
          },
          "is_used_in_grid": {
            "type": "boolean",
            "description": "It is used in customer grid"
          },
          "is_visible_in_grid": {
            "type": "boolean",
            "description": "It is visible in customer grid"
          },
          "is_filterable_in_grid": {
            "type": "boolean",
            "description": "It is filterable in customer grid"
          },
          "is_searchable_in_grid": {
            "type": "boolean",
            "description": "It is searchable in customer grid"
          },
          "attribute_code": {
            "type": "string",
            "description": "Code of the attribute."
          }
        },
        "required": [
          "frontend_input",
          "input_filter",
          "store_label",
          "validation_rules",
          "multiline_count",
          "visible",
          "required",
          "data_model",
          "options",
          "frontend_class",
          "user_defined",
          "sort_order",
          "frontend_label",
          "note",
          "system",
          "backend_type",
          "attribute_code"
        ]
      },
      "customer-data-validation-rule-interface": {
        "type": "object",
        "description": "Validation rule interface.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Validation rule name"
          },
          "value": {
            "type": "string",
            "description": "Validation rule value"
          }
        },
        "required": ["name", "value"]
      },
      "customer-data-option-interface": {
        "type": "object",
        "description": "Option interface.",
        "properties": {
          "label": {
            "type": "string",
            "description": "Option label"
          },
          "value": {
            "type": "string",
            "description": "Option value"
          },
          "options": {
            "type": "array",
            "description": "Nested options",
            "items": {
              "$ref": "#/components/schemas/customer-data-option-interface"
            }
          }
        },
        "required": ["label"]
      },
      "customer-data-customer-interface": {
        "type": "object",
        "description": "Customer entity interface for API handling.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Customer id"
          },
          "group_id": {
            "type": "integer",
            "description": "Group id"
          },
          "default_billing": {
            "type": "string",
            "description": "Default billing address id"
          },
          "default_shipping": {
            "type": "string",
            "description": "Default shipping address id"
          },
          "confirmation": {
            "type": "string",
            "description": "Confirmation"
          },
          "created_at": {
            "type": "string",
            "description": "Created at time"
          },
          "updated_at": {
            "type": "string",
            "description": "Updated at time"
          },
          "created_in": {
            "type": "string",
            "description": "Created in area"
          },
          "dob": {
            "type": "string",
            "description": "In keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customers’ full date of birth (month, day, year) along with other personal identifiers (e.g., full name) before collecting or processing such data."
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "firstname": {
            "type": "string",
            "description": "First name"
          },
          "lastname": {
            "type": "string",
            "description": "Last name"
          },
          "middlename": {
            "type": "string",
            "description": "Middle name"
          },
          "prefix": {
            "type": "string",
            "description": "Prefix"
          },
          "suffix": {
            "type": "string",
            "description": "Suffix"
          },
          "gender": {
            "type": "integer",
            "description": "Gender"
          },
          "store_id": {
            "type": "integer",
            "description": "Store id"
          },
          "taxvat": {
            "type": "string",
            "description": "Tax Vat"
          },
          "website_id": {
            "type": "integer",
            "description": "Website id"
          },
          "addresses": {
            "type": "array",
            "description": "Customer addresses.",
            "items": {
              "$ref": "#/components/schemas/customer-data-address-interface"
            }
          },
          "disable_auto_group_change": {
            "type": "integer",
            "description": "Disable auto group change flag."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-customer-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": ["email", "firstname", "lastname"]
      },
      "customer-data-address-interface": {
        "type": "object",
        "description": "Customer address interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID"
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer ID"
          },
          "region": {
            "$ref": "#/components/schemas/customer-data-region-interface"
          },
          "region_id": {
            "type": "integer",
            "description": "Region ID"
          },
          "country_id": {
            "type": "string",
            "description": "Country code in ISO_3166-2 format"
          },
          "street": {
            "type": "array",
            "description": "Street",
            "items": {
              "type": "string"
            }
          },
          "company": {
            "type": "string",
            "description": "Company"
          },
          "telephone": {
            "type": "string",
            "description": "Telephone number"
          },
          "fax": {
            "type": "string",
            "description": "Fax number"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "firstname": {
            "type": "string",
            "description": "First name"
          },
          "lastname": {
            "type": "string",
            "description": "Last name"
          },
          "middlename": {
            "type": "string",
            "description": "Middle name"
          },
          "prefix": {
            "type": "string",
            "description": "Prefix"
          },
          "suffix": {
            "type": "string",
            "description": "Suffix"
          },
          "vat_id": {
            "type": "string",
            "description": "Vat id"
          },
          "default_shipping": {
            "type": "boolean",
            "description": "If this address is default shipping address."
          },
          "default_billing": {
            "type": "boolean",
            "description": "If this address is default billing address"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-address-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        }
      },
      "customer-data-region-interface": {
        "type": "object",
        "description": "Customer address region interface.",
        "properties": {
          "region_code": {
            "type": "string",
            "description": "Region code"
          },
          "region": {
            "type": "string",
            "description": "Region"
          },
          "region_id": {
            "type": "integer",
            "description": "Region id"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-region-extension-interface"
          }
        },
        "required": ["region_code", "region", "region_id"]
      },
      "customer-data-region-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\RegionInterface"
      },
      "customer-data-address-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface"
      },
      "customer-data-customer-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface",
        "properties": {
          "company_attributes": {
            "$ref": "#/components/schemas/company-data-company-customer-interface"
          },
          "is_subscribed": {
            "type": "boolean"
          },
          "assistance_allowed": {
            "type": "integer"
          }
        }
      },
      "company-data-company-customer-interface": {
        "type": "object",
        "description": "Extended customer custom attributes interface.",
        "properties": {
          "customer_id": {
            "type": "integer",
            "description": "Customer ID."
          },
          "company_id": {
            "type": "integer",
            "description": "Company ID."
          },
          "job_title": {
            "type": "string",
            "description": "Get job title."
          },
          "status": {
            "type": "integer",
            "description": "Customer status."
          },
          "telephone": {
            "type": "string",
            "description": "Get telephone."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-company-customer-extension-interface"
          }
        }
      },
      "company-data-company-customer-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface"
      },
      "customer-data-customer-search-results-interface": {
        "type": "object",
        "description": "Interface for customer search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Customers list.",
            "items": {
              "$ref": "#/components/schemas/customer-data-customer-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "customer-data-validation-results-interface": {
        "type": "object",
        "description": "Validation results interface.",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "If the provided data is valid."
          },
          "messages": {
            "type": "array",
            "description": "Error messages as array in case of validation failure, else return empty array.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["valid", "messages"]
      },
      "cms-data-page-interface": {
        "type": "object",
        "description": "CMS page interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID"
          },
          "identifier": {
            "type": "string",
            "description": "Identifier"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "page_layout": {
            "type": "string",
            "description": "Page layout"
          },
          "meta_title": {
            "type": "string",
            "description": "Meta title"
          },
          "meta_keywords": {
            "type": "string",
            "description": "Meta keywords"
          },
          "meta_description": {
            "type": "string",
            "description": "Meta description"
          },
          "content_heading": {
            "type": "string",
            "description": "Content heading"
          },
          "content": {
            "type": "string",
            "description": "Content"
          },
          "creation_time": {
            "type": "string",
            "description": "Creation time"
          },
          "update_time": {
            "type": "string",
            "description": "Update time"
          },
          "sort_order": {
            "type": "string",
            "description": "Sort order"
          },
          "layout_update_xml": {
            "type": "string",
            "description": "Layout update xml"
          },
          "custom_theme": {
            "type": "string",
            "description": "Custom theme"
          },
          "custom_root_template": {
            "type": "string",
            "description": "Custom root template"
          },
          "custom_layout_update_xml": {
            "type": "string",
            "description": "Custom layout update xml"
          },
          "custom_theme_from": {
            "type": "string",
            "description": "Custom theme from"
          },
          "custom_theme_to": {
            "type": "string",
            "description": "Custom theme to"
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          }
        },
        "required": ["identifier"]
      },
      "cms-data-page-search-results-interface": {
        "type": "object",
        "description": "Interface for cms page search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Pages list.",
            "items": {
              "$ref": "#/components/schemas/cms-data-page-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "cms-data-block-interface": {
        "type": "object",
        "description": "CMS block interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID"
          },
          "identifier": {
            "type": "string",
            "description": "Identifier"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "content": {
            "type": "string",
            "description": "Content"
          },
          "creation_time": {
            "type": "string",
            "description": "Creation time"
          },
          "update_time": {
            "type": "string",
            "description": "Update time"
          },
          "active": {
            "type": "boolean",
            "description": "Active"
          }
        },
        "required": ["identifier"]
      },
      "cms-data-block-search-results-interface": {
        "type": "object",
        "description": "Interface for cms block search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Blocks list.",
            "items": {
              "$ref": "#/components/schemas/cms-data-block-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "catalog-data-product-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "sku": {
            "type": "string",
            "description": "Sku"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "attribute_set_id": {
            "type": "integer",
            "description": "Attribute set id"
          },
          "price": {
            "type": "number",
            "description": "Price"
          },
          "status": {
            "type": "integer",
            "description": "Status"
          },
          "visibility": {
            "type": "integer",
            "description": "Visibility"
          },
          "type_id": {
            "type": "string",
            "description": "Type id"
          },
          "created_at": {
            "type": "string",
            "description": "Created date"
          },
          "updated_at": {
            "type": "string",
            "description": "Updated date"
          },
          "weight": {
            "type": "number",
            "description": "Weight"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-extension-interface"
          },
          "product_links": {
            "type": "array",
            "description": "Product links info",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-link-interface"
            }
          },
          "options": {
            "type": "array",
            "description": "List of product options",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
            }
          },
          "media_gallery_entries": {
            "type": "array",
            "description": "Media gallery entries",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
            }
          },
          "tier_prices": {
            "type": "array",
            "description": "List of product tier prices",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
            }
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": ["sku"]
      },
      "catalog-data-product-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductInterface",
        "properties": {
          "website_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "category_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-link-interface"
            }
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-rule-discount-interface"
            }
          },
          "bundle_product_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bundle-data-option-interface"
            }
          },
          "stock_item": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
          },
          "downloadable_product_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/downloadable-data-link-interface"
            }
          },
          "downloadable_product_samples": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/downloadable-data-sample-interface"
            }
          },
          "giftcard_amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gift-card-data-giftcard-amount-interface"
            }
          },
          "configurable_product_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/configurable-product-data-option-interface"
            }
          },
          "configurable_product_links": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "catalog-data-category-link-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "position": {
            "type": "integer"
          },
          "category_id": {
            "type": "string",
            "description": "Category id"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-category-link-extension-interface"
          }
        },
        "required": ["category_id"]
      },
      "catalog-data-category-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryLinkInterface"
      },
      "sales-rule-data-rule-discount-interface": {
        "type": "object",
        "description": "Rule discount Interface",
        "properties": {
          "discount_data": {
            "$ref": "#/components/schemas/sales-rule-data-discount-data-interface"
          },
          "rule_label": {
            "type": "string",
            "description": "Rule Label"
          },
          "rule_i_d": {
            "type": "integer",
            "description": "Rule ID"
          }
        },
        "required": ["discount_data", "rule_label", "rule_i_d"]
      },
      "sales-rule-data-discount-data-interface": {
        "type": "object",
        "description": "Discount Data Interface",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Amount"
          },
          "base_amount": {
            "type": "number",
            "description": "Base Amount"
          },
          "original_amount": {
            "type": "number",
            "description": "Original Amount"
          },
          "base_original_amount": {
            "type": "number",
            "description": "Base Original Amount"
          }
        },
        "required": ["amount", "base_amount", "original_amount", "base_original_amount"]
      },
      "bundle-data-option-interface": {
        "type": "object",
        "description": "Interface OptionInterface",
        "properties": {
          "option_id": {
            "type": "integer",
            "description": "Option id"
          },
          "title": {
            "type": "string",
            "description": "Option title"
          },
          "required": {
            "type": "boolean",
            "description": "Is required option"
          },
          "type": {
            "type": "string",
            "description": "Input type"
          },
          "position": {
            "type": "integer",
            "description": "Option position"
          },
          "sku": {
            "type": "string",
            "description": "Product sku"
          },
          "product_links": {
            "type": "array",
            "description": "Product links",
            "items": {
              "$ref": "#/components/schemas/bundle-data-link-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/bundle-data-option-extension-interface"
          }
        }
      },
      "bundle-data-link-interface": {
        "type": "object",
        "description": "Interface LinkInterface",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier"
          },
          "sku": {
            "type": "string",
            "description": "Linked product sku"
          },
          "option_id": {
            "type": "integer",
            "description": "Option id"
          },
          "qty": {
            "type": "number",
            "description": "Qty"
          },
          "position": {
            "type": "integer",
            "description": "Position"
          },
          "is_default": {
            "type": "boolean",
            "description": "Is default"
          },
          "price": {
            "type": "number",
            "description": "Price"
          },
          "price_type": {
            "type": "integer",
            "description": "Price type"
          },
          "can_change_quantity": {
            "type": "integer",
            "description": "Whether quantity could be changed"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/bundle-data-link-extension-interface"
          }
        },
        "required": ["is_default", "price", "price_type"]
      },
      "bundle-data-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\LinkInterface"
      },
      "bundle-data-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionInterface"
      },
      "catalog-inventory-data-stock-item-interface": {
        "type": "object",
        "description": "Interface StockItem",
        "properties": {
          "item_id": {
            "type": "integer"
          },
          "product_id": {
            "type": "integer"
          },
          "stock_id": {
            "type": "integer",
            "description": "Stock identifier"
          },
          "qty": {
            "type": "number"
          },
          "is_in_stock": {
            "type": "boolean",
            "description": "Stock Availability"
          },
          "is_qty_decimal": {
            "type": "boolean"
          },
          "show_default_notification_message": {
            "type": "boolean"
          },
          "use_config_min_qty": {
            "type": "boolean"
          },
          "min_qty": {
            "type": "number",
            "description": "Minimal quantity available for item status in stock"
          },
          "use_config_min_sale_qty": {
            "type": "integer"
          },
          "min_sale_qty": {
            "type": "number",
            "description": "Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation"
          },
          "use_config_max_sale_qty": {
            "type": "boolean"
          },
          "max_sale_qty": {
            "type": "number",
            "description": "Maximum Qty Allowed in Shopping Cart data wrapper"
          },
          "use_config_backorders": {
            "type": "boolean"
          },
          "backorders": {
            "type": "integer",
            "description": "Backorders status"
          },
          "use_config_notify_stock_qty": {
            "type": "boolean"
          },
          "notify_stock_qty": {
            "type": "number",
            "description": "Notify for Quantity Below data wrapper"
          },
          "use_config_qty_increments": {
            "type": "boolean"
          },
          "qty_increments": {
            "type": "number",
            "description": "Quantity Increments data wrapper"
          },
          "use_config_enable_qty_inc": {
            "type": "boolean"
          },
          "enable_qty_increments": {
            "type": "boolean",
            "description": "Whether Quantity Increments is enabled"
          },
          "use_config_manage_stock": {
            "type": "boolean"
          },
          "manage_stock": {
            "type": "boolean",
            "description": "Can Manage Stock"
          },
          "low_stock_date": {
            "type": "string"
          },
          "is_decimal_divided": {
            "type": "boolean"
          },
          "stock_status_changed_auto": {
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-item-extension-interface"
          }
        },
        "required": [
          "qty",
          "is_in_stock",
          "is_qty_decimal",
          "show_default_notification_message",
          "use_config_min_qty",
          "min_qty",
          "use_config_min_sale_qty",
          "min_sale_qty",
          "use_config_max_sale_qty",
          "max_sale_qty",
          "use_config_backorders",
          "backorders",
          "use_config_notify_stock_qty",
          "notify_stock_qty",
          "use_config_qty_increments",
          "qty_increments",
          "use_config_enable_qty_inc",
          "enable_qty_increments",
          "use_config_manage_stock",
          "manage_stock",
          "low_stock_date",
          "is_decimal_divided",
          "stock_status_changed_auto"
        ]
      },
      "catalog-inventory-data-stock-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockItemInterface"
      },
      "downloadable-data-link-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Sample(or link) id"
          },
          "title": {
            "type": "string"
          },
          "sort_order": {
            "type": "integer"
          },
          "is_shareable": {
            "type": "integer",
            "description": "Shareable status"
          },
          "price": {
            "type": "number",
            "description": "Price"
          },
          "number_of_downloads": {
            "type": "integer",
            "description": "Of downloads per user"
          },
          "link_type": {
            "type": "string"
          },
          "link_file": {
            "type": "string",
            "description": "relative file path"
          },
          "link_file_content": {
            "$ref": "#/components/schemas/downloadable-data-file-content-interface"
          },
          "link_url": {
            "type": "string",
            "description": "Link url or null when type is 'file'"
          },
          "sample_type": {
            "type": "string"
          },
          "sample_file": {
            "type": "string",
            "description": "relative file path"
          },
          "sample_file_content": {
            "$ref": "#/components/schemas/downloadable-data-file-content-interface"
          },
          "sample_url": {
            "type": "string",
            "description": "file URL"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/downloadable-data-link-extension-interface"
          }
        },
        "required": ["sort_order", "is_shareable", "price", "link_type", "sample_type"]
      },
      "downloadable-data-file-content-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "file_data": {
            "type": "string",
            "description": "Data (base64 encoded content)"
          },
          "name": {
            "type": "string",
            "description": "File name"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/downloadable-data-file-content-extension-interface"
          }
        },
        "required": ["file_data", "name"]
      },
      "downloadable-data-file-content-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\File\\ContentInterface"
      },
      "downloadable-data-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\LinkInterface"
      },
      "downloadable-data-sample-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Sample(or link) id"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "sort_order": {
            "type": "integer",
            "description": "Order index for sample"
          },
          "sample_type": {
            "type": "string"
          },
          "sample_file": {
            "type": "string",
            "description": "relative file path"
          },
          "sample_file_content": {
            "$ref": "#/components/schemas/downloadable-data-file-content-interface"
          },
          "sample_url": {
            "type": "string",
            "description": "file URL"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/downloadable-data-sample-extension-interface"
          }
        },
        "required": ["title", "sort_order", "sample_type"]
      },
      "downloadable-data-sample-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\SampleInterface"
      },
      "gift-card-data-giftcard-amount-interface": {
        "type": "object",
        "description": "Interface GiftcardAmountInterface: this interface is used to serialize and deserialize EAV attribute giftcard_amounts",
        "properties": {
          "attribute_id": {
            "type": "integer"
          },
          "website_id": {
            "type": "integer"
          },
          "value": {
            "type": "number"
          },
          "website_value": {
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/gift-card-data-giftcard-amount-extension-interface"
          }
        },
        "required": ["attribute_id", "website_id", "value", "website_value"]
      },
      "gift-card-data-giftcard-amount-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftcardAmountInterface"
      },
      "configurable-product-data-option-interface": {
        "type": "object",
        "description": "Interface OptionInterface",
        "properties": {
          "id": {
            "type": "integer"
          },
          "attribute_id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "position": {
            "type": "integer"
          },
          "is_use_default": {
            "type": "boolean"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/configurable-product-data-option-value-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/configurable-product-data-option-extension-interface"
          },
          "product_id": {
            "type": "integer"
          }
        }
      },
      "configurable-product-data-option-value-interface": {
        "type": "object",
        "description": "Interface OptionValueInterface",
        "properties": {
          "value_index": {
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/configurable-product-data-option-value-extension-interface"
          }
        },
        "required": ["value_index"]
      },
      "configurable-product-data-option-value-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionValueInterface"
      },
      "configurable-product-data-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionInterface"
      },
      "catalog-data-product-link-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "sku": {
            "type": "string",
            "description": "SKU"
          },
          "link_type": {
            "type": "string",
            "description": "Link type"
          },
          "linked_product_sku": {
            "type": "string",
            "description": "Linked product sku"
          },
          "linked_product_type": {
            "type": "string",
            "description": "Linked product type (simple, virtual, etc)"
          },
          "position": {
            "type": "integer",
            "description": "Linked item position"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-link-extension-interface"
          }
        },
        "required": ["sku", "link_type", "linked_product_sku", "linked_product_type", "position"]
      },
      "catalog-data-product-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkInterface",
        "properties": {
          "qty": {
            "type": "number"
          }
        }
      },
      "catalog-data-product-custom-option-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "product_sku": {
            "type": "string",
            "description": "Product SKU"
          },
          "option_id": {
            "type": "integer",
            "description": "Option id"
          },
          "title": {
            "type": "string",
            "description": "Option title"
          },
          "type": {
            "type": "string",
            "description": "Option type"
          },
          "sort_order": {
            "type": "integer",
            "description": "Sort order"
          },
          "is_require": {
            "type": "boolean",
            "description": "Is require"
          },
          "price": {
            "type": "number",
            "description": "Price"
          },
          "price_type": {
            "type": "string",
            "description": "Price type"
          },
          "sku": {
            "type": "string",
            "description": "Sku"
          },
          "file_extension": {
            "type": "string"
          },
          "max_characters": {
            "type": "integer"
          },
          "image_size_x": {
            "type": "integer"
          },
          "image_size_y": {
            "type": "integer"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-custom-option-values-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-custom-option-extension-interface"
          }
        },
        "required": ["product_sku", "title", "type", "sort_order", "is_require"]
      },
      "catalog-data-product-custom-option-values-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "title": {
            "type": "string",
            "description": "Option title"
          },
          "sort_order": {
            "type": "integer",
            "description": "Sort order"
          },
          "price": {
            "type": "number",
            "description": "Price"
          },
          "price_type": {
            "type": "string",
            "description": "Price type"
          },
          "sku": {
            "type": "string",
            "description": "Sku"
          },
          "option_type_id": {
            "type": "integer",
            "description": "Option type id"
          }
        },
        "required": ["title", "sort_order", "price", "price_type"]
      },
      "catalog-data-product-custom-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionInterface"
      },
      "catalog-data-product-attribute-media-gallery-entry-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gallery entry ID"
          },
          "media_type": {
            "type": "string",
            "description": "Media type"
          },
          "label": {
            "type": "string",
            "description": "Gallery entry alternative text"
          },
          "position": {
            "type": "integer",
            "description": "Gallery entry position (sort order)"
          },
          "disabled": {
            "type": "boolean",
            "description": "If gallery entry is hidden from product page"
          },
          "types": {
            "type": "array",
            "description": "Gallery entry image types (thumbnail, image, small_image etc)",
            "items": {
              "type": "string"
            }
          },
          "file": {
            "type": "string",
            "description": "File path"
          },
          "content": {
            "$ref": "#/components/schemas/framework-data-image-content-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-extension-interface"
          }
        },
        "required": ["media_type", "label", "position", "disabled", "types"]
      },
      "framework-data-image-content-interface": {
        "type": "object",
        "description": "Image Content data interface",
        "properties": {
          "base64_encoded_data": {
            "type": "string",
            "description": "Media data (base64 encoded content)"
          },
          "type": {
            "type": "string",
            "description": "MIME type"
          },
          "name": {
            "type": "string",
            "description": "Image name"
          }
        },
        "required": ["base64_encoded_data", "type", "name"]
      },
      "catalog-data-product-attribute-media-gallery-entry-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductAttributeMediaGalleryEntryInterface",
        "properties": {
          "video_content": {
            "$ref": "#/components/schemas/framework-data-video-content-interface"
          }
        }
      },
      "framework-data-video-content-interface": {
        "type": "object",
        "description": "Video Content data interface",
        "properties": {
          "media_type": {
            "type": "string",
            "description": "MIME type"
          },
          "video_provider": {
            "type": "string",
            "description": "Provider"
          },
          "video_url": {
            "type": "string",
            "description": "Video URL"
          },
          "video_title": {
            "type": "string",
            "description": "Title"
          },
          "video_description": {
            "type": "string",
            "description": "Video Description"
          },
          "video_metadata": {
            "type": "string",
            "description": "Metadata"
          }
        },
        "required": [
          "media_type",
          "video_provider",
          "video_url",
          "video_title",
          "video_description",
          "video_metadata"
        ]
      },
      "catalog-data-product-tier-price-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "customer_group_id": {
            "type": "integer",
            "description": "Customer group id"
          },
          "qty": {
            "type": "number",
            "description": "Tier qty"
          },
          "value": {
            "type": "number",
            "description": "Price value"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-tier-price-extension-interface"
          }
        },
        "required": ["customer_group_id", "qty", "value"]
      },
      "catalog-data-product-tier-price-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTierPriceInterface",
        "properties": {
          "percentage_value": {
            "type": "number"
          },
          "website_id": {
            "type": "integer"
          }
        }
      },
      "catalog-data-product-search-results-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "description": "Attributes list.",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "catalog-data-product-attribute-type-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value"
          },
          "label": {
            "type": "string",
            "description": "Type label"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-attribute-type-extension-interface"
          }
        },
        "required": ["value", "label"]
      },
      "catalog-data-product-attribute-type-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductAttributeTypeInterface"
      },
      "catalog-data-product-attribute-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/eav-data-attribute-extension-interface"
          },
          "is_wysiwyg_enabled": {
            "type": "boolean",
            "description": "WYSIWYG flag"
          },
          "is_html_allowed_on_front": {
            "type": "boolean",
            "description": "The HTML tags are allowed on the frontend"
          },
          "used_for_sort_by": {
            "type": "boolean",
            "description": "It is used for sorting in product listing"
          },
          "is_filterable": {
            "type": "boolean",
            "description": "It used in layered navigation"
          },
          "is_filterable_in_search": {
            "type": "boolean",
            "description": "It is used in search results layered navigation"
          },
          "is_used_in_grid": {
            "type": "boolean",
            "description": "It is used in catalog product grid"
          },
          "is_visible_in_grid": {
            "type": "boolean",
            "description": "It is visible in catalog product grid"
          },
          "is_filterable_in_grid": {
            "type": "boolean",
            "description": "It is filterable in catalog product grid"
          },
          "position": {
            "type": "integer",
            "description": "Position"
          },
          "apply_to": {
            "type": "array",
            "description": "Apply to value for the element",
            "items": {
              "type": "string"
            }
          },
          "is_searchable": {
            "type": "string",
            "description": "The attribute can be used in Quick Search"
          },
          "is_visible_in_advanced_search": {
            "type": "string",
            "description": "The attribute can be used in Advanced Search"
          },
          "is_comparable": {
            "type": "string",
            "description": "The attribute can be compared on the frontend"
          },
          "is_used_for_promo_rules": {
            "type": "string",
            "description": "The attribute can be used for promo rules"
          },
          "is_visible_on_front": {
            "type": "string",
            "description": "The attribute is visible on the frontend"
          },
          "used_in_product_listing": {
            "type": "string",
            "description": "The attribute can be used in product listing"
          },
          "is_visible": {
            "type": "boolean",
            "description": "Attribute is visible on frontend."
          },
          "scope": {
            "type": "string",
            "description": "Attribute scope"
          },
          "attribute_id": {
            "type": "integer",
            "description": "Id of the attribute."
          },
          "attribute_code": {
            "type": "string",
            "description": "Code of the attribute."
          },
          "frontend_input": {
            "type": "string",
            "description": "HTML for input element."
          },
          "entity_type_id": {
            "type": "string",
            "description": "Entity type id"
          },
          "is_required": {
            "type": "boolean",
            "description": "Attribute is required."
          },
          "options": {
            "type": "array",
            "description": "Options of the attribute (key => value pairs for select)",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-option-interface"
            }
          },
          "is_user_defined": {
            "type": "boolean",
            "description": "Current attribute has been defined by a user."
          },
          "default_frontend_label": {
            "type": "string",
            "description": "Frontend label for default store"
          },
          "frontend_labels": {
            "type": "array",
            "description": "Frontend label for each store",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-frontend-label-interface"
            }
          },
          "note": {
            "type": "string",
            "description": "The note attribute for the element."
          },
          "backend_type": {
            "type": "string",
            "description": "Backend type."
          },
          "backend_model": {
            "type": "string",
            "description": "Backend model"
          },
          "source_model": {
            "type": "string",
            "description": "Source model"
          },
          "default_value": {
            "type": "string",
            "description": "Default value for the element."
          },
          "is_unique": {
            "type": "string",
            "description": "This is a unique attribute"
          },
          "frontend_class": {
            "type": "string",
            "description": "Frontend class of attribute"
          },
          "validation_rules": {
            "type": "array",
            "description": "Validation rules.",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-validation-rule-interface"
            }
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": [
          "attribute_code",
          "frontend_input",
          "entity_type_id",
          "is_required",
          "frontend_labels"
        ]
      },
      "eav-data-attribute-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeInterface",
        "properties": {
          "is_pagebuilder_enabled": {
            "type": "boolean"
          }
        }
      },
      "eav-data-attribute-option-interface": {
        "type": "object",
        "description": "Created from:",
        "properties": {
          "label": {
            "type": "string",
            "description": "Option label"
          },
          "value": {
            "type": "string",
            "description": "Option value"
          },
          "sort_order": {
            "type": "integer",
            "description": "Option order"
          },
          "is_default": {
            "type": "boolean",
            "description": "Default"
          },
          "store_labels": {
            "type": "array",
            "description": "Option label for store scopes",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-option-label-interface"
            }
          }
        },
        "required": ["label", "value"]
      },
      "eav-data-attribute-option-label-interface": {
        "type": "object",
        "description": "Interface AttributeOptionLabelInterface",
        "properties": {
          "store_id": {
            "type": "integer",
            "description": "Store id"
          },
          "label": {
            "type": "string",
            "description": "Option label"
          }
        }
      },
      "eav-data-attribute-frontend-label-interface": {
        "type": "object",
        "description": "Interface AttributeFrontendLabelInterface",
        "properties": {
          "store_id": {
            "type": "integer",
            "description": "Store id"
          },
          "label": {
            "type": "string",
            "description": "Option label"
          }
        }
      },
      "eav-data-attribute-validation-rule-interface": {
        "type": "object",
        "description": "Interface AttributeValidationRuleInterface",
        "properties": {
          "key": {
            "type": "string",
            "description": "Object key"
          },
          "value": {
            "type": "string",
            "description": "Object value"
          }
        },
        "required": ["key", "value"]
      },
      "catalog-data-product-attribute-search-results-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "description": "Attributes list.",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "catalog-data-category-attribute-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "is_wysiwyg_enabled": {
            "type": "boolean",
            "description": "WYSIWYG flag"
          },
          "is_html_allowed_on_front": {
            "type": "boolean",
            "description": "The HTML tags are allowed on the frontend"
          },
          "used_for_sort_by": {
            "type": "boolean",
            "description": "It is used for sorting in product listing"
          },
          "is_filterable": {
            "type": "boolean",
            "description": "It used in layered navigation"
          },
          "is_filterable_in_search": {
            "type": "boolean",
            "description": "It is used in search results layered navigation"
          },
          "is_used_in_grid": {
            "type": "boolean",
            "description": "It is used in catalog product grid"
          },
          "is_visible_in_grid": {
            "type": "boolean",
            "description": "It is visible in catalog product grid"
          },
          "is_filterable_in_grid": {
            "type": "boolean",
            "description": "It is filterable in catalog product grid"
          },
          "position": {
            "type": "integer",
            "description": "Position"
          },
          "apply_to": {
            "type": "array",
            "description": "Apply to value for the element",
            "items": {
              "type": "string"
            }
          },
          "is_searchable": {
            "type": "string",
            "description": "The attribute can be used in Quick Search"
          },
          "is_visible_in_advanced_search": {
            "type": "string",
            "description": "The attribute can be used in Advanced Search"
          },
          "is_comparable": {
            "type": "string",
            "description": "The attribute can be compared on the frontend"
          },
          "is_used_for_promo_rules": {
            "type": "string",
            "description": "The attribute can be used for promo rules"
          },
          "is_visible_on_front": {
            "type": "string",
            "description": "The attribute is visible on the frontend"
          },
          "used_in_product_listing": {
            "type": "string",
            "description": "The attribute can be used in product listing"
          },
          "is_visible": {
            "type": "boolean",
            "description": "Attribute is visible on frontend."
          },
          "scope": {
            "type": "string",
            "description": "Attribute scope"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-eav-attribute-extension-interface"
          },
          "attribute_id": {
            "type": "integer",
            "description": "Id of the attribute."
          },
          "attribute_code": {
            "type": "string",
            "description": "Code of the attribute."
          },
          "frontend_input": {
            "type": "string",
            "description": "HTML for input element."
          },
          "entity_type_id": {
            "type": "string",
            "description": "Entity type id"
          },
          "is_required": {
            "type": "boolean",
            "description": "Attribute is required."
          },
          "options": {
            "type": "array",
            "description": "Options of the attribute (key => value pairs for select)",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-option-interface"
            }
          },
          "is_user_defined": {
            "type": "boolean",
            "description": "Current attribute has been defined by a user."
          },
          "default_frontend_label": {
            "type": "string",
            "description": "Frontend label for default store"
          },
          "frontend_labels": {
            "type": "array",
            "description": "Frontend label for each store",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-frontend-label-interface"
            }
          },
          "note": {
            "type": "string",
            "description": "The note attribute for the element."
          },
          "backend_type": {
            "type": "string",
            "description": "Backend type."
          },
          "backend_model": {
            "type": "string",
            "description": "Backend model"
          },
          "source_model": {
            "type": "string",
            "description": "Source model"
          },
          "default_value": {
            "type": "string",
            "description": "Default value for the element."
          },
          "is_unique": {
            "type": "string",
            "description": "This is a unique attribute"
          },
          "frontend_class": {
            "type": "string",
            "description": "Frontend class of attribute"
          },
          "validation_rules": {
            "type": "array",
            "description": "Validation rules.",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-validation-rule-interface"
            }
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": [
          "attribute_code",
          "frontend_input",
          "entity_type_id",
          "is_required",
          "frontend_labels"
        ]
      },
      "catalog-data-eav-attribute-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\EavAttributeInterface"
      },
      "catalog-data-category-attribute-search-results-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "description": "Attributes list.",
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-attribute-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "catalog-data-product-type-interface": {
        "type": "object",
        "description": "Product type details",
        "properties": {
          "name": {
            "type": "string",
            "description": "Product type code"
          },
          "label": {
            "type": "string",
            "description": "Product type label"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-type-extension-interface"
          }
        },
        "required": ["name", "label"]
      },
      "catalog-data-product-type-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTypeInterface"
      },
      "eav-data-attribute-group-search-results-interface": {
        "type": "object",
        "description": "Interface AttributeGroupSearchResultsInterface",
        "properties": {
          "items": {
            "type": "array",
            "description": "Attribute sets list.",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-group-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "eav-data-attribute-group-interface": {
        "type": "object",
        "description": "Interface AttributeGroupInterface",
        "properties": {
          "attribute_group_id": {
            "type": "string",
            "description": "Id"
          },
          "attribute_group_name": {
            "type": "string",
            "description": "Name"
          },
          "attribute_set_id": {
            "type": "integer",
            "description": "Attribute set id"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/eav-data-attribute-group-extension-interface"
          }
        }
      },
      "eav-data-attribute-group-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeGroupInterface",
        "properties": {
          "attribute_group_code": {
            "type": "string"
          },
          "sort_order": {
            "type": "string"
          }
        }
      },
      "catalog-data-tier-price-interface": {
        "type": "object",
        "description": "Tier price interface.",
        "properties": {
          "price": {
            "type": "number",
            "description": "Tier price."
          },
          "price_type": {
            "type": "string",
            "description": "Tier price type."
          },
          "website_id": {
            "type": "integer",
            "description": "Website id."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "customer_group": {
            "type": "string",
            "description": "Customer group."
          },
          "quantity": {
            "type": "number",
            "description": "Quantity."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-tier-price-extension-interface"
          }
        },
        "required": ["price", "price_type", "website_id", "sku", "customer_group", "quantity"]
      },
      "catalog-data-tier-price-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\TierPriceInterface"
      },
      "catalog-data-price-update-result-interface": {
        "type": "object",
        "description": "Interface returned in case of incorrect price passed to efficient price API.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message, that contains description of error occurred during price update."
          },
          "parameters": {
            "type": "array",
            "description": "Parameters, that could be displayed in error message placeholders.",
            "items": {
              "type": "string"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-price-update-result-extension-interface"
          }
        },
        "required": ["message", "parameters"]
      },
      "catalog-data-price-update-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface"
      },
      "catalog-data-base-price-interface": {
        "type": "object",
        "description": "Price interface.",
        "properties": {
          "price": {
            "type": "number",
            "description": "Price."
          },
          "store_id": {
            "type": "integer",
            "description": "Store id."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-base-price-extension-interface"
          }
        },
        "required": ["price", "store_id", "sku"]
      },
      "catalog-data-base-price-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\BasePriceInterface"
      },
      "catalog-data-cost-interface": {
        "type": "object",
        "description": "Cost interface.",
        "properties": {
          "cost": {
            "type": "number",
            "description": "Cost value."
          },
          "store_id": {
            "type": "integer",
            "description": "Store id."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-cost-extension-interface"
          }
        },
        "required": ["cost", "store_id", "sku"]
      },
      "catalog-data-cost-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CostInterface"
      },
      "catalog-data-special-price-interface": {
        "type": "object",
        "description": "Product Special Price Interface is used to encapsulate data that can be processed by efficient price API.",
        "properties": {
          "price": {
            "type": "number",
            "description": "Product special price value."
          },
          "store_id": {
            "type": "integer",
            "description": "ID of store, that contains special price value."
          },
          "sku": {
            "type": "string",
            "description": "SKU of product, that contains special price value."
          },
          "price_from": {
            "type": "string",
            "description": "Start date for special price in Y-m-d H:i:s format."
          },
          "price_to": {
            "type": "string",
            "description": "End date for special price in Y-m-d H:i:s format."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-special-price-extension-interface"
          }
        },
        "required": ["price", "store_id", "sku", "price_from", "price_to"]
      },
      "catalog-data-special-price-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\SpecialPriceInterface"
      },
      "catalog-data-category-interface": {
        "type": "object",
        "description": "Category data interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Category id."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent category ID"
          },
          "name": {
            "type": "string",
            "description": "Category name"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether category is active"
          },
          "position": {
            "type": "integer",
            "description": "Category position"
          },
          "level": {
            "type": "integer",
            "description": "Category level"
          },
          "children": {
            "type": "string",
            "description": "Children ids comma separated."
          },
          "created_at": {
            "type": "string",
            "description": "Category creation date and time."
          },
          "updated_at": {
            "type": "string",
            "description": "Category last update date and time."
          },
          "path": {
            "type": "string",
            "description": "Category full path."
          },
          "available_sort_by": {
            "type": "array",
            "description": "Available sort by for category.",
            "items": {
              "type": "string"
            }
          },
          "include_in_menu": {
            "type": "boolean",
            "description": "Category is included in menu."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-category-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        }
      },
      "catalog-data-category-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryInterface"
      },
      "catalog-data-category-tree-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent category ID"
          },
          "name": {
            "type": "string",
            "description": "Category name"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether category is active"
          },
          "position": {
            "type": "integer",
            "description": "Category position"
          },
          "level": {
            "type": "integer",
            "description": "Category level"
          },
          "product_count": {
            "type": "integer",
            "description": "Product count"
          },
          "children_data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-tree-interface"
            }
          }
        },
        "required": [
          "parent_id",
          "name",
          "is_active",
          "position",
          "level",
          "product_count",
          "children_data"
        ]
      },
      "catalog-data-category-search-results-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "description": "Categories",
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "catalog-data-product-custom-option-type-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "label": {
            "type": "string",
            "description": "Option type label"
          },
          "code": {
            "type": "string",
            "description": "Option type code"
          },
          "group": {
            "type": "string",
            "description": "Option type group"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-custom-option-type-extension-interface"
          }
        },
        "required": ["label", "code", "group"]
      },
      "catalog-data-product-custom-option-type-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionTypeInterface"
      },
      "catalog-data-product-link-type-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Link type code"
          },
          "name": {
            "type": "string",
            "description": "Link type name"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-link-type-extension-interface"
          }
        },
        "required": ["code", "name"]
      },
      "catalog-data-product-link-type-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkTypeInterface"
      },
      "catalog-data-product-link-attribute-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "code": {
            "type": "string",
            "description": "Attribute code"
          },
          "type": {
            "type": "string",
            "description": "Attribute type"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-link-attribute-extension-interface"
          }
        },
        "required": ["code", "type"]
      },
      "catalog-data-product-link-attribute-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkAttributeInterface"
      },
      "catalog-data-category-product-link-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "sku": {
            "type": "string"
          },
          "position": {
            "type": "integer"
          },
          "category_id": {
            "type": "string",
            "description": "Category id"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-category-product-link-extension-interface"
          }
        },
        "required": ["category_id"]
      },
      "catalog-data-category-product-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryProductLinkInterface"
      },
      "catalog-data-product-website-link-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "sku": {
            "type": "string"
          },
          "website_id": {
            "type": "integer",
            "description": "Website ids"
          }
        },
        "required": ["sku", "website_id"]
      },
      "catalog-data-product-render-search-results-interface": {
        "type": "object",
        "description": "Dto that holds render information about products",
        "properties": {
          "items": {
            "type": "array",
            "description": "List of products rendered information",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-render-interface"
            }
          }
        },
        "required": ["items"]
      },
      "catalog-data-product-render-interface": {
        "type": "object",
        "description": "Represents Data Object which holds enough information to render product This information is put into part as Add To Cart or Add to Compare Data or Price Data",
        "properties": {
          "add_to_cart_button": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-interface"
          },
          "add_to_compare_button": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-interface"
          },
          "price_info": {
            "$ref": "#/components/schemas/catalog-data-product-render-price-info-interface"
          },
          "images": {
            "type": "array",
            "description": "Enough information, that needed to render image on front",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-render-image-interface"
            }
          },
          "url": {
            "type": "string",
            "description": "Product url"
          },
          "id": {
            "type": "integer",
            "description": "Product identifier"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "type": {
            "type": "string",
            "description": "Product type. Such as bundle, grouped, simple, etc..."
          },
          "is_salable": {
            "type": "string",
            "description": "Information about product saleability (In Stock)"
          },
          "store_id": {
            "type": "integer",
            "description": "Information about current store id or requested store id"
          },
          "currency_code": {
            "type": "string",
            "description": "Current or desired currency code to product"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-extension-interface"
          }
        },
        "required": [
          "add_to_cart_button",
          "add_to_compare_button",
          "price_info",
          "images",
          "url",
          "id",
          "name",
          "type",
          "is_salable",
          "store_id",
          "currency_code",
          "extension_attributes"
        ]
      },
      "catalog-data-product-render-button-interface": {
        "type": "object",
        "description": "Button interface. This interface represents all manner of product buttons: add to cart, add to compare, etc... The buttons describes by this interface should have interaction with backend",
        "properties": {
          "post_data": {
            "type": "string",
            "description": "Post data"
          },
          "url": {
            "type": "string",
            "description": "Url, needed to add product to cart"
          },
          "required_options": {
            "type": "boolean",
            "description": "Flag whether a product has options or not"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-extension-interface"
          }
        },
        "required": ["post_data", "url", "required_options"]
      },
      "catalog-data-product-render-button-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\ButtonInterface"
      },
      "catalog-data-product-render-price-info-interface": {
        "type": "object",
        "description": "Price interface.",
        "properties": {
          "final_price": {
            "type": "number",
            "description": "Final price"
          },
          "max_price": {
            "type": "number",
            "description": "Max price of a product"
          },
          "max_regular_price": {
            "type": "number",
            "description": "Max regular price"
          },
          "minimal_regular_price": {
            "type": "number",
            "description": "Minimal regular price"
          },
          "special_price": {
            "type": "number",
            "description": "Special price"
          },
          "minimal_price": {
            "type": "number",
            "description": "Minimal price"
          },
          "regular_price": {
            "type": "number",
            "description": "Regular price"
          },
          "formatted_prices": {
            "$ref": "#/components/schemas/catalog-data-product-render-formatted-price-info-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-price-info-extension-interface"
          }
        },
        "required": [
          "final_price",
          "max_price",
          "max_regular_price",
          "minimal_regular_price",
          "special_price",
          "minimal_price",
          "regular_price",
          "formatted_prices"
        ]
      },
      "catalog-data-product-render-formatted-price-info-interface": {
        "type": "object",
        "description": "Formatted Price interface. Aggregate formatted html with price representations. E.g.: <span class=\"price\">$9.00</span> Consider currency, rounding and html",
        "properties": {
          "final_price": {
            "type": "string",
            "description": "Html with final price"
          },
          "max_price": {
            "type": "string",
            "description": "Max price of a product"
          },
          "minimal_price": {
            "type": "string",
            "description": "The minimal price of the product or variation"
          },
          "max_regular_price": {
            "type": "string",
            "description": "Max regular price"
          },
          "minimal_regular_price": {
            "type": "string",
            "description": "Minimal regular price"
          },
          "special_price": {
            "type": "string",
            "description": "Special price"
          },
          "regular_price": {
            "type": "string",
            "description": "Price - is price of product without discounts and special price with taxes and fixed product tax"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-formatted-price-info-extension-interface"
          }
        },
        "required": [
          "final_price",
          "max_price",
          "minimal_price",
          "max_regular_price",
          "minimal_regular_price",
          "special_price",
          "regular_price"
        ]
      },
      "catalog-data-product-render-formatted-price-info-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\FormattedPriceInfoInterface"
      },
      "catalog-data-product-render-price-info-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\PriceInfoInterface",
        "properties": {
          "msrp": {
            "$ref": "#/components/schemas/msrp-data-product-render-msrp-price-info-interface"
          },
          "tax_adjustments": {
            "$ref": "#/components/schemas/catalog-data-product-render-price-info-interface"
          },
          "weee_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/weee-data-product-render-weee-adjustment-attribute-interface"
            }
          },
          "weee_adjustment": {
            "type": "string"
          }
        }
      },
      "msrp-data-product-render-msrp-price-info-interface": {
        "type": "object",
        "description": "Price interface.",
        "properties": {
          "msrp_price": {
            "type": "string"
          },
          "is_applicable": {
            "type": "string"
          },
          "is_shown_price_on_gesture": {
            "type": "string"
          },
          "msrp_message": {
            "type": "string"
          },
          "explanation_message": {
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/msrp-data-product-render-msrp-price-info-extension-interface"
          }
        },
        "required": [
          "msrp_price",
          "is_applicable",
          "is_shown_price_on_gesture",
          "msrp_message",
          "explanation_message"
        ]
      },
      "msrp-data-product-render-msrp-price-info-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Msrp\\Api\\Data\\ProductRender\\MsrpPriceInfoInterface"
      },
      "weee-data-product-render-weee-adjustment-attribute-interface": {
        "type": "object",
        "description": "List of all weee attributes, their amounts, etc.., that product has",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Weee attribute amount"
          },
          "tax_amount": {
            "type": "string",
            "description": "Tax which is calculated to fixed product tax attribute"
          },
          "tax_amount_incl_tax": {
            "type": "string",
            "description": "Tax amount of weee attribute"
          },
          "amount_excl_tax": {
            "type": "string",
            "description": "Product amount exclude tax"
          },
          "attribute_code": {
            "type": "string",
            "description": "Weee attribute code"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/weee-data-product-render-weee-adjustment-attribute-extension-interface"
          }
        },
        "required": [
          "amount",
          "tax_amount",
          "tax_amount_incl_tax",
          "amount_excl_tax",
          "attribute_code",
          "extension_attributes"
        ]
      },
      "weee-data-product-render-weee-adjustment-attribute-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Weee\\Api\\Data\\ProductRender\\WeeeAdjustmentAttributeInterface"
      },
      "catalog-data-product-render-image-interface": {
        "type": "object",
        "description": "Product Render image interface. Represents physical characteristics of image, that can be used in product listing or product view",
        "properties": {
          "url": {
            "type": "string",
            "description": "Image url"
          },
          "code": {
            "type": "string",
            "description": "Image code"
          },
          "height": {
            "type": "number",
            "description": "Image height"
          },
          "width": {
            "type": "number",
            "description": "Image width in px"
          },
          "label": {
            "type": "string",
            "description": "Image label"
          },
          "resized_width": {
            "type": "number",
            "description": "Resize width"
          },
          "resized_height": {
            "type": "number",
            "description": "Resize height"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-image-extension-interface"
          }
        },
        "required": ["url", "code", "height", "width", "label", "resized_width", "resized_height"]
      },
      "catalog-data-product-render-image-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\ImageInterface"
      },
      "catalog-data-product-render-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRenderInterface",
        "properties": {
          "wishlist_button": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-interface"
          },
          "review_html": {
            "type": "string"
          }
        }
      },
      "quote-data-cart-interface": {
        "type": "object",
        "description": "Interface CartInterface",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Cart/quote ID."
          },
          "created_at": {
            "type": "string",
            "description": "Cart creation date and time. Otherwise, null."
          },
          "updated_at": {
            "type": "string",
            "description": "Cart last update date and time. Otherwise, null."
          },
          "converted_at": {
            "type": "string",
            "description": "Cart conversion date and time. Otherwise, null."
          },
          "is_active": {
            "type": "boolean",
            "description": "Active status flag value. Otherwise, null."
          },
          "is_virtual": {
            "type": "boolean",
            "description": "Virtual flag value. Otherwise, null."
          },
          "items": {
            "type": "array",
            "description": "Array of items. Otherwise, null.",
            "items": {
              "$ref": "#/components/schemas/quote-data-cart-item-interface"
            }
          },
          "items_count": {
            "type": "integer",
            "description": "Number of different items or products in the cart. Otherwise, null."
          },
          "items_qty": {
            "type": "number",
            "description": "Total quantity of all cart items. Otherwise, null."
          },
          "customer": {
            "$ref": "#/components/schemas/customer-data-customer-interface"
          },
          "billing_address": {
            "$ref": "#/components/schemas/quote-data-address-interface"
          },
          "reserved_order_id": {
            "type": "string",
            "description": "Reserved order ID. Otherwise, null."
          },
          "orig_order_id": {
            "type": "integer",
            "description": "Original order ID. Otherwise, null."
          },
          "currency": {
            "$ref": "#/components/schemas/quote-data-currency-interface"
          },
          "customer_is_guest": {
            "type": "boolean",
            "description": "For guest customers, false for logged in customers"
          },
          "customer_note": {
            "type": "string",
            "description": "Notice text"
          },
          "customer_note_notify": {
            "type": "boolean",
            "description": "Customer notification flag"
          },
          "customer_tax_class_id": {
            "type": "integer",
            "description": "Customer tax class ID."
          },
          "store_id": {
            "type": "integer",
            "description": "Store identifier"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-cart-extension-interface"
          }
        },
        "required": ["id", "customer", "store_id"]
      },
      "quote-data-cart-item-interface": {
        "type": "object",
        "description": "Interface CartItemInterface",
        "properties": {
          "item_id": {
            "type": "integer",
            "description": "Item ID. Otherwise, null."
          },
          "sku": {
            "type": "string",
            "description": "Product SKU. Otherwise, null."
          },
          "qty": {
            "type": "number",
            "description": "Product quantity."
          },
          "name": {
            "type": "string",
            "description": "Product name. Otherwise, null."
          },
          "price": {
            "type": "number",
            "description": "Product price. Otherwise, null."
          },
          "product_type": {
            "type": "string",
            "description": "Product type. Otherwise, null."
          },
          "quote_id": {
            "type": "string",
            "description": "Quote id."
          },
          "product_option": {
            "$ref": "#/components/schemas/quote-data-product-option-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-cart-item-extension-interface"
          }
        },
        "required": ["qty", "quote_id"]
      },
      "quote-data-product-option-interface": {
        "type": "object",
        "description": "Product option interface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-product-option-extension-interface"
          }
        }
      },
      "quote-data-product-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface",
        "properties": {
          "custom_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/catalog-data-custom-option-interface"
            }
          },
          "bundle_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bundle-data-bundle-option-interface"
            }
          },
          "downloadable_option": {
            "$ref": "#/components/schemas/downloadable-data-downloadable-option-interface"
          },
          "giftcard_item_option": {
            "$ref": "#/components/schemas/gift-card-data-gift-card-option-interface"
          },
          "configurable_item_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/configurable-product-data-configurable-item-option-value-interface"
            }
          },
          "grouped_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/grouped-product-data-grouped-options-interface"
            }
          }
        }
      },
      "catalog-data-custom-option-interface": {
        "type": "object",
        "description": "Interface CustomOptionInterface",
        "properties": {
          "option_id": {
            "type": "string",
            "description": "Option id"
          },
          "option_value": {
            "type": "string",
            "description": "Option value"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-custom-option-extension-interface"
          }
        },
        "required": ["option_id", "option_value"]
      },
      "catalog-data-custom-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CustomOptionInterface",
        "properties": {
          "file_info": {
            "$ref": "#/components/schemas/framework-data-image-content-interface"
          }
        }
      },
      "bundle-data-bundle-option-interface": {
        "type": "object",
        "description": "Interface BundleOptionInterface",
        "properties": {
          "option_id": {
            "type": "integer",
            "description": "Bundle option id."
          },
          "option_qty": {
            "type": "integer",
            "description": "Bundle option quantity."
          },
          "option_selections": {
            "type": "array",
            "description": "Bundle option selection ids.",
            "items": {
              "type": "integer"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/bundle-data-bundle-option-extension-interface"
          }
        },
        "required": ["option_id", "option_qty", "option_selections"]
      },
      "bundle-data-bundle-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\BundleOptionInterface"
      },
      "downloadable-data-downloadable-option-interface": {
        "type": "object",
        "description": "Downloadable Option",
        "properties": {
          "downloadable_links": {
            "type": "array",
            "description": "The list of downloadable links",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": ["downloadable_links"]
      },
      "gift-card-data-gift-card-option-interface": {
        "type": "object",
        "description": "Interface GiftCardOptionInterface",
        "properties": {
          "giftcard_amount": {
            "type": "string",
            "description": "Gift card amount."
          },
          "custom_giftcard_amount": {
            "type": "number",
            "description": "Gift card open amount value."
          },
          "giftcard_sender_name": {
            "type": "string",
            "description": "Gift card sender name."
          },
          "giftcard_recipient_name": {
            "type": "string",
            "description": "Gift card recipient name."
          },
          "giftcard_sender_email": {
            "type": "string",
            "description": "Gift card sender email."
          },
          "giftcard_recipient_email": {
            "type": "string",
            "description": "Gift card recipient email."
          },
          "giftcard_message": {
            "type": "string",
            "description": "Giftcard message."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/gift-card-data-gift-card-option-extension-interface"
          }
        },
        "required": [
          "giftcard_amount",
          "giftcard_sender_name",
          "giftcard_recipient_name",
          "giftcard_sender_email",
          "giftcard_recipient_email"
        ]
      },
      "gift-card-data-gift-card-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftCardOptionInterface",
        "properties": {
          "giftcard_created_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "configurable-product-data-configurable-item-option-value-interface": {
        "type": "object",
        "description": "Interface ConfigurableItemOptionValueInterface",
        "properties": {
          "option_id": {
            "type": "string",
            "description": "Option SKU"
          },
          "option_value": {
            "type": "integer",
            "description": "Item id"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/configurable-product-data-configurable-item-option-value-extension-interface"
          }
        },
        "required": ["option_id"]
      },
      "configurable-product-data-configurable-item-option-value-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\ConfigurableItemOptionValueInterface"
      },
      "grouped-product-data-grouped-options-interface": {
        "type": "object",
        "description": "Represents `product item id with qty` of a grouped product.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Associated product id"
          },
          "qty": {
            "type": "integer",
            "description": "Associated product qty"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/grouped-product-data-grouped-options-extension-interface"
          }
        }
      },
      "grouped-product-data-grouped-options-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\GroupedProduct\\Api\\Data\\GroupedOptionsInterface"
      },
      "quote-data-cart-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartItemInterface",
        "properties": {
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-rule-discount-interface"
            }
          },
          "negotiable_quote_item": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-item-interface"
          }
        }
      },
      "negotiable-quote-data-negotiable-quote-item-interface": {
        "type": "object",
        "description": "Interface CompanyQuoteConfigInterface",
        "properties": {
          "item_id": {
            "type": "integer",
            "description": "Quote item id"
          },
          "original_price": {
            "type": "number",
            "description": "Quote item original price"
          },
          "original_tax_amount": {
            "type": "number",
            "description": "Quote item original tax amount"
          },
          "original_discount_amount": {
            "type": "number",
            "description": "Quote item original discount amount"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-item-extension-interface"
          }
        },
        "required": ["item_id", "original_price", "original_tax_amount", "original_discount_amount"]
      },
      "negotiable-quote-data-negotiable-quote-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface",
        "properties": {
          "negotiated_price_type": {
            "type": "integer"
          },
          "negotiated_price_value": {
            "type": "number"
          },
          "last_item_notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/negotiable-quote-data-item-note-interface"
            }
          }
        }
      },
      "negotiable-quote-data-item-note-interface": {
        "type": "object",
        "description": "Interface ItemNoteInterface",
        "properties": {
          "note_id": {
            "type": "integer",
            "description": "Note ID."
          },
          "negotiable_quote_item_id": {
            "type": "integer",
            "description": "Negotiable quote item Id"
          },
          "creator_type": {
            "type": "integer",
            "description": "The note creator type."
          },
          "creator_id": {
            "type": "integer",
            "description": "Note creator ID."
          },
          "note": {
            "type": "string",
            "description": "Note."
          },
          "created_at": {
            "type": "string",
            "description": "Comment created at."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-item-note-extension-interface"
          }
        },
        "required": ["negotiable_quote_item_id", "creator_type", "creator_id", "note"]
      },
      "negotiable-quote-data-item-note-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\ItemNoteInterface"
      },
      "quote-data-address-interface": {
        "type": "object",
        "description": "Interface AddressInterface",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "region": {
            "type": "string",
            "description": "Region name"
          },
          "region_id": {
            "type": "integer",
            "description": "Region id"
          },
          "region_code": {
            "type": "string",
            "description": "Region code"
          },
          "country_id": {
            "type": "string",
            "description": "Country id"
          },
          "street": {
            "type": "array",
            "description": "Street",
            "items": {
              "type": "string"
            }
          },
          "company": {
            "type": "string",
            "description": "Company"
          },
          "telephone": {
            "type": "string",
            "description": "Telephone number"
          },
          "fax": {
            "type": "string",
            "description": "Fax number"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "firstname": {
            "type": "string",
            "description": "First name"
          },
          "lastname": {
            "type": "string",
            "description": "Last name"
          },
          "middlename": {
            "type": "string",
            "description": "Middle name"
          },
          "prefix": {
            "type": "string",
            "description": "Prefix"
          },
          "suffix": {
            "type": "string",
            "description": "Suffix"
          },
          "vat_id": {
            "type": "string",
            "description": "Vat id"
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer id"
          },
          "email": {
            "type": "string",
            "description": "Billing/shipping email"
          },
          "same_as_billing": {
            "type": "integer",
            "description": "Same as billing flag"
          },
          "customer_address_id": {
            "type": "integer",
            "description": "Customer address id"
          },
          "save_in_address_book": {
            "type": "integer",
            "description": "Save in address book flag"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-address-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": [
          "region",
          "region_id",
          "region_code",
          "country_id",
          "street",
          "telephone",
          "postcode",
          "city",
          "firstname",
          "lastname",
          "email"
        ]
      },
      "quote-data-address-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface",
        "properties": {
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-rule-discount-interface"
            }
          },
          "gift_registry_id": {
            "type": "integer"
          },
          "pickup_location_code": {
            "type": "string"
          }
        }
      },
      "quote-data-currency-interface": {
        "type": "object",
        "description": "Interface CurrencyInterface",
        "properties": {
          "global_currency_code": {
            "type": "string",
            "description": "Global currency code"
          },
          "base_currency_code": {
            "type": "string",
            "description": "Base currency code"
          },
          "store_currency_code": {
            "type": "string",
            "description": "Store currency code"
          },
          "quote_currency_code": {
            "type": "string",
            "description": "Quote currency code"
          },
          "store_to_base_rate": {
            "type": "number",
            "description": "Store currency to base currency rate"
          },
          "store_to_quote_rate": {
            "type": "number",
            "description": "Store currency to quote currency rate"
          },
          "base_to_global_rate": {
            "type": "number",
            "description": "Base currency to global currency rate"
          },
          "base_to_quote_rate": {
            "type": "number",
            "description": "Base currency to quote currency rate"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-currency-extension-interface"
          }
        }
      },
      "quote-data-currency-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CurrencyInterface"
      },
      "quote-data-cart-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartInterface",
        "properties": {
          "shipping_assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/quote-data-shipping-assignment-interface"
            }
          },
          "negotiable_quote": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-interface"
          },
          "coupon_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "quote-data-shipping-assignment-interface": {
        "type": "object",
        "description": "Interface ShippingAssignmentInterface",
        "properties": {
          "shipping": {
            "$ref": "#/components/schemas/quote-data-shipping-interface"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/quote-data-cart-item-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-shipping-assignment-extension-interface"
          }
        },
        "required": ["shipping", "items"]
      },
      "quote-data-shipping-interface": {
        "type": "object",
        "description": "Interface ShippingInterface",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/quote-data-address-interface"
          },
          "method": {
            "type": "string",
            "description": "Shipping method"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-shipping-extension-interface"
          }
        },
        "required": ["address", "method"]
      },
      "quote-data-shipping-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingInterface"
      },
      "quote-data-shipping-assignment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingAssignmentInterface"
      },
      "negotiable-quote-data-negotiable-quote-interface": {
        "type": "object",
        "description": "Interface NegotiableQuoteInterface",
        "properties": {
          "quote_id": {
            "type": "integer",
            "description": "Negotiable quote ID."
          },
          "is_regular_quote": {
            "type": "boolean",
            "description": "Is regular quote."
          },
          "status": {
            "type": "string",
            "description": "Negotiable quote status."
          },
          "negotiated_price_type": {
            "type": "integer",
            "description": "Negotiated price type."
          },
          "negotiated_price_value": {
            "type": "number",
            "description": "Negotiated price value."
          },
          "shipping_price": {
            "type": "number",
            "description": "Proposed shipping price."
          },
          "quote_name": {
            "type": "string",
            "description": "Negotiable quote name."
          },
          "expiration_period": {
            "type": "string",
            "description": "Expiration period."
          },
          "email_notification_status": {
            "type": "integer",
            "description": "Email notification status."
          },
          "has_unconfirmed_changes": {
            "type": "boolean",
            "description": "Has unconfirmed changes."
          },
          "is_shipping_tax_changed": {
            "type": "boolean",
            "description": "Shipping tax changes."
          },
          "is_customer_price_changed": {
            "type": "boolean",
            "description": "Customer price changes."
          },
          "notifications": {
            "type": "integer",
            "description": "Quote notifications."
          },
          "applied_rule_ids": {
            "type": "string",
            "description": "Quote rules."
          },
          "is_address_draft": {
            "type": "boolean",
            "description": "Is address draft."
          },
          "deleted_sku": {
            "type": "string",
            "description": "Deleted products sku."
          },
          "creator_id": {
            "type": "integer",
            "description": "Quote creator id."
          },
          "creator_type": {
            "type": "integer",
            "description": "Quote creator type."
          },
          "original_total_price": {
            "type": "number",
            "description": "Quote original total price."
          },
          "base_original_total_price": {
            "type": "number",
            "description": "Quote original total price in base currency."
          },
          "negotiated_total_price": {
            "type": "number",
            "description": "Quote negotiated total price."
          },
          "base_negotiated_total_price": {
            "type": "number",
            "description": "Quote negotiated total price in base currency."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-extension-interface"
          }
        },
        "required": [
          "quote_id",
          "is_regular_quote",
          "status",
          "negotiated_price_type",
          "negotiated_price_value",
          "shipping_price",
          "quote_name",
          "expiration_period",
          "email_notification_status",
          "has_unconfirmed_changes",
          "is_shipping_tax_changed",
          "is_customer_price_changed",
          "notifications",
          "applied_rule_ids",
          "is_address_draft",
          "deleted_sku",
          "creator_id",
          "creator_type"
        ]
      },
      "negotiable-quote-data-negotiable-quote-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteInterface"
      },
      "quote-data-cart-search-results-interface": {
        "type": "object",
        "description": "Interface CartSearchResultsInterface",
        "properties": {
          "items": {
            "type": "array",
            "description": "Carts list.",
            "items": {
              "$ref": "#/components/schemas/quote-data-cart-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "quote-data-payment-interface": {
        "type": "object",
        "description": "Interface PaymentInterface",
        "properties": {
          "po_number": {
            "type": "string",
            "description": "Purchase order number"
          },
          "method": {
            "type": "string",
            "description": "Payment method code"
          },
          "additional_data": {
            "type": "array",
            "description": "Payment additional details",
            "items": {
              "type": "string"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-payment-extension-interface"
          }
        },
        "required": ["method"]
      },
      "quote-data-payment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\PaymentInterface",
        "properties": {
          "agreement_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "quote-data-shipping-method-interface": {
        "type": "object",
        "description": "Interface ShippingMethodInterface",
        "properties": {
          "carrier_code": {
            "type": "string",
            "description": "Shipping carrier code."
          },
          "method_code": {
            "type": "string",
            "description": "Shipping method code."
          },
          "carrier_title": {
            "type": "string",
            "description": "Shipping carrier title. Otherwise, null."
          },
          "method_title": {
            "type": "string",
            "description": "Shipping method title. Otherwise, null."
          },
          "amount": {
            "type": "number",
            "description": "Shipping amount in store currency."
          },
          "base_amount": {
            "type": "number",
            "description": "Shipping amount in base currency."
          },
          "available": {
            "type": "boolean",
            "description": "The value of the availability flag for the current shipping method."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-shipping-method-extension-interface"
          },
          "error_message": {
            "type": "string",
            "description": "Shipping Error message."
          },
          "price_excl_tax": {
            "type": "number",
            "description": "Shipping price excl tax."
          },
          "price_incl_tax": {
            "type": "number",
            "description": "Shipping price incl tax."
          }
        },
        "required": [
          "carrier_code",
          "method_code",
          "amount",
          "base_amount",
          "available",
          "error_message",
          "price_excl_tax",
          "price_incl_tax"
        ]
      },
      "quote-data-shipping-method-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingMethodInterface"
      },
      "quote-data-payment-method-interface": {
        "type": "object",
        "description": "Interface PaymentMethodInterface",
        "properties": {
          "code": {
            "type": "string",
            "description": "Payment method code"
          },
          "title": {
            "type": "string",
            "description": "Payment method title"
          }
        },
        "required": ["code", "title"]
      },
      "quote-data-totals-interface": {
        "type": "object",
        "description": "Interface TotalsInterface",
        "properties": {
          "grand_total": {
            "type": "number",
            "description": "Grand total in quote currency"
          },
          "base_grand_total": {
            "type": "number",
            "description": "Grand total in base currency"
          },
          "subtotal": {
            "type": "number",
            "description": "Subtotal in quote currency"
          },
          "base_subtotal": {
            "type": "number",
            "description": "Subtotal in base currency"
          },
          "discount_amount": {
            "type": "number",
            "description": "Discount amount in quote currency"
          },
          "base_discount_amount": {
            "type": "number",
            "description": "Discount amount in base currency"
          },
          "subtotal_with_discount": {
            "type": "number",
            "description": "Subtotal in quote currency with applied discount"
          },
          "base_subtotal_with_discount": {
            "type": "number",
            "description": "Subtotal in base currency with applied discount"
          },
          "shipping_amount": {
            "type": "number",
            "description": "Shipping amount in quote currency"
          },
          "base_shipping_amount": {
            "type": "number",
            "description": "Shipping amount in base currency"
          },
          "shipping_discount_amount": {
            "type": "number",
            "description": "Shipping discount amount in quote currency"
          },
          "base_shipping_discount_amount": {
            "type": "number",
            "description": "Shipping discount amount in base currency"
          },
          "tax_amount": {
            "type": "number",
            "description": "Tax amount in quote currency"
          },
          "base_tax_amount": {
            "type": "number",
            "description": "Tax amount in base currency"
          },
          "weee_tax_applied_amount": {
            "type": "number",
            "description": "Item weee tax applied amount in quote currency."
          },
          "shipping_tax_amount": {
            "type": "number",
            "description": "Shipping tax amount in quote currency"
          },
          "base_shipping_tax_amount": {
            "type": "number",
            "description": "Shipping tax amount in base currency"
          },
          "subtotal_incl_tax": {
            "type": "number",
            "description": "Subtotal including tax in quote currency"
          },
          "base_subtotal_incl_tax": {
            "type": "number",
            "description": "Subtotal including tax in base currency"
          },
          "shipping_incl_tax": {
            "type": "number",
            "description": "Shipping including tax in quote currency"
          },
          "base_shipping_incl_tax": {
            "type": "number",
            "description": "Shipping including tax in base currency"
          },
          "base_currency_code": {
            "type": "string",
            "description": "Base currency code"
          },
          "quote_currency_code": {
            "type": "string",
            "description": "Quote currency code"
          },
          "coupon_code": {
            "type": "string",
            "description": "Applied coupon code"
          },
          "items_qty": {
            "type": "integer",
            "description": "Items qty"
          },
          "items": {
            "type": "array",
            "description": "Totals by items",
            "items": {
              "$ref": "#/components/schemas/quote-data-totals-item-interface"
            }
          },
          "total_segments": {
            "type": "array",
            "description": "Dynamically calculated totals",
            "items": {
              "$ref": "#/components/schemas/quote-data-total-segment-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-totals-extension-interface"
          }
        },
        "required": ["weee_tax_applied_amount", "total_segments"]
      },
      "quote-data-totals-item-interface": {
        "type": "object",
        "description": "Interface TotalsItemInterface",
        "properties": {
          "item_id": {
            "type": "integer",
            "description": "Item id"
          },
          "price": {
            "type": "number",
            "description": "Item price in quote currency."
          },
          "base_price": {
            "type": "number",
            "description": "Item price in base currency."
          },
          "qty": {
            "type": "number",
            "description": "Item quantity."
          },
          "row_total": {
            "type": "number",
            "description": "Row total in quote currency."
          },
          "base_row_total": {
            "type": "number",
            "description": "Row total in base currency."
          },
          "row_total_with_discount": {
            "type": "number",
            "description": "Row total with discount in quote currency. Otherwise, null."
          },
          "tax_amount": {
            "type": "number",
            "description": "Tax amount in quote currency. Otherwise, null."
          },
          "base_tax_amount": {
            "type": "number",
            "description": "Tax amount in base currency. Otherwise, null."
          },
          "tax_percent": {
            "type": "number",
            "description": "Tax percent. Otherwise, null."
          },
          "discount_amount": {
            "type": "number",
            "description": "Discount amount in quote currency. Otherwise, null."
          },
          "base_discount_amount": {
            "type": "number",
            "description": "Discount amount in base currency. Otherwise, null."
          },
          "discount_percent": {
            "type": "number",
            "description": "Discount percent. Otherwise, null."
          },
          "price_incl_tax": {
            "type": "number",
            "description": "Price including tax in quote currency. Otherwise, null."
          },
          "base_price_incl_tax": {
            "type": "number",
            "description": "Price including tax in base currency. Otherwise, null."
          },
          "row_total_incl_tax": {
            "type": "number",
            "description": "Row total including tax in quote currency. Otherwise, null."
          },
          "base_row_total_incl_tax": {
            "type": "number",
            "description": "Row total including tax in base currency. Otherwise, null."
          },
          "options": {
            "type": "string",
            "description": "Item price in quote currency."
          },
          "weee_tax_applied_amount": {
            "type": "number",
            "description": "Item weee tax applied amount in quote currency."
          },
          "weee_tax_applied": {
            "type": "string",
            "description": "Item weee tax applied in quote currency."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-totals-item-extension-interface"
          },
          "name": {
            "type": "string",
            "description": "Product name. Otherwise, null."
          }
        },
        "required": [
          "item_id",
          "price",
          "base_price",
          "qty",
          "row_total",
          "base_row_total",
          "options",
          "weee_tax_applied_amount",
          "weee_tax_applied"
        ]
      },
      "quote-data-totals-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsItemInterface",
        "properties": {
          "negotiable_quote_item_totals": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-item-totals-interface"
          }
        }
      },
      "negotiable-quote-data-negotiable-quote-item-totals-interface": {
        "type": "object",
        "description": "Extension attribute for quote item totals model.",
        "properties": {
          "cost": {
            "type": "number",
            "description": "Cost for quote item."
          },
          "catalog_price": {
            "type": "number",
            "description": "Catalog price for quote item."
          },
          "base_catalog_price": {
            "type": "number",
            "description": "Catalog price for quote item in base currency."
          },
          "catalog_price_incl_tax": {
            "type": "number",
            "description": "Catalog price with included tax for quote item."
          },
          "base_catalog_price_incl_tax": {
            "type": "number",
            "description": "Catalog price with included tax for quote item in base currency."
          },
          "cart_price": {
            "type": "number",
            "description": "Cart price for quote item."
          },
          "base_cart_price": {
            "type": "number",
            "description": "Cart price for quote item in base currency."
          },
          "cart_tax": {
            "type": "number",
            "description": "Tax from catalog price for quote item."
          },
          "base_cart_tax": {
            "type": "number",
            "description": "Tax from catalog price for quote item in base currency."
          },
          "cart_price_incl_tax": {
            "type": "number",
            "description": "Cart price with included tax for quote item."
          },
          "base_cart_price_incl_tax": {
            "type": "number",
            "description": "Cart price with included tax for quote item in base currency."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-item-totals-extension-interface"
          }
        },
        "required": [
          "cost",
          "catalog_price",
          "base_catalog_price",
          "catalog_price_incl_tax",
          "base_catalog_price_incl_tax",
          "cart_price",
          "base_cart_price",
          "cart_tax",
          "base_cart_tax",
          "cart_price_incl_tax",
          "base_cart_price_incl_tax"
        ]
      },
      "negotiable-quote-data-negotiable-quote-item-totals-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemTotalsInterface"
      },
      "quote-data-total-segment-interface": {
        "type": "object",
        "description": "Interface TotalsInterface",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code"
          },
          "title": {
            "type": "string",
            "description": "Total title"
          },
          "value": {
            "type": "number",
            "description": "Total value"
          },
          "area": {
            "type": "string",
            "description": "Display area code."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-total-segment-extension-interface"
          }
        },
        "required": ["code", "value"]
      },
      "quote-data-total-segment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalSegmentInterface",
        "properties": {
          "tax_grandtotal_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tax-data-grand-total-details-interface"
            }
          },
          "gift_cards": {
            "type": "string"
          },
          "gw_order_id": {
            "type": "string"
          },
          "gw_item_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gw_allow_gift_receipt": {
            "type": "string"
          },
          "gw_add_card": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_items_price": {
            "type": "string"
          },
          "gw_items_base_price": {
            "type": "string"
          },
          "gw_card_price": {
            "type": "string"
          },
          "gw_card_base_price": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          },
          "gw_items_base_tax_amount": {
            "type": "string"
          },
          "gw_items_tax_amount": {
            "type": "string"
          },
          "gw_card_base_tax_amount": {
            "type": "string"
          },
          "gw_card_tax_amount": {
            "type": "string"
          },
          "gw_price_incl_tax": {
            "type": "string"
          },
          "gw_base_price_incl_tax": {
            "type": "string"
          },
          "gw_card_price_incl_tax": {
            "type": "string"
          },
          "gw_card_base_price_incl_tax": {
            "type": "string"
          },
          "gw_items_price_incl_tax": {
            "type": "string"
          },
          "gw_items_base_price_incl_tax": {
            "type": "string"
          }
        }
      },
      "tax-data-grand-total-details-interface": {
        "type": "object",
        "description": "Interface GrandTotalDetailsInterface",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Tax amount value"
          },
          "rates": {
            "type": "array",
            "description": "Tax rates info",
            "items": {
              "$ref": "#/components/schemas/tax-data-grand-total-rates-interface"
            }
          },
          "group_id": {
            "type": "integer",
            "description": "Group identifier"
          }
        },
        "required": ["amount", "rates", "group_id"]
      },
      "tax-data-grand-total-rates-interface": {
        "type": "object",
        "description": "Interface GrandTotalRatesInterface",
        "properties": {
          "percent": {
            "type": "string",
            "description": "Tax percentage value"
          },
          "title": {
            "type": "string",
            "description": "Rate title"
          }
        },
        "required": ["percent", "title"]
      },
      "quote-data-totals-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsInterface",
        "properties": {
          "coupon_label": {
            "type": "string"
          },
          "negotiable_quote_totals": {
            "$ref": "#/components/schemas/negotiable-quote-data-negotiable-quote-totals-interface"
          },
          "base_customer_balance_amount": {
            "type": "number"
          },
          "customer_balance_amount": {
            "type": "number"
          },
          "coupon_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "coupons_labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reward_points_balance": {
            "type": "number"
          },
          "reward_currency_amount": {
            "type": "number"
          },
          "base_reward_currency_amount": {
            "type": "number"
          }
        }
      },
      "negotiable-quote-data-negotiable-quote-totals-interface": {
        "type": "object",
        "description": "Extension attribute for quote totals model.",
        "properties": {
          "items_count": {
            "type": "integer",
            "description": "The number of different items or products in the cart."
          },
          "quote_status": {
            "type": "string",
            "description": "Negotiable quote status."
          },
          "created_at": {
            "type": "string",
            "description": "The cart creation date and time."
          },
          "updated_at": {
            "type": "string",
            "description": "The cart last update date and time."
          },
          "customer_group": {
            "type": "integer",
            "description": "Customer group id."
          },
          "base_to_quote_rate": {
            "type": "number",
            "description": "Base currency to quote currency rate."
          },
          "cost_total": {
            "type": "number",
            "description": "Total cost for quote."
          },
          "base_cost_total": {
            "type": "number",
            "description": "Total cost for quote in base currency."
          },
          "original_total": {
            "type": "number",
            "description": "Original quote total."
          },
          "base_original_total": {
            "type": "number",
            "description": "Original quote total in base currency."
          },
          "original_tax": {
            "type": "number",
            "description": "Original tax amount for quote."
          },
          "base_original_tax": {
            "type": "number",
            "description": "Original tax amount for quote in base currency."
          },
          "original_price_incl_tax": {
            "type": "number",
            "description": "Original price with included tax for quote."
          },
          "base_original_price_incl_tax": {
            "type": "number",
            "description": "Original price with included tax for quote in base currency."
          },
          "negotiated_price_type": {
            "type": "integer",
            "description": "Negotiable quote type."
          },
          "negotiated_price_value": {
            "type": "number",
            "description": "Negotiable price value for quote."
          }
        },
        "required": [
          "items_count",
          "quote_status",
          "created_at",
          "updated_at",
          "customer_group",
          "base_to_quote_rate",
          "cost_total",
          "base_cost_total",
          "original_total",
          "base_original_total",
          "original_tax",
          "base_original_tax",
          "original_price_incl_tax",
          "base_original_price_incl_tax",
          "negotiated_price_type",
          "negotiated_price_value"
        ]
      },
      "quote-data-totals-additional-data-interface": {
        "type": "object",
        "description": "Additional data for totals collection.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-totals-additional-data-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        }
      },
      "quote-data-totals-additional-data-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsAdditionalDataInterface",
        "properties": {
          "gift_messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gift-message-data-message-interface"
            }
          }
        }
      },
      "gift-message-data-message-interface": {
        "type": "object",
        "description": "Interface MessageInterface",
        "properties": {
          "gift_message_id": {
            "type": "integer",
            "description": "Gift message ID. Otherwise, null."
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer ID. Otherwise, null."
          },
          "sender": {
            "type": "string",
            "description": "Sender name."
          },
          "recipient": {
            "type": "string",
            "description": "Recipient name."
          },
          "message": {
            "type": "string",
            "description": "Message text."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/gift-message-data-message-extension-interface"
          }
        },
        "required": ["sender", "recipient", "message"]
      },
      "gift-message-data-message-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\GiftMessage\\Api\\Data\\MessageInterface",
        "properties": {
          "entity_id": {
            "type": "string"
          },
          "entity_type": {
            "type": "string"
          },
          "wrapping_id": {
            "type": "integer"
          },
          "wrapping_allow_gift_receipt": {
            "type": "boolean"
          },
          "wrapping_add_printed_card": {
            "type": "boolean"
          }
        }
      },
      "sales-data-order-interface": {
        "type": "object",
        "description": "Order interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "adjustment_negative": {
            "type": "number",
            "description": "Negative adjustment value."
          },
          "adjustment_positive": {
            "type": "number",
            "description": "Positive adjustment value."
          },
          "applied_rule_ids": {
            "type": "string",
            "description": "Applied rule IDs."
          },
          "base_adjustment_negative": {
            "type": "number",
            "description": "Base negative adjustment value."
          },
          "base_adjustment_positive": {
            "type": "number",
            "description": "Base positive adjustment value."
          },
          "base_currency_code": {
            "type": "string",
            "description": "Base currency code."
          },
          "base_discount_amount": {
            "type": "number",
            "description": "Base discount amount."
          },
          "base_discount_canceled": {
            "type": "number",
            "description": "Base discount canceled."
          },
          "base_discount_invoiced": {
            "type": "number",
            "description": "Base discount invoiced."
          },
          "base_discount_refunded": {
            "type": "number",
            "description": "Base discount refunded."
          },
          "base_grand_total": {
            "type": "number",
            "description": "Base grand total."
          },
          "base_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Base discount tax compensation amount."
          },
          "base_discount_tax_compensation_invoiced": {
            "type": "number",
            "description": "Base discount tax compensation invoiced."
          },
          "base_discount_tax_compensation_refunded": {
            "type": "number",
            "description": "Base discount tax compensation refunded."
          },
          "base_shipping_amount": {
            "type": "number",
            "description": "Base shipping amount."
          },
          "base_shipping_canceled": {
            "type": "number",
            "description": "Base shipping canceled."
          },
          "base_shipping_discount_amount": {
            "type": "number",
            "description": "Base shipping discount amount."
          },
          "base_shipping_discount_tax_compensation_amnt": {
            "type": "number",
            "description": "Base shipping discount tax compensation amount."
          },
          "base_shipping_incl_tax": {
            "type": "number",
            "description": "Base shipping including tax."
          },
          "base_shipping_invoiced": {
            "type": "number",
            "description": "Base shipping invoiced."
          },
          "base_shipping_refunded": {
            "type": "number",
            "description": "Base shipping refunded."
          },
          "base_shipping_tax_amount": {
            "type": "number",
            "description": "Base shipping tax amount."
          },
          "base_shipping_tax_refunded": {
            "type": "number",
            "description": "Base shipping tax refunded."
          },
          "base_subtotal": {
            "type": "number",
            "description": "Base subtotal."
          },
          "base_subtotal_canceled": {
            "type": "number",
            "description": "Base subtotal canceled."
          },
          "base_subtotal_incl_tax": {
            "type": "number",
            "description": "Base subtotal including tax."
          },
          "base_subtotal_invoiced": {
            "type": "number",
            "description": "Base subtotal invoiced."
          },
          "base_subtotal_refunded": {
            "type": "number",
            "description": "Base subtotal refunded."
          },
          "base_tax_amount": {
            "type": "number",
            "description": "Base tax amount."
          },
          "base_tax_canceled": {
            "type": "number",
            "description": "Base tax canceled."
          },
          "base_tax_invoiced": {
            "type": "number",
            "description": "Base tax invoiced."
          },
          "base_tax_refunded": {
            "type": "number",
            "description": "Base tax refunded."
          },
          "base_total_canceled": {
            "type": "number",
            "description": "Base total canceled."
          },
          "base_total_due": {
            "type": "number",
            "description": "Base total due."
          },
          "base_total_invoiced": {
            "type": "number",
            "description": "Base total invoiced."
          },
          "base_total_invoiced_cost": {
            "type": "number",
            "description": "Base total invoiced cost."
          },
          "base_total_offline_refunded": {
            "type": "number",
            "description": "Base total offline refunded."
          },
          "base_total_online_refunded": {
            "type": "number",
            "description": "Base total online refunded."
          },
          "base_total_paid": {
            "type": "number",
            "description": "Base total paid."
          },
          "base_total_qty_ordered": {
            "type": "number",
            "description": "Base total quantity ordered."
          },
          "base_total_refunded": {
            "type": "number",
            "description": "Base total refunded."
          },
          "base_to_global_rate": {
            "type": "number",
            "description": "Base-to-global rate."
          },
          "base_to_order_rate": {
            "type": "number",
            "description": "Base-to-order rate."
          },
          "billing_address_id": {
            "type": "integer",
            "description": "Billing address ID."
          },
          "can_ship_partially": {
            "type": "integer",
            "description": "Can-ship-partially flag value."
          },
          "can_ship_partially_item": {
            "type": "integer",
            "description": "Can-ship-partially-item flag value."
          },
          "coupon_code": {
            "type": "string",
            "description": "Coupon code."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "customer_dob": {
            "type": "string",
            "description": "In keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customers’ full date of birth (month, day, year) along with other personal identifiers (e.g., full name) before collecting or processing such data."
          },
          "customer_email": {
            "type": "string",
            "description": "Customer email address."
          },
          "customer_firstname": {
            "type": "string",
            "description": "Customer first name."
          },
          "customer_gender": {
            "type": "integer",
            "description": "Customer gender."
          },
          "customer_group_id": {
            "type": "integer",
            "description": "Customer group ID."
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer ID."
          },
          "customer_is_guest": {
            "type": "integer",
            "description": "Customer-is-guest flag value."
          },
          "customer_lastname": {
            "type": "string",
            "description": "Customer last name."
          },
          "customer_middlename": {
            "type": "string",
            "description": "Customer middle name."
          },
          "customer_note": {
            "type": "string",
            "description": "Customer note."
          },
          "customer_note_notify": {
            "type": "integer",
            "description": "Customer-note-notify flag value."
          },
          "customer_prefix": {
            "type": "string",
            "description": "Customer prefix."
          },
          "customer_suffix": {
            "type": "string",
            "description": "Customer suffix."
          },
          "customer_taxvat": {
            "type": "string",
            "description": "Customer value-added tax (VAT)."
          },
          "discount_amount": {
            "type": "number",
            "description": "Discount amount."
          },
          "discount_canceled": {
            "type": "number",
            "description": "Discount canceled."
          },
          "discount_description": {
            "type": "string",
            "description": "Discount description."
          },
          "discount_invoiced": {
            "type": "number",
            "description": "Discount invoiced."
          },
          "discount_refunded": {
            "type": "number",
            "description": "Discount refunded amount."
          },
          "edit_increment": {
            "type": "integer",
            "description": "Edit increment value."
          },
          "email_sent": {
            "type": "integer",
            "description": "Email-sent flag value."
          },
          "entity_id": {
            "type": "integer",
            "description": "Order ID."
          },
          "ext_customer_id": {
            "type": "string",
            "description": "External customer ID."
          },
          "ext_order_id": {
            "type": "string",
            "description": "External order ID."
          },
          "forced_shipment_with_invoice": {
            "type": "integer",
            "description": "Forced-shipment-with-invoice flag value."
          },
          "global_currency_code": {
            "type": "string",
            "description": "Global currency code."
          },
          "grand_total": {
            "type": "number",
            "description": "Grand total."
          },
          "discount_tax_compensation_amount": {
            "type": "number",
            "description": "Discount tax compensation amount."
          },
          "discount_tax_compensation_invoiced": {
            "type": "number",
            "description": "Discount tax compensation invoiced amount."
          },
          "discount_tax_compensation_refunded": {
            "type": "number",
            "description": "Discount tax compensation refunded amount."
          },
          "hold_before_state": {
            "type": "string",
            "description": "Hold before state."
          },
          "hold_before_status": {
            "type": "string",
            "description": "Hold before status."
          },
          "increment_id": {
            "type": "string",
            "description": "Increment ID."
          },
          "is_virtual": {
            "type": "integer",
            "description": "Is-virtual flag value."
          },
          "order_currency_code": {
            "type": "string",
            "description": "Order currency code."
          },
          "original_increment_id": {
            "type": "string",
            "description": "Original increment ID."
          },
          "payment_authorization_amount": {
            "type": "number",
            "description": "Payment authorization amount."
          },
          "payment_auth_expiration": {
            "type": "integer",
            "description": "Payment authorization expiration date."
          },
          "protect_code": {
            "type": "string",
            "description": "Protect code."
          },
          "quote_address_id": {
            "type": "integer",
            "description": "Quote address ID."
          },
          "quote_id": {
            "type": "integer",
            "description": "Quote ID."
          },
          "relation_child_id": {
            "type": "string",
            "description": "Relation child ID."
          },
          "relation_child_real_id": {
            "type": "string",
            "description": "Relation child real ID."
          },
          "relation_parent_id": {
            "type": "string",
            "description": "Relation parent ID."
          },
          "relation_parent_real_id": {
            "type": "string",
            "description": "Relation parent real ID."
          },
          "remote_ip": {
            "type": "string",
            "description": "Remote IP address."
          },
          "shipping_amount": {
            "type": "number",
            "description": "Shipping amount."
          },
          "shipping_canceled": {
            "type": "number",
            "description": "Shipping canceled amount."
          },
          "shipping_description": {
            "type": "string",
            "description": "Shipping description."
          },
          "shipping_discount_amount": {
            "type": "number",
            "description": "Shipping discount amount."
          },
          "shipping_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Shipping discount tax compensation amount."
          },
          "shipping_incl_tax": {
            "type": "number",
            "description": "Shipping including tax amount."
          },
          "shipping_invoiced": {
            "type": "number",
            "description": "Shipping invoiced amount."
          },
          "shipping_refunded": {
            "type": "number",
            "description": "Shipping refunded amount."
          },
          "shipping_tax_amount": {
            "type": "number",
            "description": "Shipping tax amount."
          },
          "shipping_tax_refunded": {
            "type": "number",
            "description": "Shipping tax refunded amount."
          },
          "state": {
            "type": "string",
            "description": "State."
          },
          "status": {
            "type": "string",
            "description": "Status."
          },
          "store_currency_code": {
            "type": "string",
            "description": "Store currency code."
          },
          "store_id": {
            "type": "integer",
            "description": "Store ID."
          },
          "store_name": {
            "type": "string",
            "description": "Store name."
          },
          "store_to_base_rate": {
            "type": "number",
            "description": "Store-to-base rate."
          },
          "store_to_order_rate": {
            "type": "number",
            "description": "Store-to-order rate."
          },
          "subtotal": {
            "type": "number",
            "description": "Subtotal."
          },
          "subtotal_canceled": {
            "type": "number",
            "description": "Subtotal canceled amount."
          },
          "subtotal_incl_tax": {
            "type": "number",
            "description": "Subtotal including tax amount."
          },
          "subtotal_invoiced": {
            "type": "number",
            "description": "Subtotal invoiced amount."
          },
          "subtotal_refunded": {
            "type": "number",
            "description": "Subtotal refunded amount."
          },
          "tax_amount": {
            "type": "number",
            "description": "Tax amount."
          },
          "tax_canceled": {
            "type": "number",
            "description": "Tax canceled amount."
          },
          "tax_invoiced": {
            "type": "number",
            "description": "Tax invoiced amount."
          },
          "tax_refunded": {
            "type": "number",
            "description": "Tax refunded amount."
          },
          "total_canceled": {
            "type": "number",
            "description": "Total canceled."
          },
          "total_due": {
            "type": "number",
            "description": "Total due."
          },
          "total_invoiced": {
            "type": "number",
            "description": "Total invoiced amount."
          },
          "total_item_count": {
            "type": "integer",
            "description": "Total item count."
          },
          "total_offline_refunded": {
            "type": "number",
            "description": "Total offline refunded amount."
          },
          "total_online_refunded": {
            "type": "number",
            "description": "Total online refunded amount."
          },
          "total_paid": {
            "type": "number",
            "description": "Total paid."
          },
          "total_qty_ordered": {
            "type": "number",
            "description": "Total quantity ordered."
          },
          "total_refunded": {
            "type": "number",
            "description": "Total amount refunded."
          },
          "updated_at": {
            "type": "string",
            "description": "Updated-at timestamp."
          },
          "weight": {
            "type": "number",
            "description": "Weight."
          },
          "x_forwarded_for": {
            "type": "string",
            "description": "X-Forwarded-For field value."
          },
          "items": {
            "type": "array",
            "description": "Array of items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-item-interface"
            }
          },
          "billing_address": {
            "$ref": "#/components/schemas/sales-data-order-address-interface"
          },
          "payment": {
            "$ref": "#/components/schemas/sales-data-order-payment-interface"
          },
          "status_histories": {
            "type": "array",
            "description": "Array of status histories.",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-status-history-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-extension-interface"
          }
        },
        "required": ["base_grand_total", "customer_email", "grand_total", "items"]
      },
      "sales-data-order-item-interface": {
        "type": "object",
        "description": "Order item interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "additional_data": {
            "type": "string",
            "description": "Additional data."
          },
          "amount_refunded": {
            "type": "number",
            "description": "Amount refunded."
          },
          "applied_rule_ids": {
            "type": "string",
            "description": "Applied rule IDs."
          },
          "base_amount_refunded": {
            "type": "number",
            "description": "Base amount refunded."
          },
          "base_cost": {
            "type": "number",
            "description": "Base cost."
          },
          "base_discount_amount": {
            "type": "number",
            "description": "Base discount amount."
          },
          "base_discount_invoiced": {
            "type": "number",
            "description": "Base discount invoiced."
          },
          "base_discount_refunded": {
            "type": "number",
            "description": "Base discount refunded."
          },
          "base_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Base discount tax compensation amount."
          },
          "base_discount_tax_compensation_invoiced": {
            "type": "number",
            "description": "Base discount tax compensation invoiced."
          },
          "base_discount_tax_compensation_refunded": {
            "type": "number",
            "description": "Base discount tax compensation refunded."
          },
          "base_original_price": {
            "type": "number",
            "description": "Base original price."
          },
          "base_price": {
            "type": "number",
            "description": "Base price."
          },
          "base_price_incl_tax": {
            "type": "number",
            "description": "Base price including tax."
          },
          "base_row_invoiced": {
            "type": "number",
            "description": "Base row invoiced."
          },
          "base_row_total": {
            "type": "number",
            "description": "Base row total."
          },
          "base_row_total_incl_tax": {
            "type": "number",
            "description": "Base row total including tax."
          },
          "base_tax_amount": {
            "type": "number",
            "description": "Base tax amount."
          },
          "base_tax_before_discount": {
            "type": "number",
            "description": "Base tax before discount."
          },
          "base_tax_invoiced": {
            "type": "number",
            "description": "Base tax invoiced."
          },
          "base_tax_refunded": {
            "type": "number",
            "description": "Base tax refunded."
          },
          "base_weee_tax_applied_amount": {
            "type": "number",
            "description": "Base WEEE tax applied amount."
          },
          "base_weee_tax_applied_row_amnt": {
            "type": "number",
            "description": "Base WEEE tax applied row amount."
          },
          "base_weee_tax_disposition": {
            "type": "number",
            "description": "Base WEEE tax disposition."
          },
          "base_weee_tax_row_disposition": {
            "type": "number",
            "description": "Base WEEE tax row disposition."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "description": {
            "type": "string",
            "description": "Description."
          },
          "discount_amount": {
            "type": "number",
            "description": "Discount amount."
          },
          "discount_invoiced": {
            "type": "number",
            "description": "Discount invoiced."
          },
          "discount_percent": {
            "type": "number",
            "description": "Discount percent."
          },
          "discount_refunded": {
            "type": "number",
            "description": "Discount refunded."
          },
          "event_id": {
            "type": "integer",
            "description": "Event ID."
          },
          "ext_order_item_id": {
            "type": "string",
            "description": "External order item ID."
          },
          "free_shipping": {
            "type": "integer",
            "description": "Free-shipping flag value."
          },
          "gw_base_price": {
            "type": "number",
            "description": "GW base price."
          },
          "gw_base_price_invoiced": {
            "type": "number",
            "description": "GW base price invoiced."
          },
          "gw_base_price_refunded": {
            "type": "number",
            "description": "GW base price refunded."
          },
          "gw_base_tax_amount": {
            "type": "number",
            "description": "GW base tax amount."
          },
          "gw_base_tax_amount_invoiced": {
            "type": "number",
            "description": "GW base tax amount invoiced."
          },
          "gw_base_tax_amount_refunded": {
            "type": "number",
            "description": "GW base tax amount refunded."
          },
          "gw_id": {
            "type": "integer",
            "description": "GW ID."
          },
          "gw_price": {
            "type": "number",
            "description": "GW price."
          },
          "gw_price_invoiced": {
            "type": "number",
            "description": "GW price invoiced."
          },
          "gw_price_refunded": {
            "type": "number",
            "description": "GW price refunded."
          },
          "gw_tax_amount": {
            "type": "number",
            "description": "GW tax amount."
          },
          "gw_tax_amount_invoiced": {
            "type": "number",
            "description": "GW tax amount invoiced."
          },
          "gw_tax_amount_refunded": {
            "type": "number",
            "description": "GW tax amount refunded."
          },
          "discount_tax_compensation_amount": {
            "type": "number",
            "description": "Discount tax compensation amount."
          },
          "discount_tax_compensation_canceled": {
            "type": "number",
            "description": "Discount tax compensation canceled."
          },
          "discount_tax_compensation_invoiced": {
            "type": "number",
            "description": "Discount tax compensation invoiced."
          },
          "discount_tax_compensation_refunded": {
            "type": "number",
            "description": "Discount tax compensation refunded."
          },
          "is_qty_decimal": {
            "type": "integer",
            "description": "Is-quantity-decimal flag value."
          },
          "is_virtual": {
            "type": "integer",
            "description": "Is-virtual flag value."
          },
          "item_id": {
            "type": "integer",
            "description": "Item ID."
          },
          "locked_do_invoice": {
            "type": "integer",
            "description": "Locked DO invoice flag value."
          },
          "locked_do_ship": {
            "type": "integer",
            "description": "Locked DO ship flag value."
          },
          "name": {
            "type": "string",
            "description": "Name."
          },
          "no_discount": {
            "type": "integer",
            "description": "No-discount flag value."
          },
          "order_id": {
            "type": "integer",
            "description": "Order ID."
          },
          "original_price": {
            "type": "number",
            "description": "Original price."
          },
          "parent_item_id": {
            "type": "integer",
            "description": "Parent item ID."
          },
          "price": {
            "type": "number",
            "description": "Price."
          },
          "price_incl_tax": {
            "type": "number",
            "description": "Price including tax."
          },
          "product_id": {
            "type": "integer",
            "description": "Product ID."
          },
          "product_type": {
            "type": "string",
            "description": "Product type."
          },
          "qty_backordered": {
            "type": "number",
            "description": "Quantity backordered."
          },
          "qty_canceled": {
            "type": "number",
            "description": "Quantity canceled."
          },
          "qty_invoiced": {
            "type": "number",
            "description": "Quantity invoiced."
          },
          "qty_ordered": {
            "type": "number",
            "description": "Quantity ordered."
          },
          "qty_refunded": {
            "type": "number",
            "description": "Quantity refunded."
          },
          "qty_returned": {
            "type": "number",
            "description": "Quantity returned."
          },
          "qty_shipped": {
            "type": "number",
            "description": "Quantity shipped."
          },
          "quote_item_id": {
            "type": "integer",
            "description": "Quote item ID."
          },
          "row_invoiced": {
            "type": "number",
            "description": "Row invoiced."
          },
          "row_total": {
            "type": "number",
            "description": "Row total."
          },
          "row_total_incl_tax": {
            "type": "number",
            "description": "Row total including tax."
          },
          "row_weight": {
            "type": "number",
            "description": "Row weight."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "store_id": {
            "type": "integer",
            "description": "Store ID."
          },
          "tax_amount": {
            "type": "number",
            "description": "Tax amount."
          },
          "tax_before_discount": {
            "type": "number",
            "description": "Tax before discount."
          },
          "tax_canceled": {
            "type": "number",
            "description": "Tax canceled."
          },
          "tax_invoiced": {
            "type": "number",
            "description": "Tax invoiced."
          },
          "tax_percent": {
            "type": "number",
            "description": "Tax percent."
          },
          "tax_refunded": {
            "type": "number",
            "description": "Tax refunded."
          },
          "updated_at": {
            "type": "string",
            "description": "Updated-at timestamp."
          },
          "weee_tax_applied": {
            "type": "string",
            "description": "WEEE tax applied."
          },
          "weee_tax_applied_amount": {
            "type": "number",
            "description": "WEEE tax applied amount."
          },
          "weee_tax_applied_row_amount": {
            "type": "number",
            "description": "WEEE tax applied row amount."
          },
          "weee_tax_disposition": {
            "type": "number",
            "description": "WEEE tax disposition."
          },
          "weee_tax_row_disposition": {
            "type": "number",
            "description": "WEEE tax row disposition."
          },
          "weight": {
            "type": "number",
            "description": "Weight."
          },
          "parent_item": {
            "$ref": "#/components/schemas/sales-data-order-item-interface"
          },
          "product_option": {
            "$ref": "#/components/schemas/catalog-data-product-option-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-item-extension-interface"
          }
        },
        "required": ["sku"]
      },
      "catalog-data-product-option-interface": {
        "type": "object",
        "description": "Product option interface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-option-extension-interface"
          }
        }
      },
      "catalog-data-product-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductOptionInterface",
        "properties": {
          "custom_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/catalog-data-custom-option-interface"
            }
          },
          "bundle_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bundle-data-bundle-option-interface"
            }
          },
          "downloadable_option": {
            "$ref": "#/components/schemas/downloadable-data-downloadable-option-interface"
          },
          "giftcard_item_option": {
            "$ref": "#/components/schemas/gift-card-data-gift-card-option-interface"
          },
          "configurable_item_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/configurable-product-data-configurable-item-option-value-interface"
            }
          }
        }
      },
      "sales-data-order-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderItemInterface",
        "properties": {
          "itemized_taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tax-data-order-tax-item-interface"
            }
          },
          "gift_message": {
            "$ref": "#/components/schemas/gift-message-data-message-interface"
          },
          "gw_id": {
            "type": "string"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          },
          "gw_base_price_invoiced": {
            "type": "string"
          },
          "gw_price_invoiced": {
            "type": "string"
          },
          "gw_base_tax_amount_invoiced": {
            "type": "string"
          },
          "gw_tax_amount_invoiced": {
            "type": "string"
          },
          "gw_base_price_refunded": {
            "type": "string"
          },
          "gw_price_refunded": {
            "type": "string"
          },
          "gw_base_tax_amount_refunded": {
            "type": "string"
          },
          "gw_tax_amount_refunded": {
            "type": "string"
          }
        }
      },
      "tax-data-order-tax-item-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "tax_item_id": {
            "type": "integer",
            "description": "Tax item ID"
          },
          "tax_id": {
            "type": "integer",
            "description": "Tax ID"
          },
          "item_id": {
            "type": "integer",
            "description": "Order item ID"
          },
          "tax_code": {
            "type": "string",
            "description": "Tax code"
          },
          "tax_percent": {
            "type": "number",
            "description": "Tax percent"
          },
          "amount": {
            "type": "number",
            "description": "Tax amount"
          },
          "base_amount": {
            "type": "number",
            "description": "Tax amount in base currency"
          },
          "real_amount": {
            "type": "number",
            "description": "Real tax amount"
          },
          "real_base_amount": {
            "type": "number",
            "description": "Real tax amount in base currency"
          },
          "associated_item_id": {
            "type": "integer",
            "description": "Associated order item ID"
          },
          "taxable_item_type": {
            "type": "string",
            "description": "shipping, product, weee, quote_gw, etc..."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-order-tax-item-extension-interface"
          }
        },
        "required": ["tax_percent", "amount", "base_amount", "real_amount", "real_base_amount"]
      },
      "tax-data-order-tax-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxItemInterface"
      },
      "sales-data-order-address-interface": {
        "type": "object",
        "description": "Order address interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "address_type": {
            "type": "string",
            "description": "Address type."
          },
          "city": {
            "type": "string",
            "description": "City."
          },
          "company": {
            "type": "string",
            "description": "Company."
          },
          "country_id": {
            "type": "string",
            "description": "Country ID."
          },
          "customer_address_id": {
            "type": "integer",
            "description": "Country address ID."
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer ID."
          },
          "email": {
            "type": "string",
            "description": "Email address."
          },
          "entity_id": {
            "type": "integer",
            "description": "Order address ID."
          },
          "fax": {
            "type": "string",
            "description": "Fax number."
          },
          "firstname": {
            "type": "string",
            "description": "First name."
          },
          "lastname": {
            "type": "string",
            "description": "Last name."
          },
          "middlename": {
            "type": "string",
            "description": "Middle name."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "postcode": {
            "type": "string",
            "description": "Postal code."
          },
          "prefix": {
            "type": "string",
            "description": "Prefix."
          },
          "region": {
            "type": "string",
            "description": "Region."
          },
          "region_code": {
            "type": "string",
            "description": "Region code."
          },
          "region_id": {
            "type": "integer",
            "description": "Region ID."
          },
          "street": {
            "type": "array",
            "description": "Array of any street values. Otherwise, null.",
            "items": {
              "type": "string"
            }
          },
          "suffix": {
            "type": "string",
            "description": "Suffix."
          },
          "telephone": {
            "type": "string",
            "description": "Telephone number."
          },
          "vat_id": {
            "type": "string",
            "description": "VAT ID."
          },
          "vat_is_valid": {
            "type": "integer",
            "description": "VAT-is-valid flag value."
          },
          "vat_request_date": {
            "type": "string",
            "description": "VAT request date."
          },
          "vat_request_id": {
            "type": "string",
            "description": "VAT request ID."
          },
          "vat_request_success": {
            "type": "integer",
            "description": "VAT-request-success flag value."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-address-extension-interface"
          }
        },
        "required": [
          "address_type",
          "city",
          "country_id",
          "firstname",
          "lastname",
          "postcode",
          "telephone"
        ]
      },
      "sales-data-order-address-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderAddressInterface"
      },
      "sales-data-order-payment-interface": {
        "type": "object",
        "description": "Order payment interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "account_status": {
            "type": "string",
            "description": "Account status."
          },
          "additional_data": {
            "type": "string",
            "description": "Additional data."
          },
          "additional_information": {
            "type": "array",
            "description": "Array of additional information.",
            "items": {
              "type": "string"
            }
          },
          "address_status": {
            "type": "string",
            "description": "Address status."
          },
          "amount_authorized": {
            "type": "number",
            "description": "Amount authorized."
          },
          "amount_canceled": {
            "type": "number",
            "description": "Amount canceled."
          },
          "amount_ordered": {
            "type": "number",
            "description": "Amount ordered."
          },
          "amount_paid": {
            "type": "number",
            "description": "Amount paid."
          },
          "amount_refunded": {
            "type": "number",
            "description": "Amount refunded."
          },
          "anet_trans_method": {
            "type": "string",
            "description": "Anet transaction method."
          },
          "base_amount_authorized": {
            "type": "number",
            "description": "Base amount authorized."
          },
          "base_amount_canceled": {
            "type": "number",
            "description": "Base amount canceled."
          },
          "base_amount_ordered": {
            "type": "number",
            "description": "Base amount ordered."
          },
          "base_amount_paid": {
            "type": "number",
            "description": "Base amount paid."
          },
          "base_amount_paid_online": {
            "type": "number",
            "description": "Base amount paid online."
          },
          "base_amount_refunded": {
            "type": "number",
            "description": "Base amount refunded."
          },
          "base_amount_refunded_online": {
            "type": "number",
            "description": "Base amount refunded online."
          },
          "base_shipping_amount": {
            "type": "number",
            "description": "Base shipping amount."
          },
          "base_shipping_captured": {
            "type": "number",
            "description": "Base shipping captured amount."
          },
          "base_shipping_refunded": {
            "type": "number",
            "description": "Base shipping refunded amount."
          },
          "cc_approval": {
            "type": "string",
            "description": "Credit card approval."
          },
          "cc_avs_status": {
            "type": "string",
            "description": "Credit card avs status."
          },
          "cc_cid_status": {
            "type": "string",
            "description": "Credit card CID status."
          },
          "cc_debug_request_body": {
            "type": "string",
            "description": "Credit card debug request body."
          },
          "cc_debug_response_body": {
            "type": "string",
            "description": "Credit card debug response body."
          },
          "cc_debug_response_serialized": {
            "type": "string",
            "description": "Credit card debug response serialized."
          },
          "cc_exp_month": {
            "type": "string",
            "description": "Credit card expiration month."
          },
          "cc_exp_year": {
            "type": "string",
            "description": "Credit card expiration year."
          },
          "cc_last4": {
            "type": "string",
            "description": "Last four digits of the credit card."
          },
          "cc_number_enc": {
            "type": "string",
            "description": "Encrypted credit card number."
          },
          "cc_owner": {
            "type": "string",
            "description": "Credit card number."
          },
          "cc_secure_verify": {
            "type": "string",
            "description": "Credit card secure verify."
          },
          "cc_ss_issue": {
            "type": "string",
            "description": "Credit card SS issue."
          },
          "cc_ss_start_month": {
            "type": "string",
            "description": "Credit card SS start month."
          },
          "cc_ss_start_year": {
            "type": "string",
            "description": "Credit card SS start year."
          },
          "cc_status": {
            "type": "string",
            "description": "Credit card status."
          },
          "cc_status_description": {
            "type": "string",
            "description": "Credit card status description."
          },
          "cc_trans_id": {
            "type": "string",
            "description": "Credit card transaction ID."
          },
          "cc_type": {
            "type": "string",
            "description": "Credit card type."
          },
          "echeck_account_name": {
            "type": "string",
            "description": "eCheck account name."
          },
          "echeck_account_type": {
            "type": "string",
            "description": "eCheck account type."
          },
          "echeck_bank_name": {
            "type": "string",
            "description": "eCheck bank name."
          },
          "echeck_routing_number": {
            "type": "string",
            "description": "eCheck routing number."
          },
          "echeck_type": {
            "type": "string",
            "description": "eCheck type."
          },
          "entity_id": {
            "type": "integer",
            "description": "Entity ID."
          },
          "last_trans_id": {
            "type": "string",
            "description": "Last transaction ID."
          },
          "method": {
            "type": "string",
            "description": "Method."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "po_number": {
            "type": "string",
            "description": "PO number."
          },
          "protection_eligibility": {
            "type": "string",
            "description": "Protection eligibility."
          },
          "quote_payment_id": {
            "type": "integer",
            "description": "Quote payment ID."
          },
          "shipping_amount": {
            "type": "number",
            "description": "Shipping amount."
          },
          "shipping_captured": {
            "type": "number",
            "description": "Shipping captured."
          },
          "shipping_refunded": {
            "type": "number",
            "description": "Shipping refunded."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-payment-extension-interface"
          }
        },
        "required": ["account_status", "additional_information", "cc_last4", "method"]
      },
      "sales-data-order-payment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderPaymentInterface",
        "properties": {
          "notification_message": {
            "type": "string"
          },
          "vault_payment_token": {
            "$ref": "#/components/schemas/vault-data-payment-token-interface"
          }
        }
      },
      "vault-data-payment-token-interface": {
        "type": "object",
        "description": "Gateway vault payment token interface.",
        "properties": {
          "entity_id": {
            "type": "integer",
            "description": "Entity ID."
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer ID."
          },
          "public_hash": {
            "type": "string",
            "description": "Public hash"
          },
          "payment_method_code": {
            "type": "string",
            "description": "Payment method code"
          },
          "type": {
            "type": "string",
            "description": "Type"
          },
          "created_at": {
            "type": "string",
            "description": "Token creation timestamp"
          },
          "expires_at": {
            "type": "string",
            "description": "Token expiration timestamp"
          },
          "gateway_token": {
            "type": "string",
            "description": "Gateway token ID"
          },
          "token_details": {
            "type": "string",
            "description": "Token details"
          },
          "is_active": {
            "type": "boolean",
            "description": "Is active."
          },
          "is_visible": {
            "type": "boolean",
            "description": "Is visible."
          },
          "website_id": {
            "type": "integer",
            "description": "website id."
          }
        },
        "required": [
          "public_hash",
          "payment_method_code",
          "type",
          "gateway_token",
          "token_details",
          "is_active",
          "is_visible",
          "website_id"
        ]
      },
      "sales-data-order-status-history-interface": {
        "type": "object",
        "description": "Order status history interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "entity_id": {
            "type": "integer",
            "description": "Order status history ID."
          },
          "entity_name": {
            "type": "string",
            "description": "Entity name."
          },
          "is_customer_notified": {
            "type": "integer",
            "description": "Is-customer-notified flag value."
          },
          "is_visible_on_front": {
            "type": "integer",
            "description": "Is-visible-on-storefront flag value."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "status": {
            "type": "string",
            "description": "Status."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-status-history-extension-interface"
          }
        },
        "required": ["comment", "is_customer_notified", "is_visible_on_front", "parent_id"]
      },
      "sales-data-order-status-history-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderStatusHistoryInterface"
      },
      "sales-data-order-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderInterface",
        "properties": {
          "shipping_assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipping-assignment-interface"
            }
          },
          "payment_additional_info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/payment-data-payment-additional-info-interface"
            }
          },
          "company_order_attributes": {
            "$ref": "#/components/schemas/company-data-company-order-interface"
          },
          "applied_taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tax-data-order-tax-details-applied-tax-interface"
            }
          },
          "item_applied_taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tax-data-order-tax-details-item-interface"
            }
          },
          "converting_from_quote": {
            "type": "boolean"
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tax-data-order-tax-interface"
            }
          },
          "additional_itemized_taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tax-data-order-tax-item-interface"
            }
          },
          "base_customer_balance_amount": {
            "type": "number"
          },
          "customer_balance_amount": {
            "type": "number"
          },
          "base_customer_balance_invoiced": {
            "type": "number"
          },
          "customer_balance_invoiced": {
            "type": "number"
          },
          "base_customer_balance_refunded": {
            "type": "number"
          },
          "customer_balance_refunded": {
            "type": "number"
          },
          "base_customer_balance_total_refunded": {
            "type": "number"
          },
          "customer_balance_total_refunded": {
            "type": "number"
          },
          "gift_cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gift-card-account-data-gift-card-interface"
            }
          },
          "base_gift_cards_amount": {
            "type": "number"
          },
          "gift_cards_amount": {
            "type": "number"
          },
          "base_gift_cards_invoiced": {
            "type": "number"
          },
          "gift_cards_invoiced": {
            "type": "number"
          },
          "base_gift_cards_refunded": {
            "type": "number"
          },
          "gift_cards_refunded": {
            "type": "number"
          },
          "gift_message": {
            "$ref": "#/components/schemas/gift-message-data-message-interface"
          },
          "gw_id": {
            "type": "string"
          },
          "gw_allow_gift_receipt": {
            "type": "string"
          },
          "gw_add_card": {
            "type": "string"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_items_base_price": {
            "type": "string"
          },
          "gw_items_price": {
            "type": "string"
          },
          "gw_card_base_price": {
            "type": "string"
          },
          "gw_card_price": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          },
          "gw_items_base_tax_amount": {
            "type": "string"
          },
          "gw_items_tax_amount": {
            "type": "string"
          },
          "gw_card_base_tax_amount": {
            "type": "string"
          },
          "gw_card_tax_amount": {
            "type": "string"
          },
          "gw_base_price_incl_tax": {
            "type": "string"
          },
          "gw_price_incl_tax": {
            "type": "string"
          },
          "gw_items_base_price_incl_tax": {
            "type": "string"
          },
          "gw_items_price_incl_tax": {
            "type": "string"
          },
          "gw_card_base_price_incl_tax": {
            "type": "string"
          },
          "gw_card_price_incl_tax": {
            "type": "string"
          },
          "gw_base_price_invoiced": {
            "type": "string"
          },
          "gw_price_invoiced": {
            "type": "string"
          },
          "gw_items_base_price_invoiced": {
            "type": "string"
          },
          "gw_items_price_invoiced": {
            "type": "string"
          },
          "gw_card_base_price_invoiced": {
            "type": "string"
          },
          "gw_card_price_invoiced": {
            "type": "string"
          },
          "gw_base_tax_amount_invoiced": {
            "type": "string"
          },
          "gw_tax_amount_invoiced": {
            "type": "string"
          },
          "gw_items_base_tax_invoiced": {
            "type": "string"
          },
          "gw_items_tax_invoiced": {
            "type": "string"
          },
          "gw_card_base_tax_invoiced": {
            "type": "string"
          },
          "gw_card_tax_invoiced": {
            "type": "string"
          },
          "gw_base_price_refunded": {
            "type": "string"
          },
          "gw_price_refunded": {
            "type": "string"
          },
          "gw_items_base_price_refunded": {
            "type": "string"
          },
          "gw_items_price_refunded": {
            "type": "string"
          },
          "gw_card_base_price_refunded": {
            "type": "string"
          },
          "gw_card_price_refunded": {
            "type": "string"
          },
          "gw_base_tax_amount_refunded": {
            "type": "string"
          },
          "gw_tax_amount_refunded": {
            "type": "string"
          },
          "gw_items_base_tax_refunded": {
            "type": "string"
          },
          "gw_items_tax_refunded": {
            "type": "string"
          },
          "gw_card_base_tax_refunded": {
            "type": "string"
          },
          "gw_card_tax_refunded": {
            "type": "string"
          },
          "pickup_location_code": {
            "type": "string"
          },
          "notification_sent": {
            "type": "integer"
          },
          "send_notification": {
            "type": "integer"
          },
          "coupon_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "coupon_discounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reward_points_balance": {
            "type": "integer"
          },
          "reward_currency_amount": {
            "type": "number"
          },
          "base_reward_currency_amount": {
            "type": "number"
          }
        }
      },
      "sales-data-shipping-assignment-interface": {
        "type": "object",
        "description": "Interface ShippingAssignmentInterface",
        "properties": {
          "shipping": {
            "$ref": "#/components/schemas/sales-data-shipping-interface"
          },
          "items": {
            "type": "array",
            "description": "Order items of shipping assignment",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-item-interface"
            }
          },
          "stock_id": {
            "type": "integer",
            "description": "Stock id"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipping-assignment-extension-interface"
          }
        },
        "required": ["shipping", "items"]
      },
      "sales-data-shipping-interface": {
        "type": "object",
        "description": "Interface ShippingInterface",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/sales-data-order-address-interface"
          },
          "method": {
            "type": "string",
            "description": "Shipping method"
          },
          "total": {
            "$ref": "#/components/schemas/sales-data-total-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipping-extension-interface"
          }
        }
      },
      "sales-data-total-interface": {
        "type": "object",
        "description": "Interface TotalInterface",
        "properties": {
          "base_shipping_amount": {
            "type": "number",
            "description": "Base shipping amount."
          },
          "base_shipping_canceled": {
            "type": "number",
            "description": "Base shipping canceled."
          },
          "base_shipping_discount_amount": {
            "type": "number",
            "description": "Base shipping discount amount."
          },
          "base_shipping_discount_tax_compensation_amnt": {
            "type": "number",
            "description": "Base shipping discount tax compensation amount."
          },
          "base_shipping_incl_tax": {
            "type": "number",
            "description": "Base shipping including tax."
          },
          "base_shipping_invoiced": {
            "type": "number",
            "description": "Base shipping invoiced."
          },
          "base_shipping_refunded": {
            "type": "number",
            "description": "Base shipping refunded."
          },
          "base_shipping_tax_amount": {
            "type": "number",
            "description": "Base shipping tax amount."
          },
          "base_shipping_tax_refunded": {
            "type": "number",
            "description": "Base shipping tax refunded."
          },
          "shipping_amount": {
            "type": "number",
            "description": "Shipping amount."
          },
          "shipping_canceled": {
            "type": "number",
            "description": "Shipping canceled amount."
          },
          "shipping_discount_amount": {
            "type": "number",
            "description": "Shipping discount amount."
          },
          "shipping_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Shipping discount tax compensation amount."
          },
          "shipping_incl_tax": {
            "type": "number",
            "description": "Shipping including tax amount."
          },
          "shipping_invoiced": {
            "type": "number",
            "description": "Shipping invoiced amount."
          },
          "shipping_refunded": {
            "type": "number",
            "description": "Shipping refunded amount."
          },
          "shipping_tax_amount": {
            "type": "number",
            "description": "Shipping tax amount."
          },
          "shipping_tax_refunded": {
            "type": "number",
            "description": "Shipping tax refunded amount."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-total-extension-interface"
          }
        }
      },
      "sales-data-total-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\TotalInterface"
      },
      "sales-data-shipping-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShippingInterface"
      },
      "sales-data-shipping-assignment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShippingAssignmentInterface"
      },
      "payment-data-payment-additional-info-interface": {
        "type": "object",
        "description": "Payment additional info interface.",
        "properties": {
          "key": {
            "type": "string",
            "description": "Object key"
          },
          "value": {
            "type": "string",
            "description": "Object value"
          }
        },
        "required": ["key", "value"]
      },
      "company-data-company-order-interface": {
        "type": "object",
        "description": "Order company extension attributes interface. Adds new company attributes to orders.",
        "properties": {
          "order_id": {
            "type": "integer",
            "description": "Order ID."
          },
          "company_id": {
            "type": "integer",
            "description": "Company ID."
          },
          "company_name": {
            "type": "string",
            "description": "Company name."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-company-order-extension-interface"
          }
        }
      },
      "company-data-company-order-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyOrderInterface"
      },
      "tax-data-order-tax-details-applied-tax-interface": {
        "type": "object",
        "description": "Interface OrderTaxDetailsAppliedTaxInterface",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "percent": {
            "type": "number",
            "description": "Tax Percent"
          },
          "amount": {
            "type": "number",
            "description": "Tax amount"
          },
          "base_amount": {
            "type": "number",
            "description": "Tax amount in base currency"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-order-tax-details-applied-tax-extension-interface"
          }
        },
        "required": ["amount", "base_amount"]
      },
      "tax-data-order-tax-details-applied-tax-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxDetailsAppliedTaxInterface",
        "properties": {
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tax-data-applied-tax-rate-interface"
            }
          }
        }
      },
      "tax-data-applied-tax-rate-interface": {
        "type": "object",
        "description": "Applied tax rate interface.",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "percent": {
            "type": "number",
            "description": "Tax Percent"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-applied-tax-rate-extension-interface"
          }
        }
      },
      "tax-data-applied-tax-rate-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\AppliedTaxRateInterface"
      },
      "tax-data-order-tax-details-item-interface": {
        "type": "object",
        "description": "Interface OrderTaxDetailsItemInterface",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type (shipping, product, weee, gift wrapping, etc)"
          },
          "item_id": {
            "type": "integer",
            "description": "Item id if this item is a product"
          },
          "associated_item_id": {
            "type": "integer",
            "description": "Associated item id if this item is associated with another item, null otherwise"
          },
          "applied_taxes": {
            "type": "array",
            "description": "Applied taxes",
            "items": {
              "$ref": "#/components/schemas/tax-data-order-tax-details-applied-tax-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-order-tax-details-item-extension-interface"
          }
        }
      },
      "tax-data-order-tax-details-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxDetailsItemInterface"
      },
      "tax-data-order-tax-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "tax_id": {
            "type": "integer",
            "description": "Tax ID"
          },
          "order_id": {
            "type": "integer",
            "description": "Order ID"
          },
          "code": {
            "type": "string",
            "description": "Code"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "percent": {
            "type": "number",
            "description": "Percent"
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          },
          "base_amount": {
            "type": "number",
            "description": "Tax amount in base currency"
          },
          "base_real_amount": {
            "type": "number",
            "description": "Real tax amount in base currency"
          },
          "priority": {
            "type": "integer",
            "description": "Priority"
          },
          "position": {
            "type": "integer",
            "description": "Position"
          },
          "process": {
            "type": "integer",
            "description": "Process"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-order-tax-extension-interface"
          }
        },
        "required": [
          "percent",
          "amount",
          "base_amount",
          "base_real_amount",
          "priority",
          "position",
          "process"
        ]
      },
      "tax-data-order-tax-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxInterface"
      },
      "gift-card-account-data-gift-card-interface": {
        "type": "object",
        "description": "Gift Card data",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "code": {
            "type": "string",
            "description": "Code"
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          },
          "base_amount": {
            "type": "number",
            "description": "Base Amount"
          }
        },
        "required": ["id", "code", "amount", "base_amount"]
      },
      "sales-data-order-search-result-interface": {
        "type": "object",
        "description": "Order search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-data-order-status-history-search-result-interface": {
        "type": "object",
        "description": "Order status history search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-status-history-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-data-order-item-search-result-interface": {
        "type": "object",
        "description": "Order item search result interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-order-item-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-data-invoice-interface": {
        "type": "object",
        "description": "Invoice interface. An invoice is a record of the receipt of payment for an order.",
        "properties": {
          "base_currency_code": {
            "type": "string",
            "description": "Base currency code."
          },
          "base_discount_amount": {
            "type": "number",
            "description": "Base discount amount."
          },
          "base_grand_total": {
            "type": "number",
            "description": "Base grand total."
          },
          "base_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Base discount tax compensation amount."
          },
          "base_shipping_amount": {
            "type": "number",
            "description": "Base shipping amount."
          },
          "base_shipping_discount_tax_compensation_amnt": {
            "type": "number",
            "description": "Base shipping discount tax compensation amount."
          },
          "base_shipping_incl_tax": {
            "type": "number",
            "description": "Base shipping including tax."
          },
          "base_shipping_tax_amount": {
            "type": "number",
            "description": "Base shipping tax amount."
          },
          "base_subtotal": {
            "type": "number",
            "description": "Base subtotal."
          },
          "base_subtotal_incl_tax": {
            "type": "number",
            "description": "Base subtotal including tax."
          },
          "base_tax_amount": {
            "type": "number",
            "description": "Base tax amount."
          },
          "base_total_refunded": {
            "type": "number",
            "description": "Base total refunded."
          },
          "base_to_global_rate": {
            "type": "number",
            "description": "Base-to-global rate."
          },
          "base_to_order_rate": {
            "type": "number",
            "description": "Base-to-order rate."
          },
          "billing_address_id": {
            "type": "integer",
            "description": "Billing address ID."
          },
          "can_void_flag": {
            "type": "integer",
            "description": "Can void flag value."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "discount_amount": {
            "type": "number",
            "description": "Discount amount."
          },
          "discount_description": {
            "type": "string",
            "description": "Discount description."
          },
          "email_sent": {
            "type": "integer",
            "description": "Email-sent flag value."
          },
          "entity_id": {
            "type": "integer",
            "description": "Invoice ID."
          },
          "global_currency_code": {
            "type": "string",
            "description": "Global currency code."
          },
          "grand_total": {
            "type": "number",
            "description": "Grand total."
          },
          "discount_tax_compensation_amount": {
            "type": "number",
            "description": "Discount tax compensation amount."
          },
          "increment_id": {
            "type": "string",
            "description": "Increment ID."
          },
          "is_used_for_refund": {
            "type": "integer",
            "description": "Is-used-for-refund flag value."
          },
          "order_currency_code": {
            "type": "string",
            "description": "Order currency code."
          },
          "order_id": {
            "type": "integer",
            "description": "Order ID."
          },
          "shipping_address_id": {
            "type": "integer",
            "description": "Shipping address ID."
          },
          "shipping_amount": {
            "type": "number",
            "description": "Shipping amount."
          },
          "shipping_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Shipping discount tax compensation amount."
          },
          "shipping_incl_tax": {
            "type": "number",
            "description": "Shipping including tax."
          },
          "shipping_tax_amount": {
            "type": "number",
            "description": "Shipping tax amount."
          },
          "state": {
            "type": "integer",
            "description": "State."
          },
          "store_currency_code": {
            "type": "string",
            "description": "Store currency code."
          },
          "store_id": {
            "type": "integer",
            "description": "Store ID."
          },
          "store_to_base_rate": {
            "type": "number",
            "description": "Store-to-base rate."
          },
          "store_to_order_rate": {
            "type": "number",
            "description": "Store-to-order rate."
          },
          "subtotal": {
            "type": "number",
            "description": "Subtotal."
          },
          "subtotal_incl_tax": {
            "type": "number",
            "description": "Subtotal including tax."
          },
          "tax_amount": {
            "type": "number",
            "description": "Tax amount."
          },
          "total_qty": {
            "type": "number",
            "description": "Total quantity."
          },
          "transaction_id": {
            "type": "string",
            "description": "Transaction ID."
          },
          "updated_at": {
            "type": "string",
            "description": "Updated-at timestamp."
          },
          "items": {
            "type": "array",
            "description": "Array of invoice items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-item-interface"
            }
          },
          "comments": {
            "type": "array",
            "description": "Array of any invoice comments. Otherwise, null.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-extension-interface"
          }
        },
        "required": ["order_id", "total_qty", "items"]
      },
      "sales-data-invoice-item-interface": {
        "type": "object",
        "description": "Invoice item interface. An invoice is a record of the receipt of payment for an order. An invoice item is a purchased item in an invoice.",
        "properties": {
          "additional_data": {
            "type": "string",
            "description": "Additional data."
          },
          "base_cost": {
            "type": "number",
            "description": "Base cost."
          },
          "base_discount_amount": {
            "type": "number",
            "description": "Base discount amount."
          },
          "base_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Base discount tax compensation amount."
          },
          "base_price": {
            "type": "number",
            "description": "Base price."
          },
          "base_price_incl_tax": {
            "type": "number",
            "description": "Base price including tax."
          },
          "base_row_total": {
            "type": "number",
            "description": "Base row total."
          },
          "base_row_total_incl_tax": {
            "type": "number",
            "description": "Base row total including tax."
          },
          "base_tax_amount": {
            "type": "number",
            "description": "Base tax amount."
          },
          "description": {
            "type": "string",
            "description": "Description."
          },
          "discount_amount": {
            "type": "number",
            "description": "Discount amount."
          },
          "entity_id": {
            "type": "integer",
            "description": "Invoice item ID."
          },
          "discount_tax_compensation_amount": {
            "type": "number",
            "description": "Discount tax compensation amount."
          },
          "name": {
            "type": "string",
            "description": "Name."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "price": {
            "type": "number",
            "description": "Price."
          },
          "price_incl_tax": {
            "type": "number",
            "description": "Price including tax."
          },
          "product_id": {
            "type": "integer",
            "description": "Product ID."
          },
          "row_total": {
            "type": "number",
            "description": "Row total."
          },
          "row_total_incl_tax": {
            "type": "number",
            "description": "Row total including tax."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "tax_amount": {
            "type": "number",
            "description": "Tax amount."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-item-extension-interface"
          },
          "order_item_id": {
            "type": "integer",
            "description": "Order item ID."
          },
          "qty": {
            "type": "number",
            "description": "Quantity."
          }
        },
        "required": ["sku", "order_item_id", "qty"]
      },
      "sales-data-invoice-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceItemInterface"
      },
      "sales-data-invoice-comment-interface": {
        "type": "object",
        "description": "Invoice comment interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history.",
        "properties": {
          "is_customer_notified": {
            "type": "integer",
            "description": "Is-customer-notified flag value."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-comment-extension-interface"
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "is_visible_on_front": {
            "type": "integer",
            "description": "Is-visible-on-storefront flag value."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "entity_id": {
            "type": "integer",
            "description": "Invoice ID."
          }
        },
        "required": ["is_customer_notified", "parent_id", "comment", "is_visible_on_front"]
      },
      "sales-data-invoice-comment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCommentInterface"
      },
      "sales-data-invoice-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceInterface",
        "properties": {
          "base_customer_balance_amount": {
            "type": "number"
          },
          "customer_balance_amount": {
            "type": "number"
          },
          "base_gift_cards_amount": {
            "type": "number"
          },
          "gift_cards_amount": {
            "type": "number"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_items_base_price": {
            "type": "string"
          },
          "gw_items_price": {
            "type": "string"
          },
          "gw_card_base_price": {
            "type": "string"
          },
          "gw_card_price": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          },
          "gw_items_base_tax_amount": {
            "type": "string"
          },
          "gw_items_tax_amount": {
            "type": "string"
          },
          "gw_card_base_tax_amount": {
            "type": "string"
          },
          "gw_card_tax_amount": {
            "type": "string"
          }
        }
      },
      "sales-data-invoice-search-result-interface": {
        "type": "object",
        "description": "Invoice search result interface. An invoice is a record of the receipt of payment for an order.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-data-invoice-comment-search-result-interface": {
        "type": "object",
        "description": "Invoice comment search result interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-data-creditmemo-item-creation-interface": {
        "type": "object",
        "description": "Interface CreditmemoItemCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-extension-interface"
          },
          "order_item_id": {
            "type": "integer",
            "description": "Order item ID."
          },
          "qty": {
            "type": "number",
            "description": "Quantity."
          }
        },
        "required": ["order_item_id", "qty"]
      },
      "sales-data-creditmemo-item-creation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoItemCreationInterface"
      },
      "sales-data-creditmemo-comment-creation-interface": {
        "type": "object",
        "description": "Interface CreditmemoCommentCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-extension-interface"
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "is_visible_on_front": {
            "type": "integer",
            "description": "Is-visible-on-storefront flag value."
          }
        },
        "required": ["comment", "is_visible_on_front"]
      },
      "sales-data-creditmemo-comment-creation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoCommentCreationInterface"
      },
      "sales-data-creditmemo-creation-arguments-interface": {
        "type": "object",
        "description": "Interface CreditmemoCreationArgumentsInterface",
        "properties": {
          "shipping_amount": {
            "type": "number",
            "description": "Credit memo shipping amount."
          },
          "adjustment_positive": {
            "type": "number",
            "description": "Credit memo positive adjustment."
          },
          "adjustment_negative": {
            "type": "number",
            "description": "Credit memo negative adjustment."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-extension-interface"
          }
        }
      },
      "sales-data-creditmemo-creation-arguments-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoCreationArgumentsInterface",
        "properties": {
          "return_to_stock_items": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "sales-data-creditmemo-comment-search-result-interface": {
        "type": "object",
        "description": "Credit memo comment search result interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo usually includes comments that detail why the credit memo amount was credited to the customer.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-data-creditmemo-comment-interface": {
        "type": "object",
        "description": "Credit memo comment interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo usually includes comments that detail why the credit memo amount was credited to the customer.",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "entity_id": {
            "type": "integer",
            "description": "Credit memo ID."
          },
          "is_customer_notified": {
            "type": "integer",
            "description": "Is-customer-notified flag value."
          },
          "is_visible_on_front": {
            "type": "integer",
            "description": "Is-visible-on-storefront flag value."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-comment-extension-interface"
          }
        },
        "required": ["comment", "is_customer_notified", "is_visible_on_front", "parent_id"]
      },
      "sales-data-creditmemo-comment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoCommentInterface"
      },
      "sales-data-creditmemo-interface": {
        "type": "object",
        "description": "Credit memo interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases.",
        "properties": {
          "adjustment": {
            "type": "number",
            "description": "Credit memo adjustment."
          },
          "adjustment_negative": {
            "type": "number",
            "description": "Credit memo negative adjustment."
          },
          "adjustment_positive": {
            "type": "number",
            "description": "Credit memo positive adjustment."
          },
          "base_adjustment": {
            "type": "number",
            "description": "Credit memo base adjustment."
          },
          "base_adjustment_negative": {
            "type": "number",
            "description": "Credit memo negative base adjustment."
          },
          "base_adjustment_positive": {
            "type": "number",
            "description": "Credit memo positive base adjustment."
          },
          "base_currency_code": {
            "type": "string",
            "description": "Credit memo base currency code."
          },
          "base_discount_amount": {
            "type": "number",
            "description": "Credit memo base discount amount."
          },
          "base_grand_total": {
            "type": "number",
            "description": "Credit memo base grand total."
          },
          "base_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Credit memo base discount tax compensation amount."
          },
          "base_shipping_amount": {
            "type": "number",
            "description": "Credit memo base shipping amount."
          },
          "base_shipping_discount_tax_compensation_amnt": {
            "type": "number",
            "description": "Credit memo base shipping discount tax compensation amount."
          },
          "base_shipping_incl_tax": {
            "type": "number",
            "description": "Credit memo base shipping including tax."
          },
          "base_shipping_tax_amount": {
            "type": "number",
            "description": "Credit memo base shipping tax amount."
          },
          "base_subtotal": {
            "type": "number",
            "description": "Credit memo base subtotal."
          },
          "base_subtotal_incl_tax": {
            "type": "number",
            "description": "Credit memo base subtotal including tax."
          },
          "base_tax_amount": {
            "type": "number",
            "description": "Credit memo base tax amount."
          },
          "base_to_global_rate": {
            "type": "number",
            "description": "Credit memo base-to-global rate."
          },
          "base_to_order_rate": {
            "type": "number",
            "description": "Credit memo base-to-order rate."
          },
          "billing_address_id": {
            "type": "integer",
            "description": "Credit memo billing address ID."
          },
          "created_at": {
            "type": "string",
            "description": "Credit memo created-at timestamp."
          },
          "creditmemo_status": {
            "type": "integer",
            "description": "Credit memo status."
          },
          "discount_amount": {
            "type": "number",
            "description": "Credit memo discount amount."
          },
          "discount_description": {
            "type": "string",
            "description": "Credit memo discount description."
          },
          "email_sent": {
            "type": "integer",
            "description": "Credit memo email sent flag value."
          },
          "entity_id": {
            "type": "integer",
            "description": "Credit memo ID."
          },
          "global_currency_code": {
            "type": "string",
            "description": "Credit memo global currency code."
          },
          "grand_total": {
            "type": "number",
            "description": "Credit memo grand total."
          },
          "discount_tax_compensation_amount": {
            "type": "number",
            "description": "Credit memo discount tax compensation amount."
          },
          "increment_id": {
            "type": "string",
            "description": "Credit memo increment ID."
          },
          "invoice_id": {
            "type": "integer",
            "description": "Credit memo invoice ID."
          },
          "order_currency_code": {
            "type": "string",
            "description": "Credit memo order currency code."
          },
          "order_id": {
            "type": "integer",
            "description": "Credit memo order ID."
          },
          "shipping_address_id": {
            "type": "integer",
            "description": "Credit memo shipping address ID."
          },
          "shipping_amount": {
            "type": "number",
            "description": "Credit memo shipping amount."
          },
          "shipping_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Credit memo shipping discount tax compensation amount."
          },
          "shipping_incl_tax": {
            "type": "number",
            "description": "Credit memo shipping including tax."
          },
          "shipping_tax_amount": {
            "type": "number",
            "description": "Credit memo shipping tax amount."
          },
          "state": {
            "type": "integer",
            "description": "Credit memo state."
          },
          "store_currency_code": {
            "type": "string",
            "description": "Credit memo store currency code."
          },
          "store_id": {
            "type": "integer",
            "description": "Credit memo store ID."
          },
          "store_to_base_rate": {
            "type": "number",
            "description": "Credit memo store-to-base rate."
          },
          "store_to_order_rate": {
            "type": "number",
            "description": "Credit memo store-to-order rate."
          },
          "subtotal": {
            "type": "number",
            "description": "Credit memo subtotal."
          },
          "subtotal_incl_tax": {
            "type": "number",
            "description": "Credit memo subtotal including tax."
          },
          "tax_amount": {
            "type": "number",
            "description": "Credit memo tax amount."
          },
          "transaction_id": {
            "type": "string",
            "description": "Credit memo transaction ID."
          },
          "updated_at": {
            "type": "string",
            "description": "Credit memo updated-at timestamp."
          },
          "items": {
            "type": "array",
            "description": "Array of credit memo items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-creditmemo-item-interface"
            }
          },
          "comments": {
            "type": "array",
            "description": "Array of any credit memo comments. Otherwise, null.",
            "items": {
              "$ref": "#/components/schemas/sales-data-creditmemo-comment-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-extension-interface"
          }
        },
        "required": ["order_id", "items"]
      },
      "sales-data-creditmemo-item-interface": {
        "type": "object",
        "description": "Credit memo item interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo item is an invoiced item for which a merchant creates a credit memo.",
        "properties": {
          "additional_data": {
            "type": "string",
            "description": "Additional data."
          },
          "base_cost": {
            "type": "number",
            "description": "The base cost for a credit memo item."
          },
          "base_discount_amount": {
            "type": "number",
            "description": "The base discount amount for a credit memo item."
          },
          "base_discount_tax_compensation_amount": {
            "type": "number",
            "description": "The base discount tax compensation amount for a credit memo item."
          },
          "base_price": {
            "type": "number",
            "description": "The base price for a credit memo item."
          },
          "base_price_incl_tax": {
            "type": "number",
            "description": "Base price including tax."
          },
          "base_row_total": {
            "type": "number",
            "description": "Base row total."
          },
          "base_row_total_incl_tax": {
            "type": "number",
            "description": "Base row total including tax."
          },
          "base_tax_amount": {
            "type": "number",
            "description": "Base tax amount."
          },
          "base_weee_tax_applied_amount": {
            "type": "number",
            "description": "Base WEEE tax applied amount."
          },
          "base_weee_tax_applied_row_amnt": {
            "type": "number",
            "description": "Base WEEE tax applied row amount."
          },
          "base_weee_tax_disposition": {
            "type": "number",
            "description": "Base WEEE tax disposition."
          },
          "base_weee_tax_row_disposition": {
            "type": "number",
            "description": "Base WEEE tax row disposition."
          },
          "description": {
            "type": "string",
            "description": "Description."
          },
          "discount_amount": {
            "type": "number",
            "description": "Discount amount."
          },
          "entity_id": {
            "type": "integer",
            "description": "Credit memo item ID."
          },
          "discount_tax_compensation_amount": {
            "type": "number",
            "description": "Discount tax compensation amount."
          },
          "name": {
            "type": "string",
            "description": "Name."
          },
          "order_item_id": {
            "type": "integer",
            "description": "Order item ID."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "price": {
            "type": "number",
            "description": "Price."
          },
          "price_incl_tax": {
            "type": "number",
            "description": "Price including tax."
          },
          "product_id": {
            "type": "integer",
            "description": "Product ID."
          },
          "qty": {
            "type": "number",
            "description": "Quantity."
          },
          "row_total": {
            "type": "number",
            "description": "Row total."
          },
          "row_total_incl_tax": {
            "type": "number",
            "description": "Row total including tax."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "tax_amount": {
            "type": "number",
            "description": "Tax amount."
          },
          "weee_tax_applied": {
            "type": "string",
            "description": "WEEE tax applied."
          },
          "weee_tax_applied_amount": {
            "type": "number",
            "description": "WEEE tax applied amount."
          },
          "weee_tax_applied_row_amount": {
            "type": "number",
            "description": "WEEE tax applied row amount."
          },
          "weee_tax_disposition": {
            "type": "number",
            "description": "WEEE tax disposition."
          },
          "weee_tax_row_disposition": {
            "type": "number",
            "description": "WEEE tax row disposition."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-creditmemo-item-extension-interface"
          }
        },
        "required": ["base_cost", "base_price", "entity_id", "order_item_id", "qty"]
      },
      "sales-data-creditmemo-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoItemInterface"
      },
      "sales-data-creditmemo-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoInterface",
        "properties": {
          "base_customer_balance_amount": {
            "type": "number"
          },
          "customer_balance_amount": {
            "type": "number"
          },
          "base_gift_cards_amount": {
            "type": "number"
          },
          "gift_cards_amount": {
            "type": "number"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_items_base_price": {
            "type": "string"
          },
          "gw_items_price": {
            "type": "string"
          },
          "gw_card_base_price": {
            "type": "string"
          },
          "gw_card_price": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          },
          "gw_items_base_tax_amount": {
            "type": "string"
          },
          "gw_items_tax_amount": {
            "type": "string"
          },
          "gw_card_base_tax_amount": {
            "type": "string"
          },
          "gw_card_tax_amount": {
            "type": "string"
          }
        }
      },
      "sales-data-creditmemo-search-result-interface": {
        "type": "object",
        "description": "Credit memo search result interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-creditmemo-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-data-shipment-interface": {
        "type": "object",
        "description": "Shipment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
        "properties": {
          "billing_address_id": {
            "type": "integer",
            "description": "Billing address ID."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer ID."
          },
          "email_sent": {
            "type": "integer",
            "description": "Email-sent flag value."
          },
          "entity_id": {
            "type": "integer",
            "description": "Shipment ID."
          },
          "increment_id": {
            "type": "string",
            "description": "Increment ID."
          },
          "order_id": {
            "type": "integer",
            "description": "Order ID."
          },
          "packages": {
            "type": "array",
            "description": "Array of packages, if any. Otherwise, null.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-package-interface"
            }
          },
          "shipment_status": {
            "type": "integer",
            "description": "Shipment status."
          },
          "shipping_address_id": {
            "type": "integer",
            "description": "Shipping address ID."
          },
          "shipping_label": {
            "type": "string",
            "description": "Shipping label."
          },
          "store_id": {
            "type": "integer",
            "description": "Store ID."
          },
          "total_qty": {
            "type": "number",
            "description": "Total quantity."
          },
          "total_weight": {
            "type": "number",
            "description": "Total weight."
          },
          "updated_at": {
            "type": "string",
            "description": "Updated-at timestamp."
          },
          "items": {
            "type": "array",
            "description": "Array of items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-item-interface"
            }
          },
          "tracks": {
            "type": "array",
            "description": "Array of tracks.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-track-interface"
            }
          },
          "comments": {
            "type": "array",
            "description": "Array of comments.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-extension-interface"
          }
        },
        "required": ["order_id", "items", "tracks", "comments"]
      },
      "sales-data-shipment-package-interface": {
        "type": "object",
        "description": "Shipment package interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-package-extension-interface"
          }
        }
      },
      "sales-data-shipment-package-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentPackageInterface"
      },
      "sales-data-shipment-item-interface": {
        "type": "object",
        "description": "Shipment item interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A product is an item in a shipment.",
        "properties": {
          "additional_data": {
            "type": "string",
            "description": "Additional data."
          },
          "description": {
            "type": "string",
            "description": "Description."
          },
          "entity_id": {
            "type": "integer",
            "description": "Shipment item ID."
          },
          "name": {
            "type": "string",
            "description": "Name."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "price": {
            "type": "number",
            "description": "Price."
          },
          "product_id": {
            "type": "integer",
            "description": "Product ID."
          },
          "row_total": {
            "type": "number",
            "description": "Row total."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "weight": {
            "type": "number",
            "description": "Weight."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-item-extension-interface"
          },
          "order_item_id": {
            "type": "integer",
            "description": "Order item ID."
          },
          "qty": {
            "type": "number",
            "description": "Quantity."
          }
        },
        "required": ["order_item_id", "qty"]
      },
      "sales-data-shipment-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentItemInterface"
      },
      "sales-data-shipment-track-interface": {
        "type": "object",
        "description": "Shipment track interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. Merchants and customers can track shipments.",
        "properties": {
          "order_id": {
            "type": "integer",
            "description": "The order_id for the shipment package."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "entity_id": {
            "type": "integer",
            "description": "Shipment package ID."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "updated_at": {
            "type": "string",
            "description": "Updated-at timestamp."
          },
          "weight": {
            "type": "number",
            "description": "Weight."
          },
          "qty": {
            "type": "number",
            "description": "Quantity."
          },
          "description": {
            "type": "string",
            "description": "Description."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-track-extension-interface"
          },
          "track_number": {
            "type": "string",
            "description": "Track number."
          },
          "title": {
            "type": "string",
            "description": "Title."
          },
          "carrier_code": {
            "type": "string",
            "description": "Carrier code."
          }
        },
        "required": [
          "order_id",
          "parent_id",
          "weight",
          "qty",
          "description",
          "track_number",
          "title",
          "carrier_code"
        ]
      },
      "sales-data-shipment-track-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentTrackInterface"
      },
      "sales-data-shipment-comment-interface": {
        "type": "object",
        "description": "Shipment comment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A shipment document can contain comments.",
        "properties": {
          "is_customer_notified": {
            "type": "integer",
            "description": "Is-customer-notified flag value."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-comment-extension-interface"
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "is_visible_on_front": {
            "type": "integer",
            "description": "Is-visible-on-storefront flag value."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "entity_id": {
            "type": "integer",
            "description": "Invoice ID."
          }
        },
        "required": ["is_customer_notified", "parent_id", "comment", "is_visible_on_front"]
      },
      "sales-data-shipment-comment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentCommentInterface"
      },
      "sales-data-shipment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentInterface",
        "properties": {
          "source_code": {
            "type": "string"
          }
        }
      },
      "sales-data-shipment-search-result-interface": {
        "type": "object",
        "description": "Shipment search result interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-data-shipment-comment-search-result-interface": {
        "type": "object",
        "description": "Shipment comment search result interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A shipment document can contain comments.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-shipment-comment-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-data-shipment-item-creation-interface": {
        "type": "object",
        "description": "Input argument for shipment item creation Interface ShipmentItemCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-item-creation-extension-interface"
          },
          "order_item_id": {
            "type": "integer",
            "description": "Order item ID."
          },
          "qty": {
            "type": "number",
            "description": "Quantity."
          }
        },
        "required": ["order_item_id", "qty"]
      },
      "sales-data-shipment-item-creation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentItemCreationInterface"
      },
      "sales-data-shipment-comment-creation-interface": {
        "type": "object",
        "description": "Interface ShipmentCommentCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-comment-creation-extension-interface"
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "is_visible_on_front": {
            "type": "integer",
            "description": "Is-visible-on-storefront flag value."
          }
        },
        "required": ["comment", "is_visible_on_front"]
      },
      "sales-data-shipment-comment-creation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentCommentCreationInterface"
      },
      "sales-data-shipment-track-creation-interface": {
        "type": "object",
        "description": "Shipment Track Creation interface.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-track-creation-extension-interface"
          },
          "track_number": {
            "type": "string",
            "description": "Track number."
          },
          "title": {
            "type": "string",
            "description": "Title."
          },
          "carrier_code": {
            "type": "string",
            "description": "Carrier code."
          }
        },
        "required": ["track_number", "title", "carrier_code"]
      },
      "sales-data-shipment-track-creation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentTrackCreationInterface"
      },
      "sales-data-shipment-package-creation-interface": {
        "type": "object",
        "description": "Shipment package interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-package-creation-extension-interface"
          }
        }
      },
      "sales-data-shipment-package-creation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentPackageCreationInterface"
      },
      "sales-data-shipment-creation-arguments-interface": {
        "type": "object",
        "description": "Interface for creation arguments for Shipment.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-shipment-creation-arguments-extension-interface"
          }
        }
      },
      "sales-data-shipment-creation-arguments-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentCreationArgumentsInterface",
        "properties": {
          "source_code": {
            "type": "string"
          }
        }
      },
      "sales-data-transaction-interface": {
        "type": "object",
        "description": "Transaction interface. A transaction is an interaction between a merchant and a customer such as a purchase, a credit, a refund, and so on.",
        "properties": {
          "transaction_id": {
            "type": "integer",
            "description": "Transaction ID."
          },
          "parent_id": {
            "type": "integer",
            "description": "The parent ID for the transaction. Otherwise, null."
          },
          "order_id": {
            "type": "integer",
            "description": "Order ID."
          },
          "payment_id": {
            "type": "integer",
            "description": "Payment ID."
          },
          "txn_id": {
            "type": "string",
            "description": "Transaction business ID."
          },
          "parent_txn_id": {
            "type": "string",
            "description": "Parent transaction business ID."
          },
          "txn_type": {
            "type": "string",
            "description": "Transaction type."
          },
          "is_closed": {
            "type": "integer",
            "description": "Is-closed flag value."
          },
          "additional_information": {
            "type": "array",
            "description": "Array of additional information. Otherwise, null.",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "child_transactions": {
            "type": "array",
            "description": "Array of child transactions.",
            "items": {
              "$ref": "#/components/schemas/sales-data-transaction-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-transaction-extension-interface"
          }
        },
        "required": [
          "transaction_id",
          "order_id",
          "payment_id",
          "txn_id",
          "parent_txn_id",
          "txn_type",
          "is_closed",
          "created_at",
          "child_transactions"
        ]
      },
      "sales-data-transaction-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\TransactionInterface"
      },
      "sales-data-transaction-search-result-interface": {
        "type": "object",
        "description": "Transaction search result interface. A transaction is an interaction between a merchant and a customer such as a purchase, a credit, a refund, and so on.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-transaction-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-data-invoice-item-creation-interface": {
        "type": "object",
        "description": "Input argument for invoice creation Interface InvoiceItemCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-item-creation-extension-interface"
          },
          "order_item_id": {
            "type": "integer",
            "description": "Order item ID."
          },
          "qty": {
            "type": "number",
            "description": "Quantity."
          }
        },
        "required": ["order_item_id", "qty"]
      },
      "sales-data-invoice-item-creation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceItemCreationInterface"
      },
      "sales-data-invoice-comment-creation-interface": {
        "type": "object",
        "description": "Interface InvoiceCommentCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-comment-creation-extension-interface"
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "is_visible_on_front": {
            "type": "integer",
            "description": "Is-visible-on-storefront flag value."
          }
        },
        "required": ["comment", "is_visible_on_front"]
      },
      "sales-data-invoice-comment-creation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCommentCreationInterface"
      },
      "sales-data-invoice-creation-arguments-interface": {
        "type": "object",
        "description": "Interface for creation arguments for Invoice.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-creation-arguments-extension-interface"
          }
        }
      },
      "sales-data-invoice-creation-arguments-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCreationArgumentsInterface"
      },
      "sales-rule-data-rule-interface": {
        "type": "object",
        "description": "Interface RuleInterface",
        "properties": {
          "rule_id": {
            "type": "integer",
            "description": "Rule id"
          },
          "name": {
            "type": "string",
            "description": "Rule name"
          },
          "store_labels": {
            "type": "array",
            "description": "Display label",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-rule-label-interface"
            }
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "website_ids": {
            "type": "array",
            "description": "A list of websites the rule applies to",
            "items": {
              "type": "integer"
            }
          },
          "customer_group_ids": {
            "type": "array",
            "description": "Ids of customer groups that the rule applies to",
            "items": {
              "type": "integer"
            }
          },
          "from_date": {
            "type": "string",
            "description": "The start date when the coupon is active"
          },
          "to_date": {
            "type": "string",
            "description": "The end date when the coupon is active"
          },
          "uses_per_customer": {
            "type": "integer",
            "description": "Number of uses per customer"
          },
          "is_active": {
            "type": "boolean",
            "description": "The coupon is active"
          },
          "condition": {
            "$ref": "#/components/schemas/sales-rule-data-condition-interface"
          },
          "action_condition": {
            "$ref": "#/components/schemas/sales-rule-data-condition-interface"
          },
          "stop_rules_processing": {
            "type": "boolean",
            "description": "To stop rule processing"
          },
          "is_advanced": {
            "type": "boolean",
            "description": "Is this field needed"
          },
          "product_ids": {
            "type": "array",
            "description": "Product ids",
            "items": {
              "type": "integer"
            }
          },
          "sort_order": {
            "type": "integer",
            "description": "Sort order"
          },
          "simple_action": {
            "type": "string",
            "description": "Simple action of the rule"
          },
          "discount_amount": {
            "type": "number",
            "description": "Discount amount"
          },
          "discount_qty": {
            "type": "number",
            "description": "Maximum qty discount is applied"
          },
          "discount_step": {
            "type": "integer",
            "description": "Discount step"
          },
          "apply_to_shipping": {
            "type": "boolean",
            "description": "The rule applies to shipping"
          },
          "times_used": {
            "type": "integer",
            "description": "How many times the rule has been used"
          },
          "is_rss": {
            "type": "boolean",
            "description": "Whether the rule is in RSS"
          },
          "coupon_type": {
            "type": "string",
            "description": "Coupon type"
          },
          "use_auto_generation": {
            "type": "boolean",
            "description": "To auto generate coupon"
          },
          "uses_per_coupon": {
            "type": "integer",
            "description": "Limit of uses per coupon"
          },
          "simple_free_shipping": {
            "type": "string",
            "description": "To grant free shipping"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-rule-data-rule-extension-interface"
          }
        },
        "required": [
          "website_ids",
          "customer_group_ids",
          "uses_per_customer",
          "is_active",
          "stop_rules_processing",
          "is_advanced",
          "sort_order",
          "discount_amount",
          "discount_step",
          "apply_to_shipping",
          "times_used",
          "is_rss",
          "coupon_type",
          "use_auto_generation",
          "uses_per_coupon"
        ]
      },
      "sales-rule-data-rule-label-interface": {
        "type": "object",
        "description": "Interface RuleLabelInterface",
        "properties": {
          "store_id": {
            "type": "integer",
            "description": "StoreId"
          },
          "store_label": {
            "type": "string",
            "description": "The label for the store"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-rule-data-rule-label-extension-interface"
          }
        },
        "required": ["store_id", "store_label"]
      },
      "sales-rule-data-rule-label-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\RuleLabelInterface"
      },
      "sales-rule-data-condition-interface": {
        "type": "object",
        "description": "Interface ConditionInterface",
        "properties": {
          "condition_type": {
            "type": "string",
            "description": "Condition type"
          },
          "conditions": {
            "type": "array",
            "description": "List of conditions",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-condition-interface"
            }
          },
          "aggregator_type": {
            "type": "string",
            "description": "The aggregator type"
          },
          "operator": {
            "type": "string",
            "description": "The operator of the condition"
          },
          "attribute_name": {
            "type": "string",
            "description": "The attribute name of the condition"
          },
          "value": {
            "type": "string",
            "description": "The value of the condition"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-rule-data-condition-extension-interface"
          }
        },
        "required": ["condition_type", "operator", "value"]
      },
      "sales-rule-data-condition-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\ConditionInterface"
      },
      "sales-rule-data-rule-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\RuleInterface",
        "properties": {
          "reward_points_delta": {
            "type": "integer"
          }
        }
      },
      "sales-rule-data-rule-search-result-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "description": "Rules.",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-rule-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-rule-data-coupon-interface": {
        "type": "object",
        "description": "Interface CouponInterface",
        "properties": {
          "coupon_id": {
            "type": "integer",
            "description": "Coupon id"
          },
          "rule_id": {
            "type": "integer",
            "description": "The id of the rule associated with the coupon"
          },
          "code": {
            "type": "string",
            "description": "Coupon code"
          },
          "usage_limit": {
            "type": "integer",
            "description": "Usage limit"
          },
          "usage_per_customer": {
            "type": "integer",
            "description": "Usage limit per customer"
          },
          "times_used": {
            "type": "integer",
            "description": "The number of times the coupon has been used"
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date"
          },
          "is_primary": {
            "type": "boolean",
            "description": "The coupon is primary coupon for the rule that it's associated with"
          },
          "created_at": {
            "type": "string",
            "description": "When the coupon is created"
          },
          "type": {
            "type": "integer",
            "description": "Of coupon"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-rule-data-coupon-extension-interface"
          }
        },
        "required": ["rule_id", "times_used", "is_primary"]
      },
      "sales-rule-data-coupon-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponInterface"
      },
      "sales-rule-data-coupon-search-result-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "description": "Rules.",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-coupon-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "sales-rule-data-coupon-generation-spec-interface": {
        "type": "object",
        "description": "CouponGenerationSpecInterface",
        "properties": {
          "rule_id": {
            "type": "integer",
            "description": "The id of the rule associated with the coupon"
          },
          "format": {
            "type": "string",
            "description": "Format of generated coupon code"
          },
          "quantity": {
            "type": "integer",
            "description": "Of coupons to generate"
          },
          "length": {
            "type": "integer",
            "description": "Length of coupon code"
          },
          "prefix": {
            "type": "string",
            "description": "The prefix"
          },
          "suffix": {
            "type": "string",
            "description": "The suffix"
          },
          "delimiter_at_every": {
            "type": "integer",
            "description": "The spacing where the delimiter should exist"
          },
          "delimiter": {
            "type": "string",
            "description": "The delimiter"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-rule-data-coupon-generation-spec-extension-interface"
          }
        },
        "required": ["rule_id", "format", "quantity", "length"]
      },
      "sales-rule-data-coupon-generation-spec-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponGenerationSpecInterface"
      },
      "sales-rule-data-coupon-mass-delete-result-interface": {
        "type": "object",
        "description": "Coupon mass delete results interface.",
        "properties": {
          "failed_items": {
            "type": "array",
            "description": "List of failed items.",
            "items": {
              "type": "string"
            }
          },
          "missing_items": {
            "type": "array",
            "description": "List of missing items.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["failed_items", "missing_items"]
      },
      "bundle-data-option-type-interface": {
        "type": "object",
        "description": "Interface OptionTypeInterface",
        "properties": {
          "label": {
            "type": "string",
            "description": "Type label"
          },
          "code": {
            "type": "string",
            "description": "Type code"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/bundle-data-option-type-extension-interface"
          }
        },
        "required": ["label", "code"]
      },
      "bundle-data-option-type-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionTypeInterface"
      },
      "catalog-inventory-data-stock-item-collection-interface": {
        "type": "object",
        "description": "Interface StockItemCollectionInterface",
        "properties": {
          "items": {
            "type": "array",
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/catalog-inventory-stock-item-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "catalog-inventory-stock-item-criteria-interface": {
        "type": "object",
        "description": "Interface StockItemCriteriaInterface",
        "properties": {
          "mapper_interface_name": {
            "type": "string",
            "description": "Associated Mapper Interface name"
          },
          "criteria_list": {
            "type": "array",
            "description": "Criteria objects added to current Composite Criteria",
            "items": {
              "$ref": "#/components/schemas/framework-criteria-interface"
            }
          },
          "filters": {
            "type": "array",
            "description": "List of filters",
            "items": {
              "type": "string"
            }
          },
          "orders": {
            "type": "array",
            "description": "Ordering criteria",
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "array",
            "description": "Limit",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["mapper_interface_name", "criteria_list", "filters", "orders", "limit"]
      },
      "framework-criteria-interface": {
        "type": "object",
        "description": "Interface CriteriaInterface",
        "properties": {
          "mapper_interface_name": {
            "type": "string",
            "description": "Associated Mapper Interface name"
          },
          "criteria_list": {
            "type": "array",
            "description": "Criteria objects added to current Composite Criteria",
            "items": {
              "$ref": "#/components/schemas/framework-criteria-interface"
            }
          },
          "filters": {
            "type": "array",
            "description": "List of filters",
            "items": {
              "type": "string"
            }
          },
          "orders": {
            "type": "array",
            "description": "Ordering criteria",
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "array",
            "description": "Limit",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["mapper_interface_name", "criteria_list", "filters", "orders", "limit"]
      },
      "catalog-inventory-data-stock-status-interface": {
        "type": "object",
        "description": "Interface StockStatusInterface",
        "properties": {
          "product_id": {
            "type": "integer"
          },
          "stock_id": {
            "type": "integer"
          },
          "qty": {
            "type": "integer"
          },
          "stock_status": {
            "type": "integer"
          },
          "stock_item": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-status-extension-interface"
          }
        },
        "required": ["product_id", "stock_id", "qty", "stock_status", "stock_item"]
      },
      "catalog-inventory-data-stock-status-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockStatusInterface"
      },
      "requisition-list-data-requisition-list-interface": {
        "type": "object",
        "description": "Interface RequisitionListInterface",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Requisition List ID"
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer ID"
          },
          "name": {
            "type": "string",
            "description": "Requisition List Name"
          },
          "updated_at": {
            "type": "string",
            "description": "Requisition List Update Time"
          },
          "description": {
            "type": "string",
            "description": "Requisition List Description"
          },
          "items": {
            "type": "array",
            "description": "Requisition List Items",
            "items": {
              "$ref": "#/components/schemas/requisition-list-data-requisition-list-item-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/requisition-list-data-requisition-list-extension-interface"
          }
        },
        "required": ["id", "customer_id", "name", "updated_at", "description", "items"]
      },
      "requisition-list-data-requisition-list-item-interface": {
        "type": "object",
        "description": "Interface RequisitionListItemInterface",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Requisition List ID."
          },
          "sku": {
            "type": "string",
            "description": "Product SKU."
          },
          "requisition_list_id": {
            "type": "integer",
            "description": "Requisition List ID."
          },
          "qty": {
            "type": "number",
            "description": "Product Qty."
          },
          "options": {
            "type": "array",
            "description": "Requisition list item options.",
            "items": {
              "type": "string"
            }
          },
          "store_id": {
            "type": "integer",
            "description": "Store ID."
          },
          "added_at": {
            "type": "string",
            "description": "Added_at value."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/requisition-list-data-requisition-list-item-extension-interface"
          }
        },
        "required": ["id", "sku", "requisition_list_id", "qty", "options", "store_id", "added_at"]
      },
      "requisition-list-data-requisition-list-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\RequisitionList\\Api\\Data\\RequisitionListItemInterface"
      },
      "requisition-list-data-requisition-list-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\RequisitionList\\Api\\Data\\RequisitionListInterface"
      },
      "checkout-data-shipping-information-interface": {
        "type": "object",
        "description": "Interface ShippingInformationInterface",
        "properties": {
          "shipping_address": {
            "$ref": "#/components/schemas/quote-data-address-interface"
          },
          "billing_address": {
            "$ref": "#/components/schemas/quote-data-address-interface"
          },
          "shipping_method_code": {
            "type": "string",
            "description": "Shipping method code"
          },
          "shipping_carrier_code": {
            "type": "string",
            "description": "Carrier code"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/checkout-data-shipping-information-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": ["shipping_address", "shipping_method_code", "shipping_carrier_code"]
      },
      "checkout-data-shipping-information-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\ShippingInformationInterface"
      },
      "checkout-data-payment-details-interface": {
        "type": "object",
        "description": "Interface PaymentDetailsInterface",
        "properties": {
          "payment_methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/quote-data-payment-method-interface"
            }
          },
          "totals": {
            "$ref": "#/components/schemas/quote-data-totals-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/checkout-data-payment-details-extension-interface"
          }
        },
        "required": ["payment_methods", "totals"]
      },
      "checkout-data-payment-details-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\PaymentDetailsInterface"
      },
      "checkout-data-totals-information-interface": {
        "type": "object",
        "description": "Interface TotalsInformationInterface",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/quote-data-address-interface"
          },
          "shipping_method_code": {
            "type": "string",
            "description": "Shipping method code"
          },
          "shipping_carrier_code": {
            "type": "string",
            "description": "Carrier code"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/checkout-data-totals-information-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": ["address"]
      },
      "checkout-data-totals-information-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\TotalsInformationInterface"
      },
      "checkout-agreements-data-agreement-interface": {
        "type": "object",
        "description": "Interface AgreementInterface",
        "properties": {
          "agreement_id": {
            "type": "integer",
            "description": "Agreement ID."
          },
          "name": {
            "type": "string",
            "description": "Agreement name."
          },
          "content": {
            "type": "string",
            "description": "Agreement content."
          },
          "content_height": {
            "type": "string",
            "description": "Agreement content height. Otherwise, null."
          },
          "checkbox_text": {
            "type": "string",
            "description": "Agreement checkbox text."
          },
          "is_active": {
            "type": "boolean",
            "description": "Agreement status."
          },
          "is_html": {
            "type": "boolean",
            "description": "* true - HTML. * false - plain text."
          },
          "mode": {
            "type": "integer",
            "description": "The agreement applied mode."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/checkout-agreements-data-agreement-extension-interface"
          }
        },
        "required": [
          "agreement_id",
          "name",
          "content",
          "checkbox_text",
          "is_active",
          "is_html",
          "mode"
        ]
      },
      "checkout-agreements-data-agreement-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\CheckoutAgreements\\Api\\Data\\AgreementInterface"
      },
      "company-data-company-search-results-interface": {
        "type": "object",
        "description": "Interface for company search results",
        "properties": {
          "items": {
            "type": "array",
            "description": "Companies list",
            "items": {
              "$ref": "#/components/schemas/company-data-company-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "company-data-company-interface": {
        "type": "object",
        "description": "Interface for Company entity.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id."
          },
          "status": {
            "type": "integer",
            "description": "Status."
          },
          "company_name": {
            "type": "string",
            "description": "Company name."
          },
          "legal_name": {
            "type": "string",
            "description": "Legal name."
          },
          "company_email": {
            "type": "string",
            "description": "Company email."
          },
          "vat_tax_id": {
            "type": "string",
            "description": "Vat tax id."
          },
          "reseller_id": {
            "type": "string",
            "description": "Reseller Id."
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "street": {
            "type": "array",
            "description": "Street.",
            "items": {
              "type": "string"
            }
          },
          "city": {
            "type": "string",
            "description": "City."
          },
          "country_id": {
            "type": "string",
            "description": "Country."
          },
          "region": {
            "type": "string",
            "description": "Region."
          },
          "region_id": {
            "type": "string",
            "description": "Region Id."
          },
          "postcode": {
            "type": "string",
            "description": "Postcode."
          },
          "telephone": {
            "type": "string",
            "description": "Telephone."
          },
          "customer_group_id": {
            "type": "integer",
            "description": "Customer Group Id."
          },
          "sales_representative_id": {
            "type": "integer",
            "description": "Sales Representative Id."
          },
          "reject_reason": {
            "type": "string",
            "description": "Reject Reason."
          },
          "rejected_at": {
            "type": "string",
            "description": "Rejected at time."
          },
          "super_user_id": {
            "type": "integer",
            "description": "Company admin customer id."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-company-extension-interface"
          }
        },
        "required": [
          "street",
          "customer_group_id",
          "sales_representative_id",
          "reject_reason",
          "rejected_at",
          "super_user_id"
        ]
      },
      "company-data-company-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyInterface",
        "properties": {
          "applicable_payment_method": {
            "type": "integer"
          },
          "available_payment_methods": {
            "type": "string"
          },
          "use_config_settings": {
            "type": "integer"
          },
          "quote_config": {
            "$ref": "#/components/schemas/negotiable-quote-data-company-quote-config-interface"
          },
          "is_purchase_order_enabled": {
            "type": "boolean"
          },
          "applicable_shipping_method": {
            "type": "integer"
          },
          "available_shipping_methods": {
            "type": "string"
          },
          "use_config_settings_shipping": {
            "type": "integer"
          }
        }
      },
      "negotiable-quote-data-company-quote-config-interface": {
        "type": "object",
        "description": "Interface CompanyQuoteConfigInterface",
        "properties": {
          "company_id": {
            "type": "string",
            "description": "Company id"
          },
          "is_quote_enabled": {
            "type": "boolean",
            "description": "Quote enabled for company"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-company-quote-config-extension-interface"
          }
        },
        "required": ["is_quote_enabled"]
      },
      "negotiable-quote-data-company-quote-config-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CompanyQuoteConfigInterface"
      },
      "company-data-team-search-results-interface": {
        "type": "object",
        "description": "Interface for company team search results",
        "properties": {
          "items": {
            "type": "array",
            "description": "Teams list",
            "items": {
              "$ref": "#/components/schemas/company-data-team-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "company-data-team-interface": {
        "type": "object",
        "description": "Team interface",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-team-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        }
      },
      "company-data-team-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\TeamInterface"
      },
      "company-data-hierarchy-interface": {
        "type": "object",
        "description": "Company hierarchy DTO interface for WebAPI.",
        "properties": {
          "structure_id": {
            "type": "integer",
            "description": "Structure ID."
          },
          "entity_id": {
            "type": "integer",
            "description": "Entity ID."
          },
          "entity_type": {
            "type": "string",
            "description": "Entity type."
          },
          "structure_parent_id": {
            "type": "integer",
            "description": "Structure parent ID."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-hierarchy-extension-interface"
          }
        }
      },
      "company-data-hierarchy-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\HierarchyInterface"
      },
      "company-data-role-search-results-interface": {
        "type": "object",
        "description": "Interface for role search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Roles list.",
            "items": {
              "$ref": "#/components/schemas/company-data-role-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "company-data-role-interface": {
        "type": "object",
        "description": "Role data transfer object interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Role id."
          },
          "role_name": {
            "type": "string",
            "description": "Role name."
          },
          "permissions": {
            "type": "array",
            "description": "Permissions.",
            "items": {
              "$ref": "#/components/schemas/company-data-permission-interface"
            }
          },
          "company_id": {
            "type": "integer",
            "description": "Company id."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-role-extension-interface"
          }
        },
        "required": ["permissions"]
      },
      "company-data-permission-interface": {
        "type": "object",
        "description": "Permission interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id."
          },
          "role_id": {
            "type": "integer",
            "description": "Role id."
          },
          "resource_id": {
            "type": "string",
            "description": "Resource id."
          },
          "permission": {
            "type": "string",
            "description": "Permission."
          }
        },
        "required": ["resource_id", "permission"]
      },
      "company-data-role-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\RoleInterface"
      },
      "tax-data-tax-rate-interface": {
        "type": "object",
        "description": "Tax rate interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "tax_country_id": {
            "type": "string",
            "description": "Country id"
          },
          "tax_region_id": {
            "type": "integer",
            "description": "Region id"
          },
          "region_name": {
            "type": "string",
            "description": "Region name"
          },
          "tax_postcode": {
            "type": "string",
            "description": "Postcode"
          },
          "zip_is_range": {
            "type": "integer",
            "description": "Zip is range"
          },
          "zip_from": {
            "type": "integer",
            "description": "Zip range from"
          },
          "zip_to": {
            "type": "integer",
            "description": "Zip range to"
          },
          "rate": {
            "type": "number",
            "description": "Tax rate in percentage"
          },
          "code": {
            "type": "string",
            "description": "Tax rate code"
          },
          "titles": {
            "type": "array",
            "description": "Tax rate titles",
            "items": {
              "$ref": "#/components/schemas/tax-data-tax-rate-title-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-tax-rate-extension-interface"
          }
        },
        "required": ["tax_country_id", "rate", "code"]
      },
      "tax-data-tax-rate-title-interface": {
        "type": "object",
        "description": "Tax rate title interface.",
        "properties": {
          "store_id": {
            "type": "string",
            "description": "Store id"
          },
          "value": {
            "type": "string",
            "description": "Title value"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-tax-rate-title-extension-interface"
          }
        },
        "required": ["store_id", "value"]
      },
      "tax-data-tax-rate-title-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxRateTitleInterface"
      },
      "tax-data-tax-rate-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxRateInterface"
      },
      "tax-data-tax-rate-search-results-interface": {
        "type": "object",
        "description": "Interface for tax rate search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/tax-data-tax-rate-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "tax-data-tax-rule-interface": {
        "type": "object",
        "description": "Tax rule interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "code": {
            "type": "string",
            "description": "Tax rule code"
          },
          "priority": {
            "type": "integer",
            "description": "Priority"
          },
          "position": {
            "type": "integer",
            "description": "Sort order."
          },
          "customer_tax_class_ids": {
            "type": "array",
            "description": "Customer tax class id",
            "items": {
              "type": "integer"
            }
          },
          "product_tax_class_ids": {
            "type": "array",
            "description": "Product tax class id",
            "items": {
              "type": "integer"
            }
          },
          "tax_rate_ids": {
            "type": "array",
            "description": "Tax rate ids",
            "items": {
              "type": "integer"
            }
          },
          "calculate_subtotal": {
            "type": "boolean",
            "description": "Calculate subtotal."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-tax-rule-extension-interface"
          }
        },
        "required": [
          "code",
          "priority",
          "position",
          "customer_tax_class_ids",
          "product_tax_class_ids",
          "tax_rate_ids"
        ]
      },
      "tax-data-tax-rule-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxRuleInterface"
      },
      "tax-data-tax-rule-search-results-interface": {
        "type": "object",
        "description": "Interface for tax rule search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/tax-data-tax-rule-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "tax-data-tax-class-interface": {
        "type": "object",
        "description": "Tax class interface.",
        "properties": {
          "class_id": {
            "type": "integer",
            "description": "Tax class ID."
          },
          "class_name": {
            "type": "string",
            "description": "Tax class name."
          },
          "class_type": {
            "type": "string",
            "description": "Tax class type."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/tax-data-tax-class-extension-interface"
          }
        },
        "required": ["class_name", "class_type"]
      },
      "tax-data-tax-class-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\TaxClassInterface"
      },
      "tax-data-tax-class-search-results-interface": {
        "type": "object",
        "description": "Interface for tax class search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/tax-data-tax-class-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "company-credit-data-credit-limit-search-results-interface": {
        "type": "object",
        "description": "Interface for Credit Limit search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Credit Limit list.",
            "items": {
              "$ref": "#/components/schemas/company-credit-data-credit-data-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "company-credit-data-credit-data-interface": {
        "type": "object",
        "description": "Credit Data interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID."
          },
          "company_id": {
            "type": "integer",
            "description": "Company id."
          },
          "credit_limit": {
            "type": "number",
            "description": "Credit Limit."
          },
          "balance": {
            "type": "number",
            "description": "Balance."
          },
          "currency_code": {
            "type": "string",
            "description": "Currency Code."
          },
          "exceed_limit": {
            "type": "boolean",
            "description": "Exceed Limit."
          },
          "available_limit": {
            "type": "number",
            "description": "Available Limit."
          }
        },
        "required": ["exceed_limit"]
      },
      "company-credit-data-credit-limit-interface": {
        "type": "object",
        "description": "Credit Limit data transfer object interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID."
          },
          "company_id": {
            "type": "integer",
            "description": "Company id."
          },
          "credit_limit": {
            "type": "number",
            "description": "Credit Limit."
          },
          "balance": {
            "type": "number",
            "description": "Balance."
          },
          "currency_code": {
            "type": "string",
            "description": "Currency Code."
          },
          "exceed_limit": {
            "type": "boolean",
            "description": "Exceed Limit."
          },
          "available_limit": {
            "type": "number",
            "description": "Available Limit."
          },
          "credit_comment": {
            "type": "string",
            "description": "Credit comment for company credit history."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-credit-data-credit-limit-extension-interface"
          }
        },
        "required": ["exceed_limit"]
      },
      "company-credit-data-credit-limit-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\CompanyCredit\\Api\\Data\\CreditLimitInterface"
      },
      "company-credit-data-credit-balance-options-interface": {
        "type": "object",
        "description": "Credit balance data transfer object interface.",
        "properties": {
          "purchase_order": {
            "type": "string",
            "description": "Purchase order number."
          },
          "custom_reference_number": {
            "type": "string",
            "description": "Custom Reference number."
          },
          "order_increment": {
            "type": "string",
            "description": "Order increment."
          },
          "currency_display": {
            "type": "string",
            "description": "Currency display."
          },
          "currency_base": {
            "type": "string",
            "description": "Currency base."
          }
        },
        "required": ["purchase_order", "order_increment", "currency_display", "currency_base"]
      },
      "company-credit-data-history-search-results-interface": {
        "type": "object",
        "description": "Interface for History search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "History list.",
            "items": {
              "$ref": "#/components/schemas/company-credit-data-history-data-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "company-credit-data-history-data-interface": {
        "type": "object",
        "description": "History data transfer object interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID."
          },
          "company_credit_id": {
            "type": "integer",
            "description": "Company credit id."
          },
          "user_id": {
            "type": "integer",
            "description": "User Id."
          },
          "user_type": {
            "type": "integer",
            "description": "User type: integration, admin, customer."
          },
          "currency_credit": {
            "type": "string",
            "description": "Currency code of credit."
          },
          "currency_operation": {
            "type": "string",
            "description": "Currency code of operation."
          },
          "rate": {
            "type": "number",
            "description": "Currency rate between credit and operation currencies."
          },
          "rate_credit": {
            "type": "number",
            "description": "Rate between credit and base currencies."
          },
          "amount": {
            "type": "number",
            "description": "Amount."
          },
          "balance": {
            "type": "number",
            "description": "Outstanding balance."
          },
          "credit_limit": {
            "type": "number",
            "description": "Credit limit."
          },
          "available_limit": {
            "type": "number",
            "description": "Available limit."
          },
          "type": {
            "type": "integer",
            "description": "Type of operation."
          },
          "datetime": {
            "type": "string",
            "description": "Operation datetime."
          },
          "purchase_order": {
            "type": "string",
            "description": "Purchase Order number."
          },
          "custom_reference_number": {
            "type": "string",
            "description": "Custom Reference number."
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          }
        },
        "required": ["rate", "amount", "balance", "credit_limit"]
      },
      "two-factor-auth-provider-interface": {
        "type": "object",
        "description": "2FA provider interface",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "True if this provider has been enabled by admin"
          },
          "engine": {
            "$ref": "#/components/schemas/two-factor-auth-engine-interface"
          },
          "code": {
            "type": "string",
            "description": "Provider code"
          },
          "name": {
            "type": "string",
            "description": "Provider name"
          },
          "icon": {
            "type": "string",
            "description": "Icon"
          },
          "reset_allowed": {
            "type": "boolean",
            "description": "True if this provider configuration can be reset"
          },
          "configure_action": {
            "type": "string",
            "description": "Configure action"
          },
          "auth_action": {
            "type": "string",
            "description": "Auth action"
          },
          "extra_actions": {
            "type": "array",
            "description": "Allowed extra actions",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "enabled",
          "engine",
          "code",
          "name",
          "icon",
          "reset_allowed",
          "configure_action",
          "auth_action",
          "extra_actions"
        ]
      },
      "two-factor-auth-engine-interface": {
        "type": "object",
        "description": "2FA engine interface",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "True if this provider has been enabled by admin"
          }
        },
        "required": ["enabled"]
      },
      "two-factor-auth-data-google-configure-interface": {
        "type": "object",
        "description": "Google configuration data interface",
        "properties": {
          "qr_code_base64": {
            "type": "string",
            "description": "Value for QR code base 64"
          },
          "secret_code": {
            "type": "string",
            "description": "Value for secret code"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/two-factor-auth-data-google-configure-extension-interface"
          }
        },
        "required": ["qr_code_base64", "secret_code"]
      },
      "two-factor-auth-data-google-configure-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\TwoFactorAuth\\Api\\Data\\GoogleConfigureInterface"
      },
      "two-factor-auth-data-authy-device-interface": {
        "type": "object",
        "description": "Authy device data interface",
        "properties": {
          "country": {
            "type": "string",
            "description": "The country"
          },
          "phone_number": {
            "type": "string",
            "description": "The phone number"
          },
          "method": {
            "type": "string",
            "description": "The method to authenticate with"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/two-factor-auth-data-authy-device-extension-interface"
          }
        },
        "required": ["country", "phone_number", "method"]
      },
      "two-factor-auth-data-authy-device-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\TwoFactorAuth\\Api\\Data\\AuthyDeviceInterface"
      },
      "two-factor-auth-data-authy-registration-prompt-response-interface": {
        "type": "object",
        "description": "Response for device registration prompt",
        "properties": {
          "message": {
            "type": "string",
            "description": "The message"
          },
          "expiration_seconds": {
            "type": "string",
            "description": "The seconds to expire"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/two-factor-auth-data-authy-registration-prompt-response-extension-interface"
          }
        },
        "required": ["message", "expiration_seconds"]
      },
      "two-factor-auth-data-authy-registration-prompt-response-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\TwoFactorAuth\\Api\\Data\\AuthyRegistrationPromptResponseInterface"
      },
      "two-factor-auth-data-u2f-web-authn-request-interface": {
        "type": "object",
        "description": "Represents a WebAuthn dataset",
        "properties": {
          "credential_request_options_json": {
            "type": "string",
            "description": "The needed data to initiate a WebAuthn registration ceremony"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/two-factor-auth-data-u2f-web-authn-request-extension-interface"
          }
        },
        "required": ["credential_request_options_json"]
      },
      "two-factor-auth-data-u2f-web-authn-request-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\TwoFactorAuth\\Api\\Data\\U2fWebAuthnRequestInterface"
      },
      "two-factor-auth-data-duo-data-interface": {
        "type": "object",
        "description": "Represents the data needed to use duo",
        "properties": {
          "signature": {
            "type": "string",
            "description": "The signature"
          },
          "api_hostname": {
            "type": "string",
            "description": "The api hostname"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/two-factor-auth-data-duo-data-extension-interface"
          }
        },
        "required": ["signature", "api_hostname"]
      },
      "two-factor-auth-data-duo-data-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\TwoFactorAuth\\Api\\Data\\DuoDataInterface"
      },
      "negotiable-quote-data-attachment-content-interface": {
        "type": "object",
        "description": "Attachment files content interface.",
        "properties": {
          "base64_encoded_data": {
            "type": "string",
            "description": "Media data (base64 encoded content)."
          },
          "type": {
            "type": "string",
            "description": "MIME type."
          },
          "name": {
            "type": "string",
            "description": "File name."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-extension-interface"
          }
        },
        "required": ["base64_encoded_data", "type", "name"]
      },
      "negotiable-quote-data-attachment-content-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\AttachmentContentInterface"
      },
      "negotiable-quote-data-comment-interface": {
        "type": "object",
        "description": "Interface CommentInterface",
        "properties": {
          "entity_id": {
            "type": "integer",
            "description": "Comment ID."
          },
          "parent_id": {
            "type": "integer",
            "description": "Negotiable quote ID, that this comment belongs to."
          },
          "creator_type": {
            "type": "integer",
            "description": "The comment creator type."
          },
          "is_decline": {
            "type": "integer",
            "description": "Is quote was declined by seller."
          },
          "is_draft": {
            "type": "integer",
            "description": "Is quote draft flag."
          },
          "creator_id": {
            "type": "integer",
            "description": "Comment creator ID."
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "created_at": {
            "type": "string",
            "description": "Comment created at."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-comment-extension-interface"
          },
          "attachments": {
            "type": "array",
            "description": "Existing attachments.",
            "items": {
              "$ref": "#/components/schemas/negotiable-quote-data-comment-attachment-interface"
            }
          }
        },
        "required": [
          "entity_id",
          "parent_id",
          "creator_type",
          "is_decline",
          "is_draft",
          "creator_id",
          "comment",
          "created_at",
          "attachments"
        ]
      },
      "negotiable-quote-data-comment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentInterface"
      },
      "negotiable-quote-data-comment-attachment-interface": {
        "type": "object",
        "description": "Interface for quote comment attachment.",
        "properties": {
          "attachment_id": {
            "type": "integer",
            "description": "Attachment ID."
          },
          "comment_id": {
            "type": "integer",
            "description": "Comment ID."
          },
          "file_name": {
            "type": "string",
            "description": "File name."
          },
          "file_path": {
            "type": "string",
            "description": "File path."
          },
          "file_type": {
            "type": "string",
            "description": "File type."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/negotiable-quote-data-comment-attachment-extension-interface"
          }
        },
        "required": ["attachment_id", "comment_id", "file_name", "file_path", "file_type"]
      },
      "negotiable-quote-data-comment-attachment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentAttachmentInterface"
      },
      "gift-card-account-data-gift-card-account-interface": {
        "type": "object",
        "description": "Gift Card Account data",
        "properties": {
          "gift_cards": {
            "type": "array",
            "description": "Cards codes.",
            "items": {
              "type": "string"
            }
          },
          "gift_cards_amount": {
            "type": "number",
            "description": "Cards amount in quote currency."
          },
          "base_gift_cards_amount": {
            "type": "number",
            "description": "Cards amount in base currency."
          },
          "gift_cards_amount_used": {
            "type": "number",
            "description": "Cards amount used in quote currency."
          },
          "base_gift_cards_amount_used": {
            "type": "number",
            "description": "Cards amount used in base currency."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/gift-card-account-data-gift-card-account-extension-interface"
          }
        },
        "required": [
          "gift_cards_amount",
          "base_gift_cards_amount",
          "gift_cards_amount_used",
          "base_gift_cards_amount_used"
        ]
      },
      "gift-card-account-data-gift-card-account-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\GiftCardAccount\\Api\\Data\\GiftCardAccountInterface"
      },
      "negotiable-quote-data-item-note-search-results-interface": {
        "type": "object",
        "description": "Interface for Negotiable Quote Item Notes search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Negotiable Quote Item Notes list.",
            "items": {
              "$ref": "#/components/schemas/negotiable-quote-data-item-note-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "analytics-data-link-interface": {
        "type": "object",
        "description": "Represents link with collected data and initialized vector for decryption.",
        "properties": {
          "url": {
            "type": "string"
          },
          "initialization_vector": {
            "type": "string"
          }
        },
        "required": ["url", "initialization_vector"]
      },
      "shared-catalog-data-shared-catalog-interface": {
        "type": "object",
        "description": "SharedCatalogInterface interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID."
          },
          "name": {
            "type": "string",
            "description": "Shared Catalog name."
          },
          "description": {
            "type": "string",
            "description": "Shared Catalog description."
          },
          "customer_group_id": {
            "type": "integer",
            "description": "Customer Group Id."
          },
          "type": {
            "type": "integer",
            "description": "Shared Catalog type."
          },
          "created_at": {
            "type": "string",
            "description": "Created time for Shared Catalog."
          },
          "created_by": {
            "type": "integer",
            "description": "Admin id for Shared Catalog."
          },
          "store_id": {
            "type": "integer",
            "description": "Store group id for Shared Catalog."
          },
          "tax_class_id": {
            "type": "integer",
            "description": "Tax class id."
          }
        },
        "required": [
          "name",
          "description",
          "customer_group_id",
          "type",
          "created_at",
          "created_by",
          "store_id",
          "tax_class_id"
        ]
      },
      "shared-catalog-data-search-results-interface": {
        "type": "object",
        "description": "Interface for Shared Catalog search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Shared Catalog list.",
            "items": {
              "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "gift-wrapping-data-wrapping-interface": {
        "type": "object",
        "description": "Interface WrappingInterface",
        "properties": {
          "wrapping_id": {
            "type": "integer"
          },
          "design": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "base_price": {
            "type": "number"
          },
          "image_name": {
            "type": "string"
          },
          "image_base64_content": {
            "type": "string"
          },
          "base_currency_code": {
            "type": "string"
          },
          "website_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "image_url": {
            "type": "string",
            "description": "Wrapping image URL."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/gift-wrapping-data-wrapping-extension-interface"
          }
        },
        "required": ["design", "status", "base_price"]
      },
      "gift-wrapping-data-wrapping-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\GiftWrapping\\Api\\Data\\WrappingInterface"
      },
      "gift-wrapping-data-wrapping-search-results-interface": {
        "type": "object",
        "description": "Interface WrappingSearchResultsInterface",
        "properties": {
          "items": {
            "type": "array",
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/gift-wrapping-data-wrapping-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "import-csv-api-data-localized-source-data-interface": {
        "type": "object",
        "description": "{@inheritdoc} Adds locale field in source data",
        "properties": {
          "locale": {
            "type": "string",
            "description": "Import content locale"
          },
          "entity": {
            "type": "string",
            "description": "Entity"
          },
          "behavior": {
            "type": "string",
            "description": "Behavior"
          },
          "validation_strategy": {
            "type": "string",
            "description": "Validation Strategy"
          },
          "allowed_error_count": {
            "type": "string",
            "description": "Allowed Error Count"
          },
          "csv_data": {
            "type": "string",
            "description": "CSV data as string"
          },
          "import_field_separator": {
            "type": "string",
            "description": "Import's Field Separator for CSV"
          },
          "import_multiple_value_separator": {
            "type": "string",
            "description": "Import's Multiple Value Field Separator for CSV"
          },
          "import_empty_attribute_value_constant": {
            "type": "string",
            "description": "Import's Empty Attribute Value Constant"
          },
          "import_images_file_dir": {
            "type": "string",
            "description": "Import's Images File Directory"
          }
        },
        "required": ["entity", "behavior", "validation_strategy", "allowed_error_count", "csv_data"]
      },
      "import-json-api-data-source-data-interface": {
        "type": "object",
        "description": "Import JSON source data interface.",
        "properties": {
          "entity": {
            "type": "string",
            "description": "Entity"
          },
          "behavior": {
            "type": "string",
            "description": "Behavior"
          },
          "validation_strategy": {
            "type": "string",
            "description": "Validation Strategy"
          },
          "allowed_error_count": {
            "type": "string",
            "description": "Allowed Error Count"
          },
          "items": {
            "$ref": "#/components/schemas/unstructured-array"
          },
          "import_images_file_dir": {
            "type": "string",
            "description": "Import's Images File Directory"
          },
          "locale": {
            "type": "string",
            "description": "Import content locale"
          }
        },
        "required": ["entity", "behavior", "validation_strategy", "allowed_error_count", "items"]
      },
      "unstructured-array": {
        "type": "object",
        "description": ""
      },
      "inventory-api-data-source-search-results-interface": {
        "type": "object",
        "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "items": {
            "type": "array",
            "description": "Sources list",
            "items": {
              "$ref": "#/components/schemas/inventory-api-data-source-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "inventory-api-data-source-interface": {
        "type": "object",
        "description": "Represents physical storage, i.e. brick and mortar store or warehouse Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "source_code": {
            "type": "string",
            "description": "Source code"
          },
          "name": {
            "type": "string",
            "description": "Source name"
          },
          "email": {
            "type": "string",
            "description": "Source email"
          },
          "contact_name": {
            "type": "string",
            "description": "Source contact name"
          },
          "enabled": {
            "type": "boolean",
            "description": "If source is enabled. For new entity can be null"
          },
          "description": {
            "type": "string",
            "description": "Source description"
          },
          "latitude": {
            "type": "number",
            "description": "Source latitude"
          },
          "longitude": {
            "type": "number",
            "description": "Source longitude"
          },
          "country_id": {
            "type": "string",
            "description": "Source country id"
          },
          "region_id": {
            "type": "integer",
            "description": "Region id if source has registered region."
          },
          "region": {
            "type": "string",
            "description": "Region title if source has custom region"
          },
          "city": {
            "type": "string",
            "description": "Source city"
          },
          "street": {
            "type": "string",
            "description": "Source street name"
          },
          "postcode": {
            "type": "string",
            "description": "Source post code"
          },
          "phone": {
            "type": "string",
            "description": "Source phone number"
          },
          "fax": {
            "type": "string",
            "description": "Source fax"
          },
          "use_default_carrier_config": {
            "type": "boolean",
            "description": "Is need to use default config"
          },
          "carrier_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventory-api-data-source-carrier-link-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-api-data-source-extension-interface"
          }
        }
      },
      "inventory-api-data-source-carrier-link-interface": {
        "type": "object",
        "description": "Represents relation between some physical storage and shipping method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "carrier_code": {
            "type": "string",
            "description": "Carrier code"
          },
          "position": {
            "type": "integer",
            "description": "Position"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-api-data-source-carrier-link-extension-interface"
          }
        }
      },
      "inventory-api-data-source-carrier-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\SourceCarrierLinkInterface"
      },
      "inventory-api-data-source-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\SourceInterface",
        "properties": {
          "is_pickup_location_active": {
            "type": "boolean"
          },
          "frontend_name": {
            "type": "string"
          },
          "frontend_description": {
            "type": "string"
          }
        }
      },
      "inventory-api-data-stock-search-results-interface": {
        "type": "object",
        "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "items": {
            "type": "array",
            "description": "Stocks list",
            "items": {
              "$ref": "#/components/schemas/inventory-api-data-stock-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "inventory-api-data-stock-interface": {
        "type": "object",
        "description": "Represents product aggregation among some different physical storages (in technical words, it is an index) Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "stock_id": {
            "type": "integer",
            "description": "Stock id"
          },
          "name": {
            "type": "string",
            "description": "Stock name"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-api-data-stock-extension-interface"
          }
        }
      },
      "inventory-api-data-stock-extension-interface": {
        "type": "object",
        "description": "TODO: temporal fix of extension classes generation during installation ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\StockInterface",
        "properties": {
          "sales_channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventory-sales-api-data-sales-channel-interface"
            }
          }
        }
      },
      "inventory-sales-api-data-sales-channel-interface": {
        "type": "object",
        "description": "Represents sales channels (which are a linkage between stocks and websites, customer groups, etc.) Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "type": {
            "type": "string",
            "description": "Sales channel type"
          },
          "code": {
            "type": "string",
            "description": "Sales channel code"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-sales-api-data-sales-channel-extension-interface"
          }
        }
      },
      "inventory-sales-api-data-sales-channel-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\SalesChannelInterface"
      },
      "inventory-api-data-stock-source-link-search-results-interface": {
        "type": "object",
        "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "items": {
            "type": "array",
            "description": "StockSourceLink list",
            "items": {
              "$ref": "#/components/schemas/inventory-api-data-stock-source-link-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "inventory-api-data-stock-source-link-interface": {
        "type": "object",
        "description": "Represents relation between Stock and Source entities. Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "stock_id": {
            "type": "integer",
            "description": "Stock id"
          },
          "source_code": {
            "type": "string",
            "description": "Source code of the link"
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the link"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-api-data-stock-source-link-extension-interface"
          }
        }
      },
      "inventory-api-data-stock-source-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\StockSourceLinkInterface",
        "properties": {
          "source_name": {
            "type": "string"
          }
        }
      },
      "inventory-api-data-source-item-search-results-interface": {
        "type": "object",
        "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "items": {
            "type": "array",
            "description": "Source items list",
            "items": {
              "$ref": "#/components/schemas/inventory-api-data-source-item-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "inventory-api-data-source-item-interface": {
        "type": "object",
        "description": "Represents amount of product on physical storage Entity id getter is missed because entity identifies by compound identifier (sku and source_code) Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Source item sku"
          },
          "source_code": {
            "type": "string",
            "description": "Source code"
          },
          "quantity": {
            "type": "number",
            "description": "Source item quantity"
          },
          "status": {
            "type": "integer",
            "description": "Source item status (One of self::STATUS_*)"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-api-data-source-item-extension-interface"
          }
        }
      },
      "inventory-api-data-source-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\SourceItemInterface"
      },
      "inventory-catalog-api-data-partial-inventory-transfer-item-interface": {
        "type": "object",
        "description": "Specifies item and quantity for partial inventory transfer.",
        "properties": {
          "sku": {
            "type": "string"
          },
          "qty": {
            "type": "number"
          }
        },
        "required": ["sku", "qty"]
      },
      "inventory-distance-based-source-selection-api-data-lat-lng-interface": {
        "type": "object",
        "description": "DTO for latitude and longitude request",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude"
          },
          "lng": {
            "type": "number",
            "description": "Longitude"
          }
        },
        "required": ["lat", "lng"]
      },
      "inventory-export-stock-api-data-export-stock-salable-qty-search-result-interface": {
        "type": "object",
        "description": "Interface for ExportStockSalableQtySearchResult",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/framework-extensible-data-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "framework-extensible-data-interface": {
        "type": "object",
        "description": "Interface for entities which can be extended with extension attributes."
      },
      "inventory-export-stock-api-data-product-stock-index-data-interface": {
        "type": "object",
        "description": "Class ExportStockIndexDataResultInterface for result Inventory stock index dump export",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Product SKU"
          },
          "qty": {
            "type": "number",
            "description": "Product QTY"
          },
          "is_salable": {
            "type": "boolean",
            "description": "Product is salable flag"
          }
        },
        "required": ["sku", "qty", "is_salable"]
      },
      "inventory-sales-api-data-is-product-salable-result-interface": {
        "type": "object",
        "description": "Represents \"is product salable\" result interface.",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Product sku from result."
          },
          "stock_id": {
            "type": "integer",
            "description": "Stock id from result."
          },
          "salable": {
            "type": "boolean",
            "description": "Is salable result."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-result-extension-interface"
          }
        },
        "required": ["sku", "stock_id", "salable"]
      },
      "inventory-sales-api-data-is-product-salable-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\IsProductSalableResultInterface"
      },
      "inventory-sales-api-data-product-salable-result-interface": {
        "type": "object",
        "description": "Represents result of service Magento\\InventorySalesApi\\Api\\IsProductSalableForRequestedQtyInterface::execute",
        "properties": {
          "salable": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventory-sales-api-data-product-salability-error-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-sales-api-data-product-salable-result-extension-interface"
          }
        },
        "required": ["salable", "errors"]
      },
      "inventory-sales-api-data-product-salability-error-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-sales-api-data-product-salability-error-extension-interface"
          }
        },
        "required": ["code", "message"]
      },
      "inventory-sales-api-data-product-salability-error-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\ProductSalabilityErrorInterface"
      },
      "inventory-sales-api-data-product-salable-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\ProductSalableResultInterface"
      },
      "inventory-sales-api-data-is-product-salable-for-requested-qty-result-interface": {
        "type": "object",
        "description": "Represents \"is product salable for requested quantity\" result interface.",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Product sku from result."
          },
          "stock_id": {
            "type": "integer",
            "description": "Stock id from result."
          },
          "salable": {
            "type": "boolean",
            "description": "Is salable result."
          },
          "errors": {
            "type": "array",
            "description": "Errors from result.",
            "items": {
              "$ref": "#/components/schemas/inventory-sales-api-data-product-salability-error-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-for-requested-qty-result-extension-interface"
          }
        },
        "required": ["sku", "stock_id", "salable", "errors"]
      },
      "inventory-sales-api-data-is-product-salable-for-requested-qty-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\IsProductSalableForRequestedQtyResultInterface"
      },
      "inventory-in-store-pickup-api-data-search-result-interface": {
        "type": "object",
        "description": "Search results for providing pickup locations.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Items list.",
            "items": {
              "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-pickup-location-interface"
            }
          },
          "search_request": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_request", "total_count"]
      },
      "inventory-in-store-pickup-api-data-pickup-location-interface": {
        "type": "object",
        "description": "Represents sources projection on In-Store Pickup context. Realisation must follow immutable DTO concept. Partial immutability done according to restriction of current Extension Attributes implementation.",
        "properties": {
          "pickup_location_code": {
            "type": "string",
            "description": "Source code of Pickup Location."
          },
          "name": {
            "type": "string",
            "description": "Pickup Location name."
          },
          "email": {
            "type": "string",
            "description": "Pickup Location contact email."
          },
          "fax": {
            "type": "string",
            "description": "Fax contact info."
          },
          "contact_name": {
            "type": "string",
            "description": "Pickup Location contact name."
          },
          "description": {
            "type": "string",
            "description": "Pickup Location description."
          },
          "latitude": {
            "type": "number",
            "description": "Pickup Location latitude."
          },
          "longitude": {
            "type": "number",
            "description": "Pickup Location longitude."
          },
          "country_id": {
            "type": "string",
            "description": "Pickup Location country ID."
          },
          "region_id": {
            "type": "integer",
            "description": "Pickup Location region ID."
          },
          "region": {
            "type": "string",
            "description": "Pickup Location region."
          },
          "city": {
            "type": "string",
            "description": "Pickup Location city."
          },
          "street": {
            "type": "string",
            "description": "Pickup Location street."
          },
          "postcode": {
            "type": "string",
            "description": "Pickup Location postcode."
          },
          "phone": {
            "type": "string",
            "description": "Pickup Location phone."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-pickup-location-extension-interface"
          }
        },
        "required": ["pickup_location_code"]
      },
      "inventory-in-store-pickup-api-data-pickup-location-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\PickupLocationInterface"
      },
      "inventory-in-store-pickup-api-data-search-request-interface": {
        "type": "object",
        "description": "Endpoint used to search Pickup Locations by different parameters: - by attribute filters fields @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\FiltersInterface - by distance to the address @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\AreaInterface Also, endpoint supports paging and sort orders.",
        "properties": {
          "area": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-area-interface"
          },
          "filters": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filters-interface"
          },
          "page_size": {
            "type": "integer",
            "description": "Page size."
          },
          "current_page": {
            "type": "integer",
            "description": "Current page."
          },
          "scope_type": {
            "type": "string",
            "description": "Sales Channel Type."
          },
          "scope_code": {
            "type": "string",
            "description": "Sales Channel code."
          },
          "sort": {
            "type": "array",
            "description": "Sort Order.",
            "items": {
              "$ref": "#/components/schemas/framework-sort-order"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-extension-interface"
          }
        },
        "required": ["current_page", "scope_type", "scope_code"]
      },
      "inventory-in-store-pickup-api-data-search-request-area-interface": {
        "type": "object",
        "description": "Filter by Distance to the Address. Pickup Locations will be filtered by distance according to the geo-position of the entered address. Required fields for the address are country and one of the field: region or city or postcode.",
        "properties": {
          "radius": {
            "type": "integer",
            "description": "Search radius in KM."
          },
          "search_term": {
            "type": "string",
            "description": "Search term string."
          }
        },
        "required": ["radius", "search_term"]
      },
      "inventory-in-store-pickup-api-data-search-request-filters-interface": {
        "type": "object",
        "description": "Filter to filter by Fields. Each field may be filtered with different condition type. Supported condition types restricted by @see \\Magento\\Framework\\Api\\SearchCriteriaInterface",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "postcode": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "region": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "region_id": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "city": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "street": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "name": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "pickup_location_code": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          }
        }
      },
      "inventory-in-store-pickup-api-data-search-request-filter-interface": {
        "type": "object",
        "description": "Filter for Pickup Location search.",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value."
          },
          "condition_type": {
            "type": "string",
            "description": "Condition Type."
          }
        },
        "required": ["value", "condition_type"]
      },
      "inventory-in-store-pickup-api-data-search-request-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequestInterface",
        "properties": {
          "products_info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-product-info-interface"
            }
          }
        }
      },
      "inventory-in-store-pickup-api-data-search-request-product-info-interface": {
        "type": "object",
        "description": "Product Info Data Transfer Object.",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Product SKU."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-product-info-extension-interface"
          }
        },
        "required": ["sku"]
      },
      "inventory-in-store-pickup-api-data-search-request-product-info-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\ProductInfoInterface"
      },
      "inventory-source-selection-api-data-source-selection-algorithm-interface": {
        "type": "object",
        "description": "Data Interface representing particular Source Selection Algorithm",
        "properties": {
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-algorithm-extension-interface"
          }
        },
        "required": ["code", "title", "description"]
      },
      "inventory-source-selection-api-data-source-selection-algorithm-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\SourceSelectionAlgorithmInterface"
      },
      "inventory-source-selection-api-data-inventory-request-interface": {
        "type": "object",
        "description": "Request products in a given Qty and StockId",
        "properties": {
          "stock_id": {
            "type": "integer",
            "description": "Stock Id"
          },
          "items": {
            "type": "array",
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/inventory-source-selection-api-data-item-request-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-inventory-request-extension-interface"
          }
        },
        "required": ["stock_id", "items"]
      },
      "inventory-source-selection-api-data-item-request-interface": {
        "type": "object",
        "description": "Represents requested quantity for particular product",
        "properties": {
          "sku": {
            "type": "string",
            "description": "SKU"
          },
          "qty": {
            "type": "number",
            "description": "Product Quantity"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-item-request-extension-interface"
          }
        },
        "required": ["sku", "qty"]
      },
      "inventory-source-selection-api-data-item-request-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\ItemRequestInterface"
      },
      "inventory-source-selection-api-data-inventory-request-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\InventoryRequestInterface",
        "properties": {
          "destination_address": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-address-interface"
          }
        }
      },
      "inventory-source-selection-api-data-address-interface": {
        "type": "object",
        "description": "Data interface for shipping source or shipping destination",
        "properties": {
          "country": {
            "type": "string",
            "description": "Shipping country"
          },
          "postcode": {
            "type": "string",
            "description": "Shipping postcode"
          },
          "street": {
            "type": "string",
            "description": "Shipping street address"
          },
          "region": {
            "type": "string",
            "description": "Shipping region"
          },
          "city": {
            "type": "string",
            "description": "Shipping city"
          }
        },
        "required": ["country", "postcode", "street", "region", "city"]
      },
      "inventory-source-selection-api-data-source-selection-result-interface": {
        "type": "object",
        "description": "Result of how we will deduct product qty from different Sources",
        "properties": {
          "source_selection_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-item-interface"
            }
          },
          "shippable": {
            "type": "boolean"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-result-extension-interface"
          }
        },
        "required": ["source_selection_items", "shippable"]
      },
      "inventory-source-selection-api-data-source-selection-item-interface": {
        "type": "object",
        "description": "Represents source selection result for the specific source and SKU",
        "properties": {
          "source_code": {
            "type": "string",
            "description": "Source code"
          },
          "sku": {
            "type": "string",
            "description": "Item SKU"
          },
          "qty_to_deduct": {
            "type": "number",
            "description": "Quantity which will be deducted for this source"
          },
          "qty_available": {
            "type": "number",
            "description": "Available quantity for this source"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-item-extension-interface"
          }
        },
        "required": ["source_code", "sku", "qty_to_deduct", "qty_available"]
      },
      "inventory-source-selection-api-data-source-selection-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\SourceSelectionItemInterface"
      },
      "inventory-source-selection-api-data-source-selection-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\SourceSelectionResultInterface"
      },
      "inventory-in-store-pickup-sales-api-data-result-interface": {
        "type": "object",
        "description": "Operation result object that contains status of the operation.",
        "properties": {
          "successful": {
            "type": "boolean",
            "description": "Operation result successful."
          },
          "errors": {
            "type": "array",
            "description": "Error information for failed operations.",
            "items": {
              "type": "string"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-sales-api-data-result-extension-interface"
          }
        },
        "required": ["successful", "errors"]
      },
      "inventory-in-store-pickup-sales-api-data-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupSalesApi\\Api\\Data\\ResultInterface"
      },
      "inventory-low-quantity-notification-api-data-source-item-configuration-interface": {
        "type": "object",
        "description": "Represents a Source Item Configuration object Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "source_code": {
            "type": "string",
            "description": "Source code"
          },
          "notify_stock_qty": {
            "type": "number",
            "description": "Notify stock qty"
          },
          "sku": {
            "type": "string",
            "description": "SKU"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-extension-interface"
          }
        }
      },
      "inventory-low-quantity-notification-api-data-source-item-configuration-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryLowQuantityNotificationApi\\Api\\Data\\SourceItemConfigurationInterface"
      },
      "adobe-stock-asset-api-data-asset-interface": {
        "type": "object",
        "description": "Adobe Stock Asset data class interface",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID"
          },
          "media_gallery_id": {
            "type": "integer",
            "description": "Media gallery asset id"
          },
          "category_id": {
            "type": "integer",
            "description": "Category"
          },
          "category": {
            "$ref": "#/components/schemas/adobe-stock-asset-api-data-category-interface"
          },
          "creator_id": {
            "type": "integer",
            "description": "The creator"
          },
          "creator": {
            "$ref": "#/components/schemas/adobe-stock-asset-api-data-creator-interface"
          },
          "is_licensed": {
            "type": "integer",
            "description": "Licensed"
          },
          "creation_date": {
            "type": "string",
            "description": "Creation date"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/adobe-stock-asset-api-data-asset-extension-interface"
          }
        },
        "required": ["media_gallery_id", "is_licensed", "creation_date"]
      },
      "adobe-stock-asset-api-data-category-interface": {
        "type": "object",
        "description": "Adobe Stock asset Category data class",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id"
          },
          "name": {
            "type": "string",
            "description": "The category name"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/adobe-stock-asset-api-data-category-extension-interface"
          }
        },
        "required": ["name", "extension_attributes"]
      },
      "adobe-stock-asset-api-data-category-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\AdobeStockAssetApi\\Api\\Data\\CategoryInterface"
      },
      "adobe-stock-asset-api-data-creator-interface": {
        "type": "object",
        "description": "Adobe Stock creator data class",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id"
          },
          "name": {
            "type": "string",
            "description": "The creator name"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/adobe-stock-asset-api-data-creator-extension-interface"
          }
        },
        "required": ["extension_attributes"]
      },
      "adobe-stock-asset-api-data-creator-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\AdobeStockAssetApi\\Api\\Data\\CreatorInterface"
      },
      "adobe-stock-asset-api-data-asset-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\AdobeStockAssetApi\\Api\\Data\\AssetInterface"
      },
      "adobe-stock-asset-api-data-asset-search-results-interface": {
        "type": "object",
        "description": "Interface AssetSearchResultsInterface",
        "properties": {
          "items": {
            "type": "array",
            "description": "Assets list.",
            "items": {
              "$ref": "#/components/schemas/adobe-stock-asset-api-data-asset-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "rma-data-track-interface": {
        "type": "object",
        "description": "Interface TrackInterface",
        "properties": {
          "entity_id": {
            "type": "integer",
            "description": "Entity id"
          },
          "rma_entity_id": {
            "type": "integer",
            "description": "Rma entity id"
          },
          "track_number": {
            "type": "string",
            "description": "Track number"
          },
          "carrier_title": {
            "type": "string",
            "description": "Carrier title"
          },
          "carrier_code": {
            "type": "string",
            "description": "Carrier code"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/rma-data-track-extension-interface"
          }
        },
        "required": ["entity_id", "rma_entity_id", "track_number", "carrier_title", "carrier_code"]
      },
      "rma-data-track-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\TrackInterface"
      },
      "rma-data-track-search-result-interface": {
        "type": "object",
        "description": "Interface TrackSearchResultInterface",
        "properties": {
          "items": {
            "type": "array",
            "description": "Rma list",
            "items": {
              "$ref": "#/components/schemas/rma-data-track-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "rma-data-rma-interface": {
        "type": "object",
        "description": "Interface RmaInterface",
        "properties": {
          "increment_id": {
            "type": "string",
            "description": "Entity_id"
          },
          "entity_id": {
            "type": "integer",
            "description": "Entity_id"
          },
          "order_id": {
            "type": "integer",
            "description": "Order_id"
          },
          "order_increment_id": {
            "type": "string",
            "description": "Order_increment_id"
          },
          "store_id": {
            "type": "integer",
            "description": "Store_id"
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer_id"
          },
          "date_requested": {
            "type": "string",
            "description": "Date_requested"
          },
          "customer_custom_email": {
            "type": "string",
            "description": "Customer_custom_email"
          },
          "items": {
            "type": "array",
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/rma-data-item-interface"
            }
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "comments": {
            "type": "array",
            "description": "Comments list",
            "items": {
              "$ref": "#/components/schemas/rma-data-comment-interface"
            }
          },
          "tracks": {
            "type": "array",
            "description": "Tracks list",
            "items": {
              "$ref": "#/components/schemas/rma-data-track-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/rma-data-rma-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": [
          "increment_id",
          "entity_id",
          "order_id",
          "order_increment_id",
          "store_id",
          "customer_id",
          "date_requested",
          "customer_custom_email",
          "items",
          "status",
          "comments",
          "tracks"
        ]
      },
      "rma-data-item-interface": {
        "type": "object",
        "description": "Interface CategoryInterface",
        "properties": {
          "entity_id": {
            "type": "integer",
            "description": "Id"
          },
          "rma_entity_id": {
            "type": "integer",
            "description": "RMA id"
          },
          "order_item_id": {
            "type": "integer",
            "description": "Order_item_id"
          },
          "qty_requested": {
            "type": "integer",
            "description": "Qty_requested"
          },
          "qty_authorized": {
            "type": "integer",
            "description": "Qty_authorized"
          },
          "qty_approved": {
            "type": "integer",
            "description": "Qty_approved"
          },
          "qty_returned": {
            "type": "integer",
            "description": "Qty_returned"
          },
          "reason": {
            "type": "string",
            "description": "Reason"
          },
          "condition": {
            "type": "string",
            "description": "Condition"
          },
          "resolution": {
            "type": "string",
            "description": "Resolution"
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/rma-data-item-extension-interface"
          }
        },
        "required": [
          "entity_id",
          "rma_entity_id",
          "order_item_id",
          "qty_requested",
          "qty_authorized",
          "qty_approved",
          "qty_returned",
          "reason",
          "condition",
          "resolution",
          "status"
        ]
      },
      "rma-data-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\ItemInterface"
      },
      "rma-data-comment-interface": {
        "type": "object",
        "description": "Interface CommentInterface",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment"
          },
          "rma_entity_id": {
            "type": "integer",
            "description": "Rma Id"
          },
          "created_at": {
            "type": "string",
            "description": "Created_at"
          },
          "entity_id": {
            "type": "integer",
            "description": "Entity_id"
          },
          "customer_notified": {
            "type": "boolean",
            "description": "Is_customer_notified"
          },
          "visible_on_front": {
            "type": "boolean",
            "description": "Is_visible_on_front"
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "admin": {
            "type": "boolean",
            "description": "Is_admin"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/rma-data-comment-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": [
          "comment",
          "rma_entity_id",
          "created_at",
          "entity_id",
          "customer_notified",
          "visible_on_front",
          "status",
          "admin"
        ]
      },
      "rma-data-comment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\CommentInterface"
      },
      "rma-data-rma-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\RmaInterface"
      },
      "rma-data-comment-search-result-interface": {
        "type": "object",
        "description": "Interface CommentSearchResultInterface",
        "properties": {
          "items": {
            "type": "array",
            "description": "Rma Status History list",
            "items": {
              "$ref": "#/components/schemas/rma-data-comment-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "rma-data-rma-search-result-interface": {
        "type": "object",
        "description": "Interface RmaSearchResultInterface",
        "properties": {
          "items": {
            "type": "array",
            "description": "Rma list",
            "items": {
              "$ref": "#/components/schemas/rma-data-rma-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "framework-metadata-object-interface": {
        "type": "object",
        "description": "Provides metadata about an attribute.",
        "properties": {
          "attribute_code": {
            "type": "string",
            "description": "Code of the attribute."
          }
        },
        "required": ["attribute_code"]
      },
      "payment-services-paypal-payment-config-response-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "apple_pay": {
            "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-apple-pay-interface"
          },
          "hosted_fields": {
            "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-hosted-fields-interface"
          },
          "smart_buttons": {
            "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-smart-buttons-interface"
          }
        },
        "required": ["apple_pay", "hosted_fields", "smart_buttons"]
      },
      "payment-services-paypal-data-payment-config-apple-pay-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "button_styles": {
            "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-button-styles-interface"
          },
          "payment_source": {
            "type": "string",
            "description": "PaymentSource"
          },
          "code": {
            "type": "string",
            "description": "Code"
          },
          "sdk_params": {
            "type": "array",
            "description": "SDK params",
            "items": {
              "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-sdk-params-interface"
            }
          },
          "is_visible": {
            "type": "boolean",
            "description": "Visible"
          },
          "sort_order": {
            "type": "string",
            "description": "Sort Order"
          },
          "payment_intent": {
            "type": "string",
            "description": "Payment intent"
          },
          "title": {
            "type": "string",
            "description": "Title"
          }
        },
        "required": [
          "button_styles",
          "payment_source",
          "code",
          "sdk_params",
          "is_visible",
          "sort_order",
          "payment_intent",
          "title"
        ]
      },
      "payment-services-paypal-data-payment-config-button-styles-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "layout": {
            "type": "string",
            "description": "Layout"
          },
          "color": {
            "type": "string",
            "description": "Color"
          },
          "shape": {
            "type": "string",
            "description": "Shape"
          },
          "label": {
            "type": "string",
            "description": "Label"
          },
          "tagline": {
            "type": "boolean",
            "description": "ShowTagline"
          },
          "height": {
            "type": "integer",
            "description": "Height"
          },
          "use_default_height": {
            "type": "boolean",
            "description": "Height"
          }
        },
        "required": ["layout", "color", "shape", "label", "tagline", "height", "use_default_height"]
      },
      "payment-services-paypal-data-payment-config-sdk-params-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "name": {
            "type": "string",
            "description": "Code"
          },
          "value": {
            "type": "string",
            "description": "Config"
          }
        },
        "required": ["name", "value"]
      },
      "payment-services-paypal-data-payment-config-hosted-fields-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "payment_source": {
            "type": "string",
            "description": "Payment Source"
          },
          "three_d_s": {
            "type": "string",
            "description": "ThreeDS"
          },
          "is_vault_enabled": {
            "type": "boolean",
            "description": "HasIsVaultEnabled"
          },
          "cc_vault_code": {
            "type": "string",
            "description": "CcVaultCode"
          },
          "requires_card_details": {
            "type": "boolean",
            "description": "RequiresCardDetails"
          },
          "code": {
            "type": "string",
            "description": "Code"
          },
          "sdk_params": {
            "type": "array",
            "description": "SDK params",
            "items": {
              "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-sdk-params-interface"
            }
          },
          "is_visible": {
            "type": "boolean",
            "description": "Visible"
          },
          "sort_order": {
            "type": "string",
            "description": "Sort Order"
          },
          "payment_intent": {
            "type": "string",
            "description": "Payment intent"
          },
          "title": {
            "type": "string",
            "description": "Title"
          }
        },
        "required": [
          "payment_source",
          "three_d_s",
          "is_vault_enabled",
          "cc_vault_code",
          "requires_card_details",
          "code",
          "sdk_params",
          "is_visible",
          "sort_order",
          "payment_intent",
          "title"
        ]
      },
      "payment-services-paypal-data-payment-config-smart-buttons-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "display_message": {
            "type": "boolean",
            "description": "CanDisplayMessage"
          },
          "display_venmo": {
            "type": "boolean",
            "description": "Venmo"
          },
          "message_styles": {
            "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-smart-buttons-message-styles-interface"
          },
          "button_styles": {
            "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-button-styles-interface"
          },
          "code": {
            "type": "string",
            "description": "Code"
          },
          "sdk_params": {
            "type": "array",
            "description": "SDK params",
            "items": {
              "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-sdk-params-interface"
            }
          },
          "is_visible": {
            "type": "boolean",
            "description": "Visible"
          },
          "sort_order": {
            "type": "string",
            "description": "Sort Order"
          },
          "payment_intent": {
            "type": "string",
            "description": "Payment intent"
          },
          "title": {
            "type": "string",
            "description": "Title"
          }
        },
        "required": [
          "display_message",
          "display_venmo",
          "message_styles",
          "button_styles",
          "code",
          "sdk_params",
          "is_visible",
          "sort_order",
          "payment_intent",
          "title"
        ]
      },
      "payment-services-paypal-data-payment-config-smart-buttons-message-styles-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "layout": {
            "type": "string",
            "description": "CanDisplayMessage"
          },
          "logo": {
            "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-smart-buttons-logo-interface"
          }
        },
        "required": ["layout", "logo"]
      },
      "payment-services-paypal-data-payment-config-smart-buttons-logo-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "type": {
            "type": "string",
            "description": "CanDisplayMessage"
          }
        },
        "required": ["type"]
      },
      "payment-services-paypal-data-payment-order-interface": {
        "type": "object",
        "description": "Interface PaymentOrderInterface",
        "properties": {
          "id": {
            "type": "string",
            "description": "Payment order id"
          },
          "mp_order_id": {
            "type": "string",
            "description": "Payment order mpOrderId"
          },
          "status": {
            "type": "string",
            "description": "Payment order status"
          }
        },
        "required": ["id", "mp_order_id", "status"]
      },
      "payment-services-paypal-data-payment-order-details-interface": {
        "type": "object",
        "description": "Interface PaymentOrderDetailsInterface",
        "properties": {
          "payment_source_details": {
            "$ref": "#/components/schemas/payment-services-paypal-data-payment-source-details-interface"
          },
          "id": {
            "type": "string",
            "description": "Payment order id"
          },
          "mp_order_id": {
            "type": "string",
            "description": "Payment order mpOrderId"
          },
          "status": {
            "type": "string",
            "description": "Payment order status"
          }
        },
        "required": ["payment_source_details", "id", "mp_order_id", "status"]
      },
      "payment-services-paypal-data-payment-source-details-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "card": {
            "$ref": "#/components/schemas/payment-services-paypal-data-payment-card-details-interface"
          }
        },
        "required": ["card"]
      },
      "payment-services-paypal-data-payment-card-details-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "last_digits": {
            "type": "string",
            "description": "Last digits"
          },
          "card_expiry_month": {
            "type": "string",
            "description": "Card expiry month"
          },
          "card_expiry_year": {
            "type": "string",
            "description": "Card expiry year"
          },
          "bin_details": {
            "$ref": "#/components/schemas/payment-services-paypal-data-payment-card-bin-details-interface"
          }
        },
        "required": ["name", "last_digits", "card_expiry_month", "card_expiry_year", "bin_details"]
      },
      "payment-services-paypal-data-payment-card-bin-details-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "bin": {
            "type": "string",
            "description": "Bin"
          }
        },
        "required": ["bin"]
      },
      "payment-services-paypal-data-payment-sdk-params-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "code": {
            "type": "string",
            "description": "The payments sdk code"
          },
          "params": {
            "type": "array",
            "description": "The payments sdk params",
            "items": {
              "$ref": "#/components/schemas/payment-services-paypal-data-payment-config-sdk-params-interface"
            }
          }
        },
        "required": ["code", "params"]
      },
      "asynchronous-operations-data-detailed-bulk-operations-status-interface": {
        "type": "object",
        "description": "Interface BulkStatusInterface Bulk summary data with list of operations items full data.",
        "properties": {
          "operations_list": {
            "type": "array",
            "description": "Operations list.",
            "items": {
              "$ref": "#/components/schemas/asynchronous-operations-data-operation-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/asynchronous-operations-data-bulk-summary-extension-interface"
          },
          "user_type": {
            "type": "integer",
            "description": "User type"
          },
          "bulk_id": {
            "type": "string",
            "description": "Bulk uuid"
          },
          "description": {
            "type": "string",
            "description": "Bulk description"
          },
          "start_time": {
            "type": "string",
            "description": "Bulk scheduled time"
          },
          "user_id": {
            "type": "integer",
            "description": "User id"
          },
          "operation_count": {
            "type": "integer",
            "description": "Total number of operations scheduled in scope of this bulk"
          }
        },
        "required": [
          "operations_list",
          "user_type",
          "bulk_id",
          "description",
          "start_time",
          "user_id",
          "operation_count"
        ]
      },
      "asynchronous-operations-data-operation-interface": {
        "type": "object",
        "description": "Class OperationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/asynchronous-operations-data-operation-extension-interface"
          },
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "bulk_uuid": {
            "type": "string",
            "description": "Bulk uuid"
          },
          "topic_name": {
            "type": "string",
            "description": "Queue Topic"
          },
          "serialized_data": {
            "type": "string",
            "description": "Data"
          },
          "result_serialized_data": {
            "type": "string",
            "description": "Serialized Data"
          },
          "status": {
            "type": "integer",
            "description": "Operation status"
          },
          "result_message": {
            "type": "string",
            "description": "Result message"
          },
          "error_code": {
            "type": "integer",
            "description": "Error code"
          }
        },
        "required": [
          "id",
          "bulk_uuid",
          "topic_name",
          "serialized_data",
          "result_serialized_data",
          "status",
          "result_message",
          "error_code"
        ]
      },
      "asynchronous-operations-data-operation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\AsynchronousOperations\\Api\\Data\\OperationInterface",
        "properties": {
          "start_time": {
            "type": "string"
          }
        }
      },
      "asynchronous-operations-data-bulk-summary-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\AsynchronousOperations\\Api\\Data\\BulkSummaryInterface"
      },
      "asynchronous-operations-data-bulk-operations-status-interface": {
        "type": "object",
        "description": "Interface BulkStatusInterface Bulk summary data with list of operations items summary data.",
        "properties": {
          "operations_list": {
            "type": "array",
            "description": "List of operation with statuses (short data).",
            "items": {
              "$ref": "#/components/schemas/asynchronous-operations-data-summary-operation-status-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/asynchronous-operations-data-bulk-summary-extension-interface"
          },
          "user_type": {
            "type": "integer",
            "description": "User type"
          },
          "bulk_id": {
            "type": "string",
            "description": "Bulk uuid"
          },
          "description": {
            "type": "string",
            "description": "Bulk description"
          },
          "start_time": {
            "type": "string",
            "description": "Bulk scheduled time"
          },
          "user_id": {
            "type": "integer",
            "description": "User id"
          },
          "operation_count": {
            "type": "integer",
            "description": "Total number of operations scheduled in scope of this bulk"
          }
        },
        "required": [
          "operations_list",
          "user_type",
          "bulk_id",
          "description",
          "start_time",
          "user_id",
          "operation_count"
        ]
      },
      "asynchronous-operations-data-summary-operation-status-interface": {
        "type": "object",
        "description": "Getter Class OperationsStatusInterface Instead of OperationInterface this class don't provide all operation data and not responsive to set any data, just to get operation data without serialized_data and result_serialized_data",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "status": {
            "type": "integer",
            "description": "Operation status"
          },
          "result_message": {
            "type": "string",
            "description": "Result message"
          },
          "error_code": {
            "type": "integer",
            "description": "Error code"
          }
        },
        "required": ["id", "status", "result_message", "error_code"]
      },
      "asynchronous-operations-data-operation-search-results-interface": {
        "type": "object",
        "description": "Bulk operation search result interface. An bulk is a group of queue messages. An bulk operation item is a queue message.",
        "properties": {
          "items": {
            "type": "array",
            "description": "List of operations.",
            "items": {
              "$ref": "#/components/schemas/asynchronous-operations-data-operation-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": ["items", "search_criteria", "total_count"]
      },
      "pay-pal-braintree-data-auth-data-interface": {
        "type": "object",
        "description": "Interface AuthDataInterface",
        "properties": {
          "client_token": {
            "type": "string",
            "description": "Client token"
          },
          "display_name": {
            "type": "string",
            "description": "Display name"
          },
          "action_success": {
            "type": "string",
            "description": "To success page"
          },
          "logged_in": {
            "type": "boolean"
          },
          "store_code": {
            "type": "string",
            "description": "Current store code"
          }
        },
        "required": ["display_name", "action_success", "logged_in", "store_code"]
      },
      "pay-pal-braintree-data-payment-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "payment_method_code": {
            "type": "string",
            "description": "The payment method code."
          },
          "payment_method_nonce": {
            "type": "string",
            "description": "The payment method nonce."
          },
          "device_data": {
            "type": "string",
            "description": "The device data."
          }
        }
      }
    }
  }
}
