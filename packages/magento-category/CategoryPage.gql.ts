// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

export const CategoryPageDocument: DocumentNode<CategoryPageQuery, CategoryPageQueryVariables> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'CategoryPage' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: { kind: 'Variable', name: { kind: 'Name', value: 'urlPath' } },
          type: {
            kind: 'NonNullType',
            type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'categories' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'filters' },
                value: {
                  kind: 'ObjectValue',
                  fields: [
                    {
                      kind: 'ObjectField',
                      name: { kind: 'Name', value: 'url_path' },
                      value: {
                        kind: 'ObjectValue',
                        fields: [
                          {
                            kind: 'ObjectField',
                            name: { kind: 'Name', value: 'eq' },
                            value: { kind: 'Variable', name: { kind: 'Name', value: 'urlPath' } },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'items' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'description' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'name' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'display_mode' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'children' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                            { kind: 'Field', name: { kind: 'Name', value: 'name' } },
                            { kind: 'Field', name: { kind: 'Name', value: 'level' } },
                            { kind: 'Field', name: { kind: 'Name', value: 'url_path' } },
                          ],
                        },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'meta_title' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'meta_description' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'level' },
                        arguments: [],
                        directives: [],
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'is_anchor' },
                        arguments: [],
                        directives: [],
                      },
                      {
                        kind: 'InlineFragment',
                        typeCondition: {
                          kind: 'NamedType',
                          name: { kind: 'Name', value: 'CategoryInterface' },
                        },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'breadcrumbs' },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  { kind: 'Field', name: { kind: 'Name', value: 'category_id' } },
                                  { kind: 'Field', name: { kind: 'Name', value: 'category_name' } },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'category_url_path' },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
}
export type CategoryPageQueryVariables = Types.Exact<{
  urlPath: Types.Scalars['String']
}>

export type CategoryPageQuery = {
  categories?: Types.Maybe<{
    items?: Types.Maybe<
      Array<
        Types.Maybe<
          Pick<
            Types.CategoryTree,
            | 'description'
            | 'name'
            | 'display_mode'
            | 'meta_title'
            | 'meta_description'
            | 'level'
            | 'is_anchor'
          > & {
            breadcrumbs?: Types.Maybe<
              Array<
                Types.Maybe<
                  Pick<Types.Breadcrumb, 'category_id' | 'category_name' | 'category_url_path'>
                >
              >
            >
            children?: Types.Maybe<
              Array<Types.Maybe<Pick<Types.CategoryTree, 'id' | 'name' | 'level' | 'url_path'>>>
            >
          }
        >
      >
    >
  }>
}
