// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

import {
  CartAddress_BillingCartAddress_Fragment,
  CartAddress_ShippingCartAddress_Fragment,
  CartAddressFragmentDoc,
} from '../cart-address/CartAddress.gql'
import {
  AvailableShippingMethodFragment,
  AvailableShippingMethodFragmentDoc,
} from '../shipping-method/AvailableShippingMethod.gql'
import {
  SelectedShippingMethodFragment,
  SelectedShippingMethodFragmentDoc,
} from './SelectedShippingMethod.gql'

export const ShippingCartAddressFragmentDoc: DocumentNode<ShippingCartAddressFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ShippingCartAddress' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'ShippingCartAddress' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'FragmentSpread', name: { kind: 'Name', value: 'CartAddress' } },
          { kind: 'Field', name: { kind: 'Name', value: 'customer_notes' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'selected_shipping_method' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'SelectedShippingMethod' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'available_shipping_methods' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'AvailableShippingMethod' },
                },
              ],
            },
          },
        ],
      },
    },
    ...CartAddressFragmentDoc.definitions,
    ...SelectedShippingMethodFragmentDoc.definitions,
    ...AvailableShippingMethodFragmentDoc.definitions,
  ],
}
export type ShippingCartAddressFragment = Pick<Types.ShippingCartAddress, 'customer_notes'> & {
  selected_shipping_method?: Types.Maybe<SelectedShippingMethodFragment>
  available_shipping_methods?: Types.Maybe<Array<Types.Maybe<AvailableShippingMethodFragment>>>
} & CartAddress_ShippingCartAddress_Fragment
