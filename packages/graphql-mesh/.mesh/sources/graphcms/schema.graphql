schema {
  query: Query
  mutation: Mutation
}

directive @defaultOverride(
  """
  List of arguments for which the defaults should be overridden. Currently only supports 'stage' and 'locales'.
  """
  args: [String!]!
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @mark(
  """Marks if field is localized"""
  localized: Boolean
  """Marks if value is default"""
  default: Boolean
  """Marks the pageInfo"""
  pageInfo: Boolean
  """Marks an aggregate type"""
  aggregate: Boolean
  """Marks a countable type"""
  countable: Boolean
  """Marks an edge type"""
  edge: Boolean
  """Marks a locale enum"""
  locale: Boolean
  """Marks asset url handler"""
  url: Boolean
  """Marks type of mutation kind"""
  mutationKind: _MutationKind
  """Marks kind of mutation input field"""
  mutationInputFieldKind: _MutationInputFieldKind
  """Marks filter and links to parent type"""
  filter: String
  """Marks filter kind"""
  filterKind: _FilterKind
  """Marks if corresponding field is list"""
  filterIsList: Boolean
  """Marks order by"""
  order: Boolean
  """Marks order direction"""
  orderDirection: _OrderDirection
  """Link to the Main type of the connection"""
  connection: String
  """Marks localizations field"""
  localizations: Boolean
  """Marks versions field on model"""
  modelVersions: Boolean
  """Marks document version field on Query"""
  documentVersion: Boolean
  """Marks stages field"""
  stages: Boolean
  """Specifies system createdAt field"""
  createdAtField: String
  """Specifies system updatedAt field"""
  updatedAtField: String
  """Specifies relation input kind"""
  relationInputKind: _RelationInputKind
  """
  Specifies relation kind (e.g. union relation or regular field relation)
  """
  relationKind: _RelationKind
  """Specifies relation input cardinality"""
  relationInputCardinality: _RelationInputCardinality
  """Specifies relation input cardinality of reverse side"""
  reverseRelationInputCardinality: _RelationInputCardinality
  """Specifies model create input type"""
  createInputType: String
  """Specifies model create localization type"""
  createLocalizationInputType: String
  """Specifies GraphCMS field type"""
  fieldType: String
  """Specifies WhereUniqueInput type name"""
  whereUniqueInput: String
  """Specifies ConnectInput type name"""
  connectInput: String
  """Specifies whether type is connect input"""
  isConnectInput: Boolean
  """
  Specifies relation input to be for abstract member type, not known master / origin side
  """
  isMemberInput: Boolean
  """Specifies union type name"""
  unionType: String
  """Specifies model a type is part of"""
  model: String
  """Specifies mode of system DateTime fields"""
  systemDateTimeFieldVariation: _SystemDateTimeFieldVariation
  """
  If versioned, documents of this model will be able to hold this amount of versions per stage
  """
  versionRetentionCount: Int
  """If versioned, on publishing versions older than x days will be dropped"""
  versionRetentionPeriod: Int
  """Adds field validations"""
  validations: String
  """The model's storage ID"""
  storageId: String
  """Marks richText field return type"""
  isRichTextType: Boolean
  """Marks list richText field return type"""
  isListRichText: Boolean
  """The name of the associated RichText type"""
  richTextType: String
  """Marks relation fields that do not have a reverse side counterpart"""
  isUnidirectional: Boolean
  """
  Specifies if the filter's value can be replaced by the current user's id
  """
  replaceableWithUserId: Boolean
  """marks if field is required (non-null)"""
  isRequired: Boolean
  """marks if type is a component"""
  isComponent: Boolean
  """marks if a input type allows to set position in addition to data"""
  isPositionInput: Boolean
) on OBJECT | FIELD_DEFINITION | ENUM_VALUE | ENUM | INPUT_FIELD_DEFINITION | INPUT_OBJECT | ARGUMENT_DEFINITION | UNION

directive @permission(
  """Policy resource names."""
  resources: [String!]
  """Policy action names."""
  actions: [String!]
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @psql(
  """postgres table name"""
  table: String
  """postgres localization table name"""
  localizationTable: String
  """postgres column name"""
  column: String
  """hardcoded postgres id value for enums"""
  id: String
  """postgres join on name"""
  join: String
  """Specifies column for system id field"""
  idColumn: String
  """Specifies column for native sorting for relational fields"""
  prio: String
  """Specifies columns for union member fields"""
  memberColumns: [String!]
  """Specifies system updatedAt column"""
  updatedAtColumn: String
  """
  Specifies the value used to fill the parent_field column that's used to identify the parent field a component got created for
  """
  componentParentFieldValue: String
  """postgres table name for the versions"""
  versionTable: String
) on OBJECT | FIELD_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION | ENUM | INPUT_OBJECT | ARGUMENT_DEFINITION

directive @remote(
  """url to fetch the remote content from"""
  url: String!
  """HTTP method used to fetch the remote content from"""
  method: String!
  """Which type of api should be called. Currently supported: GRAPHQL, REST"""
  sourceType: String!
  """optional headers that will be sent in the remote call"""
  headers: Json
  """
  list of field storage ids that will be fetched in any case from the content db to make them available for {{doc.*}} template placeholders in headers, parameters etc for the remote call
  """
  docPlaceholderFields: [String!]!
  """optional ttl value used for caching"""
  ttlInSeconds: Int
  """
  Flag whether to pass headers that are sent by the client to the remote source or not
  """
  forwardClientHeaders: Boolean!
  """
  GraphQL entry point query that will be used to fetch the remote type in case of a remote GraphQL PI
  """
  gqlQuery: String
  """Operation name of the gqlQuery in case of a remote GraphQL API"""
  gqlOperationName: String
  """
  JSON path pointing to the entry point type that is defined by the GraphQL Query.
  """
  gqlEntryPointPath: [String!]
  """Flag whether debug options are enabled on a given field or not"""
  debugEnabled: Boolean!
) on FIELD_DEFINITION

type Aggregate {
  count: Int!
}

"""Asset system model"""
type Asset implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [Asset!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Asset!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  """The file handle"""
  handle: String!
  """The file name"""
  fileName: String!
  """The height of the file"""
  height: Float
  """The file width"""
  width: Float
  """The file size"""
  size: Float
  """The mime type of the file"""
  mimeType: String
  alt: String
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  assetRowHeroBanner(
    where: RowHeroBannerWhereInput
    orderBy: RowHeroBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `assetRowHeroBanner` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowHeroBanner!]!
  rowSpecialBannerAsset(
    where: RowSpecialBannerWhereInput
    orderBy: RowSpecialBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowSpecialBannerAsset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowSpecialBanner!]!
  assetPage(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `assetPage` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  assetPageLink(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `assetPageLink` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  assetRowProduct(
    where: RowProductWhereInput
    orderBy: RowProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `assetRowProduct` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowProduct!]!
  imageBanner(
    where: BannerWhereInput
    orderBy: BannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `imageBanner` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Banner!]!
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  """List of Asset versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
  """Get the url for the asset with provided transformations applied."""
  url(transformation: AssetTransformationInput): String!
}

input AssetConnectInput {
  """Document to connect"""
  where: AssetWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type AssetConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [AssetEdge!]!
  aggregate: Aggregate!
}

input AssetCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  """alt input for default locale (en)"""
  alt: String
  assetRowHeroBanner: RowHeroBannerCreateManyInlineInput
  rowSpecialBannerAsset: RowSpecialBannerCreateManyInlineInput
  assetPage: PageCreateManyInlineInput
  assetPageLink: PageLinkCreateManyInlineInput
  assetRowProduct: RowProductCreateManyInlineInput
  imageBanner: BannerCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: AssetCreateLocalizationsInput
}

input AssetCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  alt: String
}

input AssetCreateLocalizationInput {
  """Localization input"""
  data: AssetCreateLocalizationDataInput!
  locale: Locale!
}

input AssetCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [AssetCreateLocalizationInput!]
}

input AssetCreateManyInlineInput {
  """Create and connect multiple existing Asset documents"""
  create: [AssetCreateInput!]
  """Connect multiple existing Asset documents"""
  connect: [AssetWhereUniqueInput!]
}

input AssetCreateOneInlineInput {
  """Create and connect one Asset document"""
  create: AssetCreateInput
  """Connect one existing Asset document"""
  connect: AssetWhereUniqueInput
}

"""An edge in a connection."""
type AssetEdge {
  """The item at the end of the edge."""
  node: Asset!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input AssetManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]
  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  assetRowHeroBanner_every: RowHeroBannerWhereInput
  assetRowHeroBanner_some: RowHeroBannerWhereInput
  assetRowHeroBanner_none: RowHeroBannerWhereInput
  rowSpecialBannerAsset_every: RowSpecialBannerWhereInput
  rowSpecialBannerAsset_some: RowSpecialBannerWhereInput
  rowSpecialBannerAsset_none: RowSpecialBannerWhereInput
  assetPage_every: PageWhereInput
  assetPage_some: PageWhereInput
  assetPage_none: PageWhereInput
  assetPageLink_every: PageLinkWhereInput
  assetPageLink_some: PageLinkWhereInput
  assetPageLink_none: PageLinkWhereInput
  assetRowProduct_every: RowProductWhereInput
  assetRowProduct_some: RowProductWhereInput
  assetRowProduct_none: RowProductWhereInput
  imageBanner_every: BannerWhereInput
  imageBanner_some: BannerWhereInput
  imageBanner_none: BannerWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
}

enum AssetOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  handle_ASC
  handle_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  width_ASC
  width_DESC
  size_ASC
  size_DESC
  mimeType_ASC
  mimeType_DESC
  alt_ASC
  alt_DESC
}

"""Transformations for Assets"""
input AssetTransformationInput {
  image: ImageTransformationInput
  document: DocumentTransformationInput
  """Pass true if you want to validate the passed transformation parameters"""
  validateOptions: Boolean = false
}

input AssetUpdateInput {
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  """alt input for default locale (en)"""
  alt: String
  assetRowHeroBanner: RowHeroBannerUpdateManyInlineInput
  rowSpecialBannerAsset: RowSpecialBannerUpdateManyInlineInput
  assetPage: PageUpdateManyInlineInput
  assetPageLink: PageLinkUpdateManyInlineInput
  assetRowProduct: RowProductUpdateManyInlineInput
  imageBanner: BannerUpdateManyInlineInput
  """Manage document localizations"""
  localizations: AssetUpdateLocalizationsInput
}

input AssetUpdateLocalizationDataInput {
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  alt: String
}

input AssetUpdateLocalizationInput {
  data: AssetUpdateLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateLocalizationsInput {
  """Localizations to create"""
  create: [AssetCreateLocalizationInput!]
  """Localizations to update"""
  update: [AssetUpdateLocalizationInput!]
  upsert: [AssetUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input AssetUpdateManyInlineInput {
  """Create and connect multiple Asset documents"""
  create: [AssetCreateInput!]
  """Connect multiple existing Asset documents"""
  connect: [AssetConnectInput!]
  """
  Override currently-connected documents with multiple existing Asset documents
  """
  set: [AssetWhereUniqueInput!]
  """Update multiple Asset documents"""
  update: [AssetUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Asset documents"""
  upsert: [AssetUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Asset documents"""
  disconnect: [AssetWhereUniqueInput!]
  """Delete multiple Asset documents"""
  delete: [AssetWhereUniqueInput!]
}

input AssetUpdateManyInput {
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  """alt input for default locale (en)"""
  alt: String
  """Optional updates to localizations"""
  localizations: AssetUpdateManyLocalizationsInput
}

input AssetUpdateManyLocalizationDataInput {
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  alt: String
}

input AssetUpdateManyLocalizationInput {
  data: AssetUpdateManyLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [AssetUpdateManyLocalizationInput!]
}

input AssetUpdateManyWithNestedWhereInput {
  """Document search"""
  where: AssetWhereInput!
  """Update many input"""
  data: AssetUpdateManyInput!
}

input AssetUpdateOneInlineInput {
  """Create and connect one Asset document"""
  create: AssetCreateInput
  """Update single Asset document"""
  update: AssetUpdateWithNestedWhereUniqueInput
  """Upsert single Asset document"""
  upsert: AssetUpsertWithNestedWhereUniqueInput
  """Connect existing Asset document"""
  connect: AssetWhereUniqueInput
  """Disconnect currently connected Asset document"""
  disconnect: Boolean
  """Delete currently connected Asset document"""
  delete: Boolean
}

input AssetUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: AssetWhereUniqueInput!
  """Document to update"""
  data: AssetUpdateInput!
}

input AssetUpsertInput {
  """Create document if it didn't exist"""
  create: AssetCreateInput!
  """Update document if it exists"""
  update: AssetUpdateInput!
}

input AssetUpsertLocalizationInput {
  update: AssetUpdateLocalizationDataInput!
  create: AssetCreateLocalizationDataInput!
  locale: Locale!
}

input AssetUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: AssetWhereUniqueInput!
  """Upsert data"""
  data: AssetUpsertInput!
}

"""Identifies documents"""
input AssetWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]
  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  handle: String
  """All values that are not equal to given value."""
  handle_not: String
  """All values that are contained in given list."""
  handle_in: [String!]
  """All values that are not contained in given list."""
  handle_not_in: [String!]
  """All values containing the given string."""
  handle_contains: String
  """All values not containing the given string."""
  handle_not_contains: String
  """All values starting with the given string."""
  handle_starts_with: String
  """All values not starting with the given string."""
  handle_not_starts_with: String
  """All values ending with the given string."""
  handle_ends_with: String
  """All values not ending with the given string"""
  handle_not_ends_with: String
  fileName: String
  """All values that are not equal to given value."""
  fileName_not: String
  """All values that are contained in given list."""
  fileName_in: [String!]
  """All values that are not contained in given list."""
  fileName_not_in: [String!]
  """All values containing the given string."""
  fileName_contains: String
  """All values not containing the given string."""
  fileName_not_contains: String
  """All values starting with the given string."""
  fileName_starts_with: String
  """All values not starting with the given string."""
  fileName_not_starts_with: String
  """All values ending with the given string."""
  fileName_ends_with: String
  """All values not ending with the given string"""
  fileName_not_ends_with: String
  height: Float
  """All values that are not equal to given value."""
  height_not: Float
  """All values that are contained in given list."""
  height_in: [Float!]
  """All values that are not contained in given list."""
  height_not_in: [Float!]
  """All values less than the given value."""
  height_lt: Float
  """All values less than or equal the given value."""
  height_lte: Float
  """All values greater than the given value."""
  height_gt: Float
  """All values greater than or equal the given value."""
  height_gte: Float
  width: Float
  """All values that are not equal to given value."""
  width_not: Float
  """All values that are contained in given list."""
  width_in: [Float!]
  """All values that are not contained in given list."""
  width_not_in: [Float!]
  """All values less than the given value."""
  width_lt: Float
  """All values less than or equal the given value."""
  width_lte: Float
  """All values greater than the given value."""
  width_gt: Float
  """All values greater than or equal the given value."""
  width_gte: Float
  size: Float
  """All values that are not equal to given value."""
  size_not: Float
  """All values that are contained in given list."""
  size_in: [Float!]
  """All values that are not contained in given list."""
  size_not_in: [Float!]
  """All values less than the given value."""
  size_lt: Float
  """All values less than or equal the given value."""
  size_lte: Float
  """All values greater than the given value."""
  size_gt: Float
  """All values greater than or equal the given value."""
  size_gte: Float
  mimeType: String
  """All values that are not equal to given value."""
  mimeType_not: String
  """All values that are contained in given list."""
  mimeType_in: [String!]
  """All values that are not contained in given list."""
  mimeType_not_in: [String!]
  """All values containing the given string."""
  mimeType_contains: String
  """All values not containing the given string."""
  mimeType_not_contains: String
  """All values starting with the given string."""
  mimeType_starts_with: String
  """All values not starting with the given string."""
  mimeType_not_starts_with: String
  """All values ending with the given string."""
  mimeType_ends_with: String
  """All values not ending with the given string"""
  mimeType_not_ends_with: String
  alt: String
  """All values that are not equal to given value."""
  alt_not: String
  """All values that are contained in given list."""
  alt_in: [String!]
  """All values that are not contained in given list."""
  alt_not_in: [String!]
  """All values containing the given string."""
  alt_contains: String
  """All values not containing the given string."""
  alt_not_contains: String
  """All values starting with the given string."""
  alt_starts_with: String
  """All values not starting with the given string."""
  alt_not_starts_with: String
  """All values ending with the given string."""
  alt_ends_with: String
  """All values not ending with the given string"""
  alt_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  assetRowHeroBanner_every: RowHeroBannerWhereInput
  assetRowHeroBanner_some: RowHeroBannerWhereInput
  assetRowHeroBanner_none: RowHeroBannerWhereInput
  rowSpecialBannerAsset_every: RowSpecialBannerWhereInput
  rowSpecialBannerAsset_some: RowSpecialBannerWhereInput
  rowSpecialBannerAsset_none: RowSpecialBannerWhereInput
  assetPage_every: PageWhereInput
  assetPage_some: PageWhereInput
  assetPage_none: PageWhereInput
  assetPageLink_every: PageLinkWhereInput
  assetPageLink_some: PageLinkWhereInput
  assetPageLink_none: PageLinkWhereInput
  assetRowProduct_every: RowProductWhereInput
  assetRowProduct_some: RowProductWhereInput
  assetRowProduct_none: RowProductWhereInput
  imageBanner_every: BannerWhereInput
  imageBanner_some: BannerWhereInput
  imageBanner_none: BannerWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
}

"""References Asset record uniquely"""
input AssetWhereUniqueInput {
  id: ID
}

type Banner implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [Banner!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Banner!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  copy: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  image(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `image` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of Banner versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input BannerConnectInput {
  """Document to connect"""
  where: BannerWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type BannerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [BannerEdge!]!
  aggregate: Aggregate!
}

input BannerCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """copy input for default locale (en)"""
  copy: RichTextAST!
  image: AssetCreateOneInlineInput
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: BannerCreateLocalizationsInput
}

input BannerCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  copy: RichTextAST!
}

input BannerCreateLocalizationInput {
  """Localization input"""
  data: BannerCreateLocalizationDataInput!
  locale: Locale!
}

input BannerCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [BannerCreateLocalizationInput!]
}

input BannerCreateManyInlineInput {
  """Create and connect multiple existing Banner documents"""
  create: [BannerCreateInput!]
  """Connect multiple existing Banner documents"""
  connect: [BannerWhereUniqueInput!]
}

input BannerCreateOneInlineInput {
  """Create and connect one Banner document"""
  create: BannerCreateInput
  """Connect one existing Banner document"""
  connect: BannerWhereUniqueInput
}

"""An edge in a connection."""
type BannerEdge {
  """The item at the end of the edge."""
  node: Banner!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input BannerManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [BannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [BannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [BannerWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  image: AssetWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum BannerOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input BannerUpdateInput {
  identity: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  image: AssetUpdateOneInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: BannerUpdateLocalizationsInput
}

input BannerUpdateLocalizationDataInput {
  copy: RichTextAST
}

input BannerUpdateLocalizationInput {
  data: BannerUpdateLocalizationDataInput!
  locale: Locale!
}

input BannerUpdateLocalizationsInput {
  """Localizations to create"""
  create: [BannerCreateLocalizationInput!]
  """Localizations to update"""
  update: [BannerUpdateLocalizationInput!]
  upsert: [BannerUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input BannerUpdateManyInlineInput {
  """Create and connect multiple Banner documents"""
  create: [BannerCreateInput!]
  """Connect multiple existing Banner documents"""
  connect: [BannerConnectInput!]
  """
  Override currently-connected documents with multiple existing Banner documents
  """
  set: [BannerWhereUniqueInput!]
  """Update multiple Banner documents"""
  update: [BannerUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Banner documents"""
  upsert: [BannerUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Banner documents"""
  disconnect: [BannerWhereUniqueInput!]
  """Delete multiple Banner documents"""
  delete: [BannerWhereUniqueInput!]
}

input BannerUpdateManyInput {
  """copy input for default locale (en)"""
  copy: RichTextAST
  """Optional updates to localizations"""
  localizations: BannerUpdateManyLocalizationsInput
}

input BannerUpdateManyLocalizationDataInput {
  copy: RichTextAST
}

input BannerUpdateManyLocalizationInput {
  data: BannerUpdateManyLocalizationDataInput!
  locale: Locale!
}

input BannerUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [BannerUpdateManyLocalizationInput!]
}

input BannerUpdateManyWithNestedWhereInput {
  """Document search"""
  where: BannerWhereInput!
  """Update many input"""
  data: BannerUpdateManyInput!
}

input BannerUpdateOneInlineInput {
  """Create and connect one Banner document"""
  create: BannerCreateInput
  """Update single Banner document"""
  update: BannerUpdateWithNestedWhereUniqueInput
  """Upsert single Banner document"""
  upsert: BannerUpsertWithNestedWhereUniqueInput
  """Connect existing Banner document"""
  connect: BannerWhereUniqueInput
  """Disconnect currently connected Banner document"""
  disconnect: Boolean
  """Delete currently connected Banner document"""
  delete: Boolean
}

input BannerUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: BannerWhereUniqueInput!
  """Document to update"""
  data: BannerUpdateInput!
}

input BannerUpsertInput {
  """Create document if it didn't exist"""
  create: BannerCreateInput!
  """Update document if it exists"""
  update: BannerUpdateInput!
}

input BannerUpsertLocalizationInput {
  update: BannerUpdateLocalizationDataInput!
  create: BannerCreateLocalizationDataInput!
  locale: Locale!
}

input BannerUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: BannerWhereUniqueInput!
  """Upsert data"""
  data: BannerUpsertInput!
}

"""Identifies documents"""
input BannerWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [BannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [BannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [BannerWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  image: AssetWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References Banner record uniquely"""
input BannerWhereUniqueInput {
  id: ID
  identity: String
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
  hex: Hex!
  rgba: RGBA!
  css: String!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
  hex: Hex
  rgba: RGBAInput
}

input ConnectPositionInput {
  """Connect document after specified document"""
  after: ID
  """Connect document before specified document"""
  before: ID
  """Connect document at first position"""
  start: Boolean
  """Connect document at last position"""
  end: Boolean
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

enum DocumentFileTypes {
  jpg
  odp
  ods
  odt
  png
  svg
  txt
  webp
  docx
  pdf
  html
  doc
  xlsx
  xls
  pptx
  ppt
}

input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:
  
  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""Transformations for Documents"""
input DocumentTransformationInput {
  """Changes the output for the file."""
  output: DocumentOutputInput
}

type DocumentVersion {
  id: ID!
  stage: Stage!
  revision: Int!
  createdAt: DateTime!
  data: Json
}

type Footer implements Node {
  """System stage field"""
  stage: Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Footer!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  identity: String!
  copyright: String
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  socialLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `socialLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  legalLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `legalLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  """List of Footer versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input FooterConnectInput {
  """Document to connect"""
  where: FooterWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type FooterConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [FooterEdge!]!
  aggregate: Aggregate!
}

input FooterCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  copyright: String
  socialLinks: PageLinkCreateManyInlineInput
  legalLinks: PageLinkCreateManyInlineInput
}

input FooterCreateManyInlineInput {
  """Create and connect multiple existing Footer documents"""
  create: [FooterCreateInput!]
  """Connect multiple existing Footer documents"""
  connect: [FooterWhereUniqueInput!]
}

input FooterCreateOneInlineInput {
  """Create and connect one Footer document"""
  create: FooterCreateInput
  """Connect one existing Footer document"""
  connect: FooterWhereUniqueInput
}

"""An edge in a connection."""
type FooterEdge {
  """The item at the end of the edge."""
  node: Footer!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input FooterManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [FooterWhereInput!]
  """Logical OR on all given filters."""
  OR: [FooterWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [FooterWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  copyright: String
  """All values that are not equal to given value."""
  copyright_not: String
  """All values that are contained in given list."""
  copyright_in: [String!]
  """All values that are not contained in given list."""
  copyright_not_in: [String!]
  """All values containing the given string."""
  copyright_contains: String
  """All values not containing the given string."""
  copyright_not_contains: String
  """All values starting with the given string."""
  copyright_starts_with: String
  """All values not starting with the given string."""
  copyright_not_starts_with: String
  """All values ending with the given string."""
  copyright_ends_with: String
  """All values not ending with the given string"""
  copyright_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  socialLinks_every: PageLinkWhereInput
  socialLinks_some: PageLinkWhereInput
  socialLinks_none: PageLinkWhereInput
  legalLinks_every: PageLinkWhereInput
  legalLinks_some: PageLinkWhereInput
  legalLinks_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
}

enum FooterOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  copyright_ASC
  copyright_DESC
}

input FooterUpdateInput {
  identity: String
  copyright: String
  socialLinks: PageLinkUpdateManyInlineInput
  legalLinks: PageLinkUpdateManyInlineInput
}

input FooterUpdateManyInlineInput {
  """Create and connect multiple Footer documents"""
  create: [FooterCreateInput!]
  """Connect multiple existing Footer documents"""
  connect: [FooterConnectInput!]
  """
  Override currently-connected documents with multiple existing Footer documents
  """
  set: [FooterWhereUniqueInput!]
  """Update multiple Footer documents"""
  update: [FooterUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Footer documents"""
  upsert: [FooterUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Footer documents"""
  disconnect: [FooterWhereUniqueInput!]
  """Delete multiple Footer documents"""
  delete: [FooterWhereUniqueInput!]
}

input FooterUpdateManyInput {
  copyright: String
}

input FooterUpdateManyWithNestedWhereInput {
  """Document search"""
  where: FooterWhereInput!
  """Update many input"""
  data: FooterUpdateManyInput!
}

input FooterUpdateOneInlineInput {
  """Create and connect one Footer document"""
  create: FooterCreateInput
  """Update single Footer document"""
  update: FooterUpdateWithNestedWhereUniqueInput
  """Upsert single Footer document"""
  upsert: FooterUpsertWithNestedWhereUniqueInput
  """Connect existing Footer document"""
  connect: FooterWhereUniqueInput
  """Disconnect currently connected Footer document"""
  disconnect: Boolean
  """Delete currently connected Footer document"""
  delete: Boolean
}

input FooterUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: FooterWhereUniqueInput!
  """Document to update"""
  data: FooterUpdateInput!
}

input FooterUpsertInput {
  """Create document if it didn't exist"""
  create: FooterCreateInput!
  """Update document if it exists"""
  update: FooterUpdateInput!
}

input FooterUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: FooterWhereUniqueInput!
  """Upsert data"""
  data: FooterUpsertInput!
}

"""Identifies documents"""
input FooterWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [FooterWhereInput!]
  """Logical OR on all given filters."""
  OR: [FooterWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [FooterWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  copyright: String
  """All values that are not equal to given value."""
  copyright_not: String
  """All values that are contained in given list."""
  copyright_in: [String!]
  """All values that are not contained in given list."""
  copyright_not_in: [String!]
  """All values containing the given string."""
  copyright_contains: String
  """All values not containing the given string."""
  copyright_not_contains: String
  """All values starting with the given string."""
  copyright_starts_with: String
  """All values not starting with the given string."""
  copyright_not_starts_with: String
  """All values ending with the given string."""
  copyright_ends_with: String
  """All values not ending with the given string"""
  copyright_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  socialLinks_every: PageLinkWhereInput
  socialLinks_some: PageLinkWhereInput
  socialLinks_none: PageLinkWhereInput
  legalLinks_every: PageLinkWhereInput
  legalLinks_some: PageLinkWhereInput
  legalLinks_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
}

"""References Footer record uniquely"""
input FooterWhereUniqueInput {
  id: ID
  identity: String
}

scalar Hex

enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip
  """
  Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  """
  crop
  """
  Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  """
  scale
  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
  """
  max
}

input ImageResizeInput {
  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int
  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int
  """The default value for the fit parameter is fit:clip."""
  fit: ImageFit
}

"""Transformations for Images"""
input ImageTransformationInput {
  """Resizes the image"""
  resize: ImageResizeInput
}

"""Raw JSON value"""
scalar Json

"""Locale system enumeration"""
enum Locale {
  """System locale"""
  en
}

"""Representing a geolocation point with latitude and longitude"""
type Location {
  latitude: Float!
  longitude: Float!
  distance(from: LocationInput!): Float!
}

"""Input for a geolocation point with latitude and longitude"""
input LocationInput {
  latitude: Float!
  longitude: Float!
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

enum MetaRobots {
  INDEX_FOLLOW
  INDEX_NOFOLLOW
  NOINDEX_FOLLOW
  NOINDEX_NOFOLLOW
}

type Mutation

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
  """The Stage of an object"""
  stage: Stage!
}

type Page implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [Page!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Page!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  url: String!
  title: String
  metaTitle: String!
  metaDescription: String!
  date: DateTime
  author: String
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """9:6 for general usage"""
  asset(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `asset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  relatedPages(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `relatedPages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  rowButtonLinkLists(
    where: RowButtonLinkListWhereInput
    orderBy: RowButtonLinkListOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowButtonLinkLists` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowButtonLinkList!]!
  childPages(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `childPages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  metaRobots: MetaRobots!
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  content(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `content` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageContent!]!
  """List of Page versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input PageConnectInput {
  """Document to connect"""
  where: PageWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type PageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [PageEdge!]!
  aggregate: Aggregate!
}

union PageContent = Banner | RowBlogContent | RowButtonLinkList | RowColumnOne | RowColumnThree | RowColumnTwo | RowContentLinks | RowHeroBanner | RowProduct | RowQuote | RowServiceOptions | RowSpecialBanner

input PageContentConnectInput {
  RowSpecialBanner: RowSpecialBannerConnectInput
  RowColumnOne: RowColumnOneConnectInput
  RowColumnTwo: RowColumnTwoConnectInput
  RowColumnThree: RowColumnThreeConnectInput
  RowQuote: RowQuoteConnectInput
  RowHeroBanner: RowHeroBannerConnectInput
  RowButtonLinkList: RowButtonLinkListConnectInput
  RowServiceOptions: RowServiceOptionsConnectInput
  RowBlogContent: RowBlogContentConnectInput
  RowContentLinks: RowContentLinksConnectInput
  RowProduct: RowProductConnectInput
  Banner: BannerConnectInput
}

input PageContentCreateInput {
  RowSpecialBanner: RowSpecialBannerCreateInput
  RowColumnOne: RowColumnOneCreateInput
  RowColumnTwo: RowColumnTwoCreateInput
  RowColumnThree: RowColumnThreeCreateInput
  RowQuote: RowQuoteCreateInput
  RowHeroBanner: RowHeroBannerCreateInput
  RowButtonLinkList: RowButtonLinkListCreateInput
  RowServiceOptions: RowServiceOptionsCreateInput
  RowBlogContent: RowBlogContentCreateInput
  RowContentLinks: RowContentLinksCreateInput
  RowProduct: RowProductCreateInput
  Banner: BannerCreateInput
}

input PageContentCreateManyInlineInput {
  """Create and connect multiple existing PageContent documents"""
  create: [PageContentCreateInput!]
  """Connect multiple existing PageContent documents"""
  connect: [PageContentWhereUniqueInput!]
}

input PageContentCreateOneInlineInput {
  """Create and connect one PageContent document"""
  create: PageContentCreateInput
  """Connect one existing PageContent document"""
  connect: PageContentWhereUniqueInput
}

input PageContentUpdateInput {
  RowSpecialBanner: RowSpecialBannerUpdateInput
  RowColumnOne: RowColumnOneUpdateInput
  RowColumnTwo: RowColumnTwoUpdateInput
  RowColumnThree: RowColumnThreeUpdateInput
  RowQuote: RowQuoteUpdateInput
  RowHeroBanner: RowHeroBannerUpdateInput
  RowButtonLinkList: RowButtonLinkListUpdateInput
  RowServiceOptions: RowServiceOptionsUpdateInput
  RowBlogContent: RowBlogContentUpdateInput
  RowContentLinks: RowContentLinksUpdateInput
  RowProduct: RowProductUpdateInput
  Banner: BannerUpdateInput
}

input PageContentUpdateManyInlineInput {
  """Create and connect multiple PageContent documents"""
  create: [PageContentCreateInput!]
  """Connect multiple existing PageContent documents"""
  connect: [PageContentConnectInput!]
  """
  Override currently-connected documents with multiple existing PageContent documents
  """
  set: [PageContentWhereUniqueInput!]
  """Update multiple PageContent documents"""
  update: [PageContentUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple PageContent documents"""
  upsert: [PageContentUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple PageContent documents"""
  disconnect: [PageContentWhereUniqueInput!]
  """Delete multiple PageContent documents"""
  delete: [PageContentWhereUniqueInput!]
}

input PageContentUpdateManyWithNestedWhereInput {
  RowSpecialBanner: RowSpecialBannerUpdateManyWithNestedWhereInput
  RowColumnOne: RowColumnOneUpdateManyWithNestedWhereInput
  RowColumnTwo: RowColumnTwoUpdateManyWithNestedWhereInput
  RowColumnThree: RowColumnThreeUpdateManyWithNestedWhereInput
  RowQuote: RowQuoteUpdateManyWithNestedWhereInput
  RowHeroBanner: RowHeroBannerUpdateManyWithNestedWhereInput
  RowButtonLinkList: RowButtonLinkListUpdateManyWithNestedWhereInput
  RowServiceOptions: RowServiceOptionsUpdateManyWithNestedWhereInput
  RowBlogContent: RowBlogContentUpdateManyWithNestedWhereInput
  RowContentLinks: RowContentLinksUpdateManyWithNestedWhereInput
  RowProduct: RowProductUpdateManyWithNestedWhereInput
  Banner: BannerUpdateManyWithNestedWhereInput
}

input PageContentUpdateOneInlineInput {
  """Create and connect one PageContent document"""
  create: PageContentCreateInput
  """Update single PageContent document"""
  update: PageContentUpdateWithNestedWhereUniqueInput
  """Upsert single PageContent document"""
  upsert: PageContentUpsertWithNestedWhereUniqueInput
  """Connect existing PageContent document"""
  connect: PageContentWhereUniqueInput
  """Disconnect currently connected PageContent document"""
  disconnect: Boolean
  """Delete currently connected PageContent document"""
  delete: Boolean
}

input PageContentUpdateWithNestedWhereUniqueInput {
  RowSpecialBanner: RowSpecialBannerUpdateWithNestedWhereUniqueInput
  RowColumnOne: RowColumnOneUpdateWithNestedWhereUniqueInput
  RowColumnTwo: RowColumnTwoUpdateWithNestedWhereUniqueInput
  RowColumnThree: RowColumnThreeUpdateWithNestedWhereUniqueInput
  RowQuote: RowQuoteUpdateWithNestedWhereUniqueInput
  RowHeroBanner: RowHeroBannerUpdateWithNestedWhereUniqueInput
  RowButtonLinkList: RowButtonLinkListUpdateWithNestedWhereUniqueInput
  RowServiceOptions: RowServiceOptionsUpdateWithNestedWhereUniqueInput
  RowBlogContent: RowBlogContentUpdateWithNestedWhereUniqueInput
  RowContentLinks: RowContentLinksUpdateWithNestedWhereUniqueInput
  RowProduct: RowProductUpdateWithNestedWhereUniqueInput
  Banner: BannerUpdateWithNestedWhereUniqueInput
}

input PageContentUpsertWithNestedWhereUniqueInput {
  RowSpecialBanner: RowSpecialBannerUpsertWithNestedWhereUniqueInput
  RowColumnOne: RowColumnOneUpsertWithNestedWhereUniqueInput
  RowColumnTwo: RowColumnTwoUpsertWithNestedWhereUniqueInput
  RowColumnThree: RowColumnThreeUpsertWithNestedWhereUniqueInput
  RowQuote: RowQuoteUpsertWithNestedWhereUniqueInput
  RowHeroBanner: RowHeroBannerUpsertWithNestedWhereUniqueInput
  RowButtonLinkList: RowButtonLinkListUpsertWithNestedWhereUniqueInput
  RowServiceOptions: RowServiceOptionsUpsertWithNestedWhereUniqueInput
  RowBlogContent: RowBlogContentUpsertWithNestedWhereUniqueInput
  RowContentLinks: RowContentLinksUpsertWithNestedWhereUniqueInput
  RowProduct: RowProductUpsertWithNestedWhereUniqueInput
  Banner: BannerUpsertWithNestedWhereUniqueInput
}

input PageContentWhereInput {
  RowSpecialBanner: RowSpecialBannerWhereInput
  RowColumnOne: RowColumnOneWhereInput
  RowColumnTwo: RowColumnTwoWhereInput
  RowColumnThree: RowColumnThreeWhereInput
  RowQuote: RowQuoteWhereInput
  RowHeroBanner: RowHeroBannerWhereInput
  RowButtonLinkList: RowButtonLinkListWhereInput
  RowServiceOptions: RowServiceOptionsWhereInput
  RowBlogContent: RowBlogContentWhereInput
  RowContentLinks: RowContentLinksWhereInput
  RowProduct: RowProductWhereInput
  Banner: BannerWhereInput
}

input PageContentWhereUniqueInput {
  RowSpecialBanner: RowSpecialBannerWhereUniqueInput
  RowColumnOne: RowColumnOneWhereUniqueInput
  RowColumnTwo: RowColumnTwoWhereUniqueInput
  RowColumnThree: RowColumnThreeWhereUniqueInput
  RowQuote: RowQuoteWhereUniqueInput
  RowHeroBanner: RowHeroBannerWhereUniqueInput
  RowButtonLinkList: RowButtonLinkListWhereUniqueInput
  RowServiceOptions: RowServiceOptionsWhereUniqueInput
  RowBlogContent: RowBlogContentWhereUniqueInput
  RowContentLinks: RowContentLinksWhereUniqueInput
  RowProduct: RowProductWhereUniqueInput
  Banner: BannerWhereUniqueInput
}

input PageCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """url input for default locale (en)"""
  url: String!
  """title input for default locale (en)"""
  title: String
  """metaTitle input for default locale (en)"""
  metaTitle: String!
  """metaDescription input for default locale (en)"""
  metaDescription: String!
  date: DateTime
  """author input for default locale (en)"""
  author: String
  asset: AssetCreateOneInlineInput
  relatedPages: PageCreateManyInlineInput
  rowButtonLinkLists: RowButtonLinkListCreateManyInlineInput
  childPages: PageCreateManyInlineInput
  """metaRobots input for default locale (en)"""
  metaRobots: MetaRobots!
  content: PageContentCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: PageCreateLocalizationsInput
}

input PageCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  url: String!
  title: String
  metaTitle: String!
  metaDescription: String!
  author: String
  metaRobots: MetaRobots!
}

input PageCreateLocalizationInput {
  """Localization input"""
  data: PageCreateLocalizationDataInput!
  locale: Locale!
}

input PageCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [PageCreateLocalizationInput!]
}

input PageCreateManyInlineInput {
  """Create and connect multiple existing Page documents"""
  create: [PageCreateInput!]
  """Connect multiple existing Page documents"""
  connect: [PageWhereUniqueInput!]
}

input PageCreateOneInlineInput {
  """Create and connect one Page document"""
  create: PageCreateInput
  """Connect one existing Page document"""
  connect: PageWhereUniqueInput
}

"""An edge in a connection."""
type PageEdge {
  """The item at the end of the edge."""
  node: Page!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: String
  """When paginating forwards, the cursor to continue."""
  endCursor: String
  """Number of items in the current page."""
  pageSize: Int
}

type PageLink implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [PageLink!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [PageLink!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  title: String!
  description: RichText
  url: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  rowHeroBanners(
    where: RowHeroBannerWhereInput
    orderBy: RowHeroBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowHeroBanners` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowHeroBanner!]!
  rowSpecialBanners(
    where: RowSpecialBannerWhereInput
    orderBy: RowSpecialBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowSpecialBanners` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowSpecialBanner!]!
  footerSocialLinks(
    where: FooterWhereInput
    orderBy: FooterOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `footerSocialLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Footer!]!
  footerLegalLinks(
    where: FooterWhereInput
    orderBy: FooterOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `footerLegalLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Footer!]!
  rowServiceOptionsMultiple(
    where: RowServiceOptionsWhereInput
    orderBy: RowServiceOptionsOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowServiceOptionsMultiple` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowServiceOptions!]!
  rowContentLinks(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowContentLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): RowContentLinks
  asset(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `asset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  uspsMultiple(
    where: UspsWhereInput
    orderBy: UspsOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `uspsMultiple` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Usps!]!
  rowProductMultiple(
    where: RowProductWhereInput
    orderBy: RowProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowProductMultiple` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowProduct!]!
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  """List of PageLink versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input PageLinkConnectInput {
  """Document to connect"""
  where: PageLinkWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type PageLinkConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [PageLinkEdge!]!
  aggregate: Aggregate!
}

input PageLinkCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """title input for default locale (en)"""
  title: String!
  """description input for default locale (en)"""
  description: RichTextAST
  """url input for default locale (en)"""
  url: String!
  rowHeroBanners: RowHeroBannerCreateManyInlineInput
  rowSpecialBanners: RowSpecialBannerCreateManyInlineInput
  footerSocialLinks: FooterCreateManyInlineInput
  footerLegalLinks: FooterCreateManyInlineInput
  rowServiceOptionsMultiple: RowServiceOptionsCreateManyInlineInput
  rowContentLinks: RowContentLinksCreateOneInlineInput
  asset: AssetCreateOneInlineInput
  uspsMultiple: UspsCreateManyInlineInput
  rowProductMultiple: RowProductCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: PageLinkCreateLocalizationsInput
}

input PageLinkCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
  description: RichTextAST
  url: String!
}

input PageLinkCreateLocalizationInput {
  """Localization input"""
  data: PageLinkCreateLocalizationDataInput!
  locale: Locale!
}

input PageLinkCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [PageLinkCreateLocalizationInput!]
}

input PageLinkCreateManyInlineInput {
  """Create and connect multiple existing PageLink documents"""
  create: [PageLinkCreateInput!]
  """Connect multiple existing PageLink documents"""
  connect: [PageLinkWhereUniqueInput!]
}

input PageLinkCreateOneInlineInput {
  """Create and connect one PageLink document"""
  create: PageLinkCreateInput
  """Connect one existing PageLink document"""
  connect: PageLinkWhereUniqueInput
}

"""An edge in a connection."""
type PageLinkEdge {
  """The item at the end of the edge."""
  node: PageLink!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input PageLinkManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [PageLinkWhereInput!]
  """Logical OR on all given filters."""
  OR: [PageLinkWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [PageLinkWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  rowHeroBanners_every: RowHeroBannerWhereInput
  rowHeroBanners_some: RowHeroBannerWhereInput
  rowHeroBanners_none: RowHeroBannerWhereInput
  rowSpecialBanners_every: RowSpecialBannerWhereInput
  rowSpecialBanners_some: RowSpecialBannerWhereInput
  rowSpecialBanners_none: RowSpecialBannerWhereInput
  footerSocialLinks_every: FooterWhereInput
  footerSocialLinks_some: FooterWhereInput
  footerSocialLinks_none: FooterWhereInput
  footerLegalLinks_every: FooterWhereInput
  footerLegalLinks_some: FooterWhereInput
  footerLegalLinks_none: FooterWhereInput
  rowServiceOptionsMultiple_every: RowServiceOptionsWhereInput
  rowServiceOptionsMultiple_some: RowServiceOptionsWhereInput
  rowServiceOptionsMultiple_none: RowServiceOptionsWhereInput
  rowContentLinks: RowContentLinksWhereInput
  asset: AssetWhereInput
  uspsMultiple_every: UspsWhereInput
  uspsMultiple_some: UspsWhereInput
  uspsMultiple_none: UspsWhereInput
  rowProductMultiple_every: RowProductWhereInput
  rowProductMultiple_some: RowProductWhereInput
  rowProductMultiple_none: RowProductWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
}

enum PageLinkOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  title_ASC
  title_DESC
  url_ASC
  url_DESC
}

input PageLinkUpdateInput {
  """title input for default locale (en)"""
  title: String
  """description input for default locale (en)"""
  description: RichTextAST
  """url input for default locale (en)"""
  url: String
  rowHeroBanners: RowHeroBannerUpdateManyInlineInput
  rowSpecialBanners: RowSpecialBannerUpdateManyInlineInput
  footerSocialLinks: FooterUpdateManyInlineInput
  footerLegalLinks: FooterUpdateManyInlineInput
  rowServiceOptionsMultiple: RowServiceOptionsUpdateManyInlineInput
  rowContentLinks: RowContentLinksUpdateOneInlineInput
  asset: AssetUpdateOneInlineInput
  uspsMultiple: UspsUpdateManyInlineInput
  rowProductMultiple: RowProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: PageLinkUpdateLocalizationsInput
}

input PageLinkUpdateLocalizationDataInput {
  title: String
  description: RichTextAST
  url: String
}

input PageLinkUpdateLocalizationInput {
  data: PageLinkUpdateLocalizationDataInput!
  locale: Locale!
}

input PageLinkUpdateLocalizationsInput {
  """Localizations to create"""
  create: [PageLinkCreateLocalizationInput!]
  """Localizations to update"""
  update: [PageLinkUpdateLocalizationInput!]
  upsert: [PageLinkUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input PageLinkUpdateManyInlineInput {
  """Create and connect multiple PageLink documents"""
  create: [PageLinkCreateInput!]
  """Connect multiple existing PageLink documents"""
  connect: [PageLinkConnectInput!]
  """
  Override currently-connected documents with multiple existing PageLink documents
  """
  set: [PageLinkWhereUniqueInput!]
  """Update multiple PageLink documents"""
  update: [PageLinkUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple PageLink documents"""
  upsert: [PageLinkUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple PageLink documents"""
  disconnect: [PageLinkWhereUniqueInput!]
  """Delete multiple PageLink documents"""
  delete: [PageLinkWhereUniqueInput!]
}

input PageLinkUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """description input for default locale (en)"""
  description: RichTextAST
  """url input for default locale (en)"""
  url: String
  """Optional updates to localizations"""
  localizations: PageLinkUpdateManyLocalizationsInput
}

input PageLinkUpdateManyLocalizationDataInput {
  title: String
  description: RichTextAST
  url: String
}

input PageLinkUpdateManyLocalizationInput {
  data: PageLinkUpdateManyLocalizationDataInput!
  locale: Locale!
}

input PageLinkUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [PageLinkUpdateManyLocalizationInput!]
}

input PageLinkUpdateManyWithNestedWhereInput {
  """Document search"""
  where: PageLinkWhereInput!
  """Update many input"""
  data: PageLinkUpdateManyInput!
}

input PageLinkUpdateOneInlineInput {
  """Create and connect one PageLink document"""
  create: PageLinkCreateInput
  """Update single PageLink document"""
  update: PageLinkUpdateWithNestedWhereUniqueInput
  """Upsert single PageLink document"""
  upsert: PageLinkUpsertWithNestedWhereUniqueInput
  """Connect existing PageLink document"""
  connect: PageLinkWhereUniqueInput
  """Disconnect currently connected PageLink document"""
  disconnect: Boolean
  """Delete currently connected PageLink document"""
  delete: Boolean
}

input PageLinkUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: PageLinkWhereUniqueInput!
  """Document to update"""
  data: PageLinkUpdateInput!
}

input PageLinkUpsertInput {
  """Create document if it didn't exist"""
  create: PageLinkCreateInput!
  """Update document if it exists"""
  update: PageLinkUpdateInput!
}

input PageLinkUpsertLocalizationInput {
  update: PageLinkUpdateLocalizationDataInput!
  create: PageLinkCreateLocalizationDataInput!
  locale: Locale!
}

input PageLinkUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: PageLinkWhereUniqueInput!
  """Upsert data"""
  data: PageLinkUpsertInput!
}

"""Identifies documents"""
input PageLinkWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [PageLinkWhereInput!]
  """Logical OR on all given filters."""
  OR: [PageLinkWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [PageLinkWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  url: String
  """All values that are not equal to given value."""
  url_not: String
  """All values that are contained in given list."""
  url_in: [String!]
  """All values that are not contained in given list."""
  url_not_in: [String!]
  """All values containing the given string."""
  url_contains: String
  """All values not containing the given string."""
  url_not_contains: String
  """All values starting with the given string."""
  url_starts_with: String
  """All values not starting with the given string."""
  url_not_starts_with: String
  """All values ending with the given string."""
  url_ends_with: String
  """All values not ending with the given string"""
  url_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  rowHeroBanners_every: RowHeroBannerWhereInput
  rowHeroBanners_some: RowHeroBannerWhereInput
  rowHeroBanners_none: RowHeroBannerWhereInput
  rowSpecialBanners_every: RowSpecialBannerWhereInput
  rowSpecialBanners_some: RowSpecialBannerWhereInput
  rowSpecialBanners_none: RowSpecialBannerWhereInput
  footerSocialLinks_every: FooterWhereInput
  footerSocialLinks_some: FooterWhereInput
  footerSocialLinks_none: FooterWhereInput
  footerLegalLinks_every: FooterWhereInput
  footerLegalLinks_some: FooterWhereInput
  footerLegalLinks_none: FooterWhereInput
  rowServiceOptionsMultiple_every: RowServiceOptionsWhereInput
  rowServiceOptionsMultiple_some: RowServiceOptionsWhereInput
  rowServiceOptionsMultiple_none: RowServiceOptionsWhereInput
  rowContentLinks: RowContentLinksWhereInput
  asset: AssetWhereInput
  uspsMultiple_every: UspsWhereInput
  uspsMultiple_some: UspsWhereInput
  uspsMultiple_none: UspsWhereInput
  rowProductMultiple_every: RowProductWhereInput
  rowProductMultiple_some: RowProductWhereInput
  rowProductMultiple_none: RowProductWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
}

"""References PageLink record uniquely"""
input PageLinkWhereUniqueInput {
  id: ID
}

"""Identifies documents"""
input PageManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [PageWhereInput!]
  """Logical OR on all given filters."""
  OR: [PageWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [PageWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  date: DateTime
  """All values that are not equal to given value."""
  date_not: DateTime
  """All values that are contained in given list."""
  date_in: [DateTime!]
  """All values that are not contained in given list."""
  date_not_in: [DateTime!]
  """All values less than the given value."""
  date_lt: DateTime
  """All values less than or equal the given value."""
  date_lte: DateTime
  """All values greater than the given value."""
  date_gt: DateTime
  """All values greater than or equal the given value."""
  date_gte: DateTime
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  relatedPages_every: PageWhereInput
  relatedPages_some: PageWhereInput
  relatedPages_none: PageWhereInput
  rowButtonLinkLists_every: RowButtonLinkListWhereInput
  rowButtonLinkLists_some: RowButtonLinkListWhereInput
  rowButtonLinkLists_none: RowButtonLinkListWhereInput
  childPages_every: PageWhereInput
  childPages_some: PageWhereInput
  childPages_none: PageWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
}

enum PageOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  url_ASC
  url_DESC
  title_ASC
  title_DESC
  metaTitle_ASC
  metaTitle_DESC
  metaDescription_ASC
  metaDescription_DESC
  date_ASC
  date_DESC
  author_ASC
  author_DESC
  metaRobots_ASC
  metaRobots_DESC
}

input PageUpdateInput {
  """url input for default locale (en)"""
  url: String
  """title input for default locale (en)"""
  title: String
  """metaTitle input for default locale (en)"""
  metaTitle: String
  """metaDescription input for default locale (en)"""
  metaDescription: String
  date: DateTime
  """author input for default locale (en)"""
  author: String
  asset: AssetUpdateOneInlineInput
  relatedPages: PageUpdateManyInlineInput
  rowButtonLinkLists: RowButtonLinkListUpdateManyInlineInput
  childPages: PageUpdateManyInlineInput
  """metaRobots input for default locale (en)"""
  metaRobots: MetaRobots
  content: PageContentUpdateManyInlineInput
  """Manage document localizations"""
  localizations: PageUpdateLocalizationsInput
}

input PageUpdateLocalizationDataInput {
  url: String
  title: String
  metaTitle: String
  metaDescription: String
  author: String
  metaRobots: MetaRobots
}

input PageUpdateLocalizationInput {
  data: PageUpdateLocalizationDataInput!
  locale: Locale!
}

input PageUpdateLocalizationsInput {
  """Localizations to create"""
  create: [PageCreateLocalizationInput!]
  """Localizations to update"""
  update: [PageUpdateLocalizationInput!]
  upsert: [PageUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input PageUpdateManyInlineInput {
  """Create and connect multiple Page documents"""
  create: [PageCreateInput!]
  """Connect multiple existing Page documents"""
  connect: [PageConnectInput!]
  """
  Override currently-connected documents with multiple existing Page documents
  """
  set: [PageWhereUniqueInput!]
  """Update multiple Page documents"""
  update: [PageUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Page documents"""
  upsert: [PageUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Page documents"""
  disconnect: [PageWhereUniqueInput!]
  """Delete multiple Page documents"""
  delete: [PageWhereUniqueInput!]
}

input PageUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """metaTitle input for default locale (en)"""
  metaTitle: String
  """metaDescription input for default locale (en)"""
  metaDescription: String
  date: DateTime
  """author input for default locale (en)"""
  author: String
  """metaRobots input for default locale (en)"""
  metaRobots: MetaRobots
  """Optional updates to localizations"""
  localizations: PageUpdateManyLocalizationsInput
}

input PageUpdateManyLocalizationDataInput {
  title: String
  metaTitle: String
  metaDescription: String
  author: String
  metaRobots: MetaRobots
}

input PageUpdateManyLocalizationInput {
  data: PageUpdateManyLocalizationDataInput!
  locale: Locale!
}

input PageUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [PageUpdateManyLocalizationInput!]
}

input PageUpdateManyWithNestedWhereInput {
  """Document search"""
  where: PageWhereInput!
  """Update many input"""
  data: PageUpdateManyInput!
}

input PageUpdateOneInlineInput {
  """Create and connect one Page document"""
  create: PageCreateInput
  """Update single Page document"""
  update: PageUpdateWithNestedWhereUniqueInput
  """Upsert single Page document"""
  upsert: PageUpsertWithNestedWhereUniqueInput
  """Connect existing Page document"""
  connect: PageWhereUniqueInput
  """Disconnect currently connected Page document"""
  disconnect: Boolean
  """Delete currently connected Page document"""
  delete: Boolean
}

input PageUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: PageWhereUniqueInput!
  """Document to update"""
  data: PageUpdateInput!
}

input PageUpsertInput {
  """Create document if it didn't exist"""
  create: PageCreateInput!
  """Update document if it exists"""
  update: PageUpdateInput!
}

input PageUpsertLocalizationInput {
  update: PageUpdateLocalizationDataInput!
  create: PageCreateLocalizationDataInput!
  locale: Locale!
}

input PageUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: PageWhereUniqueInput!
  """Upsert data"""
  data: PageUpsertInput!
}

"""Identifies documents"""
input PageWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [PageWhereInput!]
  """Logical OR on all given filters."""
  OR: [PageWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [PageWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  url: String
  """All values that are not equal to given value."""
  url_not: String
  """All values that are contained in given list."""
  url_in: [String!]
  """All values that are not contained in given list."""
  url_not_in: [String!]
  """All values containing the given string."""
  url_contains: String
  """All values not containing the given string."""
  url_not_contains: String
  """All values starting with the given string."""
  url_starts_with: String
  """All values not starting with the given string."""
  url_not_starts_with: String
  """All values ending with the given string."""
  url_ends_with: String
  """All values not ending with the given string"""
  url_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  metaTitle: String
  """All values that are not equal to given value."""
  metaTitle_not: String
  """All values that are contained in given list."""
  metaTitle_in: [String!]
  """All values that are not contained in given list."""
  metaTitle_not_in: [String!]
  """All values containing the given string."""
  metaTitle_contains: String
  """All values not containing the given string."""
  metaTitle_not_contains: String
  """All values starting with the given string."""
  metaTitle_starts_with: String
  """All values not starting with the given string."""
  metaTitle_not_starts_with: String
  """All values ending with the given string."""
  metaTitle_ends_with: String
  """All values not ending with the given string"""
  metaTitle_not_ends_with: String
  metaDescription: String
  """All values that are not equal to given value."""
  metaDescription_not: String
  """All values that are contained in given list."""
  metaDescription_in: [String!]
  """All values that are not contained in given list."""
  metaDescription_not_in: [String!]
  """All values containing the given string."""
  metaDescription_contains: String
  """All values not containing the given string."""
  metaDescription_not_contains: String
  """All values starting with the given string."""
  metaDescription_starts_with: String
  """All values not starting with the given string."""
  metaDescription_not_starts_with: String
  """All values ending with the given string."""
  metaDescription_ends_with: String
  """All values not ending with the given string"""
  metaDescription_not_ends_with: String
  date: DateTime
  """All values that are not equal to given value."""
  date_not: DateTime
  """All values that are contained in given list."""
  date_in: [DateTime!]
  """All values that are not contained in given list."""
  date_not_in: [DateTime!]
  """All values less than the given value."""
  date_lt: DateTime
  """All values less than or equal the given value."""
  date_lte: DateTime
  """All values greater than the given value."""
  date_gt: DateTime
  """All values greater than or equal the given value."""
  date_gte: DateTime
  author: String
  """All values that are not equal to given value."""
  author_not: String
  """All values that are contained in given list."""
  author_in: [String!]
  """All values that are not contained in given list."""
  author_not_in: [String!]
  """All values containing the given string."""
  author_contains: String
  """All values not containing the given string."""
  author_not_contains: String
  """All values starting with the given string."""
  author_starts_with: String
  """All values not starting with the given string."""
  author_not_starts_with: String
  """All values ending with the given string."""
  author_ends_with: String
  """All values not ending with the given string"""
  author_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  relatedPages_every: PageWhereInput
  relatedPages_some: PageWhereInput
  relatedPages_none: PageWhereInput
  rowButtonLinkLists_every: RowButtonLinkListWhereInput
  rowButtonLinkLists_some: RowButtonLinkListWhereInput
  rowButtonLinkLists_none: RowButtonLinkListWhereInput
  childPages_every: PageWhereInput
  childPages_some: PageWhereInput
  childPages_none: PageWhereInput
  metaRobots: MetaRobots
  """All values that are not equal to given value."""
  metaRobots_not: MetaRobots
  """All values that are contained in given list."""
  metaRobots_in: [MetaRobots!]
  """All values that are not contained in given list."""
  metaRobots_not_in: [MetaRobots!]
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
}

"""References Page record uniquely"""
input PageWhereUniqueInput {
  id: ID
}

input PublishLocaleInput {
  """Locales to publish"""
  locale: Locale!
  """Stages to publish selected locales to"""
  stages: [Stage!]!
}

type Query {
  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Node
  """Retrieve multiple rowServiceOptionsMultiple"""
  rowServiceOptionsMultiple(
    where: RowServiceOptionsWhereInput
    orderBy: RowServiceOptionsOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowServiceOptions` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowServiceOptions!]!
  """Retrieve a single rowServiceOptions"""
  rowServiceOptions(
    where: RowServiceOptionsWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowServiceOptions` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowServiceOptions
  """
  Retrieve multiple rowServiceOptionsMultiple using the Relay connection interface
  """
  rowServiceOptionsMultipleConnection(
    where: RowServiceOptionsWhereInput
    orderBy: RowServiceOptionsOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowServiceOptions` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowServiceOptionsConnection!
  """Retrieve document version"""
  rowServiceOptionsVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple pageLinks"""
  pageLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `PageLink` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [PageLink!]!
  """Retrieve a single pageLink"""
  pageLink(
    where: PageLinkWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `PageLink` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): PageLink
  """Retrieve multiple pageLinks using the Relay connection interface"""
  pageLinksConnection(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `PageLink` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): PageLinkConnection!
  """Retrieve document version"""
  pageLinkVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple footers"""
  footers(
    where: FooterWhereInput
    orderBy: FooterOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Footer` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [Footer!]!
  """Retrieve a single footer"""
  footer(
    where: FooterWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Footer` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Footer
  """Retrieve multiple footers using the Relay connection interface"""
  footersConnection(
    where: FooterWhereInput
    orderBy: FooterOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Footer` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): FooterConnection!
  """Retrieve document version"""
  footerVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple rowButtonLinkLists"""
  rowButtonLinkLists(
    where: RowButtonLinkListWhereInput
    orderBy: RowButtonLinkListOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowButtonLinkList` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowButtonLinkList!]!
  """Retrieve a single rowButtonLinkList"""
  rowButtonLinkList(
    where: RowButtonLinkListWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowButtonLinkList` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowButtonLinkList
  """
  Retrieve multiple rowButtonLinkLists using the Relay connection interface
  """
  rowButtonLinkListsConnection(
    where: RowButtonLinkListWhereInput
    orderBy: RowButtonLinkListOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowButtonLinkList` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowButtonLinkListConnection!
  """Retrieve document version"""
  rowButtonLinkListVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple rowQuotes"""
  rowQuotes(
    where: RowQuoteWhereInput
    orderBy: RowQuoteOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowQuote` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowQuote!]!
  """Retrieve a single rowQuote"""
  rowQuote(
    where: RowQuoteWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowQuote` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowQuote
  """Retrieve multiple rowQuotes using the Relay connection interface"""
  rowQuotesConnection(
    where: RowQuoteWhereInput
    orderBy: RowQuoteOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowQuote` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowQuoteConnection!
  """Retrieve document version"""
  rowQuoteVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple rowBlogContents"""
  rowBlogContents(
    where: RowBlogContentWhereInput
    orderBy: RowBlogContentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowBlogContent` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowBlogContent!]!
  """Retrieve a single rowBlogContent"""
  rowBlogContent(
    where: RowBlogContentWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowBlogContent` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowBlogContent
  """Retrieve multiple rowBlogContents using the Relay connection interface"""
  rowBlogContentsConnection(
    where: RowBlogContentWhereInput
    orderBy: RowBlogContentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowBlogContent` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowBlogContentConnection!
  """Retrieve document version"""
  rowBlogContentVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple uspsMultiple"""
  uspsMultiple(
    where: UspsWhereInput
    orderBy: UspsOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Usps` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [Usps!]!
  """Retrieve a single usps"""
  usps(
    where: UspsWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Usps` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Usps
  """Retrieve multiple uspsMultiple using the Relay connection interface"""
  uspsMultipleConnection(
    where: UspsWhereInput
    orderBy: UspsOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Usps` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): UspsConnection!
  """Retrieve document version"""
  uspsVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple rowContentLinksMultiple"""
  rowContentLinksMultiple(
    where: RowContentLinksWhereInput
    orderBy: RowContentLinksOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowContentLinks` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowContentLinks!]!
  """Retrieve a single rowContentLinks"""
  rowContentLinks(
    where: RowContentLinksWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowContentLinks` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowContentLinks
  """
  Retrieve multiple rowContentLinksMultiple using the Relay connection interface
  """
  rowContentLinksMultipleConnection(
    where: RowContentLinksWhereInput
    orderBy: RowContentLinksOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowContentLinks` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowContentLinksConnection!
  """Retrieve document version"""
  rowContentLinksVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple rowColumnOnes"""
  rowColumnOnes(
    where: RowColumnOneWhereInput
    orderBy: RowColumnOneOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowColumnOne` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowColumnOne!]!
  """Retrieve a single rowColumnOne"""
  rowColumnOne(
    where: RowColumnOneWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowColumnOne` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowColumnOne
  """Retrieve multiple rowColumnOnes using the Relay connection interface"""
  rowColumnOnesConnection(
    where: RowColumnOneWhereInput
    orderBy: RowColumnOneOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowColumnOne` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowColumnOneConnection!
  """Retrieve document version"""
  rowColumnOneVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple rowColumnTwos"""
  rowColumnTwos(
    where: RowColumnTwoWhereInput
    orderBy: RowColumnTwoOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowColumnTwo` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowColumnTwo!]!
  """Retrieve a single rowColumnTwo"""
  rowColumnTwo(
    where: RowColumnTwoWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowColumnTwo` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowColumnTwo
  """Retrieve multiple rowColumnTwos using the Relay connection interface"""
  rowColumnTwosConnection(
    where: RowColumnTwoWhereInput
    orderBy: RowColumnTwoOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowColumnTwo` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowColumnTwoConnection!
  """Retrieve document version"""
  rowColumnTwoVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple rowColumnThrees"""
  rowColumnThrees(
    where: RowColumnThreeWhereInput
    orderBy: RowColumnThreeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowColumnThree` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowColumnThree!]!
  """Retrieve a single rowColumnThree"""
  rowColumnThree(
    where: RowColumnThreeWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowColumnThree` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowColumnThree
  """Retrieve multiple rowColumnThrees using the Relay connection interface"""
  rowColumnThreesConnection(
    where: RowColumnThreeWhereInput
    orderBy: RowColumnThreeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowColumnThree` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowColumnThreeConnection!
  """Retrieve document version"""
  rowColumnThreeVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple pages"""
  pages(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Page` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [Page!]!
  """Retrieve a single page"""
  page(
    where: PageWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Page` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Page
  """Retrieve multiple pages using the Relay connection interface"""
  pagesConnection(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Page` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): PageConnection!
  """Retrieve document version"""
  pageVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple assets"""
  assets(
    where: AssetWhereInput
    orderBy: AssetOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [Asset!]!
  """Retrieve a single asset"""
  asset(
    where: AssetWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Asset
  """Retrieve multiple assets using the Relay connection interface"""
  assetsConnection(
    where: AssetWhereInput
    orderBy: AssetOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): AssetConnection!
  """Retrieve document version"""
  assetVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple users"""
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [User!]!
  """Retrieve a single user"""
  user(
    where: UserWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): User
  """Retrieve multiple users using the Relay connection interface"""
  usersConnection(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): UserConnection!
  """Retrieve multiple rowSpecialBanners"""
  rowSpecialBanners(
    where: RowSpecialBannerWhereInput
    orderBy: RowSpecialBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowSpecialBanner` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowSpecialBanner!]!
  """Retrieve a single rowSpecialBanner"""
  rowSpecialBanner(
    where: RowSpecialBannerWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowSpecialBanner` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowSpecialBanner
  """
  Retrieve multiple rowSpecialBanners using the Relay connection interface
  """
  rowSpecialBannersConnection(
    where: RowSpecialBannerWhereInput
    orderBy: RowSpecialBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowSpecialBanner` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowSpecialBannerConnection!
  """Retrieve document version"""
  rowSpecialBannerVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple rowProductMultiple"""
  rowProductMultiple(
    where: RowProductWhereInput
    orderBy: RowProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowProduct` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowProduct!]!
  """Retrieve a single rowProduct"""
  rowProduct(
    where: RowProductWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowProduct` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowProduct
  """
  Retrieve multiple rowProductMultiple using the Relay connection interface
  """
  rowProductMultipleConnection(
    where: RowProductWhereInput
    orderBy: RowProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowProduct` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowProductConnection!
  """Retrieve document version"""
  rowProductVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple rowHeroBanners"""
  rowHeroBanners(
    where: RowHeroBannerWhereInput
    orderBy: RowHeroBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowHeroBanner` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [RowHeroBanner!]!
  """Retrieve a single rowHeroBanner"""
  rowHeroBanner(
    where: RowHeroBannerWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowHeroBanner` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowHeroBanner
  """Retrieve multiple rowHeroBanners using the Relay connection interface"""
  rowHeroBannersConnection(
    where: RowHeroBannerWhereInput
    orderBy: RowHeroBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `RowHeroBanner` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): RowHeroBannerConnection!
  """Retrieve document version"""
  rowHeroBannerVersion(where: VersionWhereInput!): DocumentVersion
  """Retrieve multiple scheduledOperations"""
  scheduledOperations(
    where: ScheduledOperationWhereInput
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [ScheduledOperation!]!
  """Retrieve a single scheduledOperation"""
  scheduledOperation(
    where: ScheduledOperationWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): ScheduledOperation
  """
  Retrieve multiple scheduledOperations using the Relay connection interface
  """
  scheduledOperationsConnection(
    where: ScheduledOperationWhereInput
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): ScheduledOperationConnection!
  """Retrieve multiple scheduledReleases"""
  scheduledReleases(
    where: ScheduledReleaseWhereInput
    orderBy: ScheduledReleaseOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [ScheduledRelease!]!
  """Retrieve a single scheduledRelease"""
  scheduledRelease(
    where: ScheduledReleaseWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): ScheduledRelease
  """
  Retrieve multiple scheduledReleases using the Relay connection interface
  """
  scheduledReleasesConnection(
    where: ScheduledReleaseWhereInput
    orderBy: ScheduledReleaseOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): ScheduledReleaseConnection!
  """Retrieve multiple banners"""
  banners(
    where: BannerWhereInput
    orderBy: BannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Banner` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [Banner!]!
  """Retrieve a single banner"""
  banner(
    where: BannerWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Banner` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Banner
  """Retrieve multiple banners using the Relay connection interface"""
  bannersConnection(
    where: BannerWhereInput
    orderBy: BannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    Defines which locales should be returned.
    
    Note that `Banner` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): BannerConnection!
  """Retrieve document version"""
  bannerVersion(where: VersionWhereInput!): DocumentVersion
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  r: RGBAHue!
  g: RGBAHue!
  b: RGBAHue!
  a: RGBATransparency!
}

scalar RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
  r: RGBAHue!
  g: RGBAHue!
  b: RGBAHue!
  a: RGBATransparency!
}

scalar RGBATransparency

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
  """Returns AST representation"""
  raw: RichTextAST!
  """Returns HTMl representation"""
  html: String!
  """Returns Markdown representation"""
  markdown: String!
  """Returns plain-text contents of RichText"""
  text: String!
}

"""Slate-compatible RichText AST"""
scalar RichTextAST

type RowBlogContent implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowBlogContent!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowBlogContent!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  content: RichText
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowBlogContent versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowBlogContentConnectInput {
  """Document to connect"""
  where: RowBlogContentWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowBlogContentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowBlogContentEdge!]!
  aggregate: Aggregate!
}

input RowBlogContentCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """content input for default locale (en)"""
  content: RichTextAST
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowBlogContentCreateLocalizationsInput
}

input RowBlogContentCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  content: RichTextAST
}

input RowBlogContentCreateLocalizationInput {
  """Localization input"""
  data: RowBlogContentCreateLocalizationDataInput!
  locale: Locale!
}

input RowBlogContentCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowBlogContentCreateLocalizationInput!]
}

input RowBlogContentCreateManyInlineInput {
  """Create and connect multiple existing RowBlogContent documents"""
  create: [RowBlogContentCreateInput!]
  """Connect multiple existing RowBlogContent documents"""
  connect: [RowBlogContentWhereUniqueInput!]
}

input RowBlogContentCreateOneInlineInput {
  """Create and connect one RowBlogContent document"""
  create: RowBlogContentCreateInput
  """Connect one existing RowBlogContent document"""
  connect: RowBlogContentWhereUniqueInput
}

"""An edge in a connection."""
type RowBlogContentEdge {
  """The item at the end of the edge."""
  node: RowBlogContent!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowBlogContentManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowBlogContentWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowBlogContentWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowBlogContentWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowBlogContentOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowBlogContentUpdateInput {
  identity: String
  """content input for default locale (en)"""
  content: RichTextAST
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowBlogContentUpdateLocalizationsInput
}

input RowBlogContentUpdateLocalizationDataInput {
  content: RichTextAST
}

input RowBlogContentUpdateLocalizationInput {
  data: RowBlogContentUpdateLocalizationDataInput!
  locale: Locale!
}

input RowBlogContentUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowBlogContentCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowBlogContentUpdateLocalizationInput!]
  upsert: [RowBlogContentUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowBlogContentUpdateManyInlineInput {
  """Create and connect multiple RowBlogContent documents"""
  create: [RowBlogContentCreateInput!]
  """Connect multiple existing RowBlogContent documents"""
  connect: [RowBlogContentConnectInput!]
  """
  Override currently-connected documents with multiple existing RowBlogContent documents
  """
  set: [RowBlogContentWhereUniqueInput!]
  """Update multiple RowBlogContent documents"""
  update: [RowBlogContentUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowBlogContent documents"""
  upsert: [RowBlogContentUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowBlogContent documents"""
  disconnect: [RowBlogContentWhereUniqueInput!]
  """Delete multiple RowBlogContent documents"""
  delete: [RowBlogContentWhereUniqueInput!]
}

input RowBlogContentUpdateManyInput {
  """content input for default locale (en)"""
  content: RichTextAST
  """Optional updates to localizations"""
  localizations: RowBlogContentUpdateManyLocalizationsInput
}

input RowBlogContentUpdateManyLocalizationDataInput {
  content: RichTextAST
}

input RowBlogContentUpdateManyLocalizationInput {
  data: RowBlogContentUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowBlogContentUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowBlogContentUpdateManyLocalizationInput!]
}

input RowBlogContentUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowBlogContentWhereInput!
  """Update many input"""
  data: RowBlogContentUpdateManyInput!
}

input RowBlogContentUpdateOneInlineInput {
  """Create and connect one RowBlogContent document"""
  create: RowBlogContentCreateInput
  """Update single RowBlogContent document"""
  update: RowBlogContentUpdateWithNestedWhereUniqueInput
  """Upsert single RowBlogContent document"""
  upsert: RowBlogContentUpsertWithNestedWhereUniqueInput
  """Connect existing RowBlogContent document"""
  connect: RowBlogContentWhereUniqueInput
  """Disconnect currently connected RowBlogContent document"""
  disconnect: Boolean
  """Delete currently connected RowBlogContent document"""
  delete: Boolean
}

input RowBlogContentUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowBlogContentWhereUniqueInput!
  """Document to update"""
  data: RowBlogContentUpdateInput!
}

input RowBlogContentUpsertInput {
  """Create document if it didn't exist"""
  create: RowBlogContentCreateInput!
  """Update document if it exists"""
  update: RowBlogContentUpdateInput!
}

input RowBlogContentUpsertLocalizationInput {
  update: RowBlogContentUpdateLocalizationDataInput!
  create: RowBlogContentCreateLocalizationDataInput!
  locale: Locale!
}

input RowBlogContentUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowBlogContentWhereUniqueInput!
  """Upsert data"""
  data: RowBlogContentUpsertInput!
}

"""Identifies documents"""
input RowBlogContentWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowBlogContentWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowBlogContentWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowBlogContentWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowBlogContent record uniquely"""
input RowBlogContentWhereUniqueInput {
  id: ID
  identity: String
}

type RowButtonLinkList implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowButtonLinkList!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowButtonLinkList!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  links(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `links` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowButtonLinkList versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowButtonLinkListConnectInput {
  """Document to connect"""
  where: RowButtonLinkListWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowButtonLinkListConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowButtonLinkListEdge!]!
  aggregate: Aggregate!
}

input RowButtonLinkListCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  links: PageCreateManyInlineInput
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowButtonLinkListCreateLocalizationsInput
}

input RowButtonLinkListCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowButtonLinkListCreateLocalizationInput {
  """Localization input"""
  data: RowButtonLinkListCreateLocalizationDataInput!
  locale: Locale!
}

input RowButtonLinkListCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowButtonLinkListCreateLocalizationInput!]
}

input RowButtonLinkListCreateManyInlineInput {
  """Create and connect multiple existing RowButtonLinkList documents"""
  create: [RowButtonLinkListCreateInput!]
  """Connect multiple existing RowButtonLinkList documents"""
  connect: [RowButtonLinkListWhereUniqueInput!]
}

input RowButtonLinkListCreateOneInlineInput {
  """Create and connect one RowButtonLinkList document"""
  create: RowButtonLinkListCreateInput
  """Connect one existing RowButtonLinkList document"""
  connect: RowButtonLinkListWhereUniqueInput
}

"""An edge in a connection."""
type RowButtonLinkListEdge {
  """The item at the end of the edge."""
  node: RowButtonLinkList!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowButtonLinkListManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowButtonLinkListWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowButtonLinkListWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowButtonLinkListWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  links_every: PageWhereInput
  links_some: PageWhereInput
  links_none: PageWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowButtonLinkListOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowButtonLinkListUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  links: PageUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowButtonLinkListUpdateLocalizationsInput
}

input RowButtonLinkListUpdateLocalizationDataInput {
  title: String
}

input RowButtonLinkListUpdateLocalizationInput {
  data: RowButtonLinkListUpdateLocalizationDataInput!
  locale: Locale!
}

input RowButtonLinkListUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowButtonLinkListCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowButtonLinkListUpdateLocalizationInput!]
  upsert: [RowButtonLinkListUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowButtonLinkListUpdateManyInlineInput {
  """Create and connect multiple RowButtonLinkList documents"""
  create: [RowButtonLinkListCreateInput!]
  """Connect multiple existing RowButtonLinkList documents"""
  connect: [RowButtonLinkListConnectInput!]
  """
  Override currently-connected documents with multiple existing RowButtonLinkList documents
  """
  set: [RowButtonLinkListWhereUniqueInput!]
  """Update multiple RowButtonLinkList documents"""
  update: [RowButtonLinkListUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowButtonLinkList documents"""
  upsert: [RowButtonLinkListUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowButtonLinkList documents"""
  disconnect: [RowButtonLinkListWhereUniqueInput!]
  """Delete multiple RowButtonLinkList documents"""
  delete: [RowButtonLinkListWhereUniqueInput!]
}

input RowButtonLinkListUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowButtonLinkListUpdateManyLocalizationsInput
}

input RowButtonLinkListUpdateManyLocalizationDataInput {
  title: String
}

input RowButtonLinkListUpdateManyLocalizationInput {
  data: RowButtonLinkListUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowButtonLinkListUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowButtonLinkListUpdateManyLocalizationInput!]
}

input RowButtonLinkListUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowButtonLinkListWhereInput!
  """Update many input"""
  data: RowButtonLinkListUpdateManyInput!
}

input RowButtonLinkListUpdateOneInlineInput {
  """Create and connect one RowButtonLinkList document"""
  create: RowButtonLinkListCreateInput
  """Update single RowButtonLinkList document"""
  update: RowButtonLinkListUpdateWithNestedWhereUniqueInput
  """Upsert single RowButtonLinkList document"""
  upsert: RowButtonLinkListUpsertWithNestedWhereUniqueInput
  """Connect existing RowButtonLinkList document"""
  connect: RowButtonLinkListWhereUniqueInput
  """Disconnect currently connected RowButtonLinkList document"""
  disconnect: Boolean
  """Delete currently connected RowButtonLinkList document"""
  delete: Boolean
}

input RowButtonLinkListUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowButtonLinkListWhereUniqueInput!
  """Document to update"""
  data: RowButtonLinkListUpdateInput!
}

input RowButtonLinkListUpsertInput {
  """Create document if it didn't exist"""
  create: RowButtonLinkListCreateInput!
  """Update document if it exists"""
  update: RowButtonLinkListUpdateInput!
}

input RowButtonLinkListUpsertLocalizationInput {
  update: RowButtonLinkListUpdateLocalizationDataInput!
  create: RowButtonLinkListCreateLocalizationDataInput!
  locale: Locale!
}

input RowButtonLinkListUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowButtonLinkListWhereUniqueInput!
  """Upsert data"""
  data: RowButtonLinkListUpsertInput!
}

"""Identifies documents"""
input RowButtonLinkListWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowButtonLinkListWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowButtonLinkListWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowButtonLinkListWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  links_every: PageWhereInput
  links_some: PageWhereInput
  links_none: PageWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowButtonLinkList record uniquely"""
input RowButtonLinkListWhereUniqueInput {
  id: ID
  identity: String
}

type RowColumnOne implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowColumnOne!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowColumnOne!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  colOne: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowColumnOne versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowColumnOneConnectInput {
  """Document to connect"""
  where: RowColumnOneWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowColumnOneConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowColumnOneEdge!]!
  aggregate: Aggregate!
}

input RowColumnOneCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """colOne input for default locale (en)"""
  colOne: RichTextAST!
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowColumnOneCreateLocalizationsInput
}

input RowColumnOneCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  colOne: RichTextAST!
}

input RowColumnOneCreateLocalizationInput {
  """Localization input"""
  data: RowColumnOneCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnOneCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowColumnOneCreateLocalizationInput!]
}

input RowColumnOneCreateManyInlineInput {
  """Create and connect multiple existing RowColumnOne documents"""
  create: [RowColumnOneCreateInput!]
  """Connect multiple existing RowColumnOne documents"""
  connect: [RowColumnOneWhereUniqueInput!]
}

input RowColumnOneCreateOneInlineInput {
  """Create and connect one RowColumnOne document"""
  create: RowColumnOneCreateInput
  """Connect one existing RowColumnOne document"""
  connect: RowColumnOneWhereUniqueInput
}

"""An edge in a connection."""
type RowColumnOneEdge {
  """The item at the end of the edge."""
  node: RowColumnOne!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowColumnOneManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnOneWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnOneWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnOneWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowColumnOneOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowColumnOneUpdateInput {
  identity: String
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowColumnOneUpdateLocalizationsInput
}

input RowColumnOneUpdateLocalizationDataInput {
  colOne: RichTextAST
}

input RowColumnOneUpdateLocalizationInput {
  data: RowColumnOneUpdateLocalizationDataInput!
  locale: Locale!
}

input RowColumnOneUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowColumnOneCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowColumnOneUpdateLocalizationInput!]
  upsert: [RowColumnOneUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowColumnOneUpdateManyInlineInput {
  """Create and connect multiple RowColumnOne documents"""
  create: [RowColumnOneCreateInput!]
  """Connect multiple existing RowColumnOne documents"""
  connect: [RowColumnOneConnectInput!]
  """
  Override currently-connected documents with multiple existing RowColumnOne documents
  """
  set: [RowColumnOneWhereUniqueInput!]
  """Update multiple RowColumnOne documents"""
  update: [RowColumnOneUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowColumnOne documents"""
  upsert: [RowColumnOneUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowColumnOne documents"""
  disconnect: [RowColumnOneWhereUniqueInput!]
  """Delete multiple RowColumnOne documents"""
  delete: [RowColumnOneWhereUniqueInput!]
}

input RowColumnOneUpdateManyInput {
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  """Optional updates to localizations"""
  localizations: RowColumnOneUpdateManyLocalizationsInput
}

input RowColumnOneUpdateManyLocalizationDataInput {
  colOne: RichTextAST
}

input RowColumnOneUpdateManyLocalizationInput {
  data: RowColumnOneUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowColumnOneUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowColumnOneUpdateManyLocalizationInput!]
}

input RowColumnOneUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowColumnOneWhereInput!
  """Update many input"""
  data: RowColumnOneUpdateManyInput!
}

input RowColumnOneUpdateOneInlineInput {
  """Create and connect one RowColumnOne document"""
  create: RowColumnOneCreateInput
  """Update single RowColumnOne document"""
  update: RowColumnOneUpdateWithNestedWhereUniqueInput
  """Upsert single RowColumnOne document"""
  upsert: RowColumnOneUpsertWithNestedWhereUniqueInput
  """Connect existing RowColumnOne document"""
  connect: RowColumnOneWhereUniqueInput
  """Disconnect currently connected RowColumnOne document"""
  disconnect: Boolean
  """Delete currently connected RowColumnOne document"""
  delete: Boolean
}

input RowColumnOneUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnOneWhereUniqueInput!
  """Document to update"""
  data: RowColumnOneUpdateInput!
}

input RowColumnOneUpsertInput {
  """Create document if it didn't exist"""
  create: RowColumnOneCreateInput!
  """Update document if it exists"""
  update: RowColumnOneUpdateInput!
}

input RowColumnOneUpsertLocalizationInput {
  update: RowColumnOneUpdateLocalizationDataInput!
  create: RowColumnOneCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnOneUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnOneWhereUniqueInput!
  """Upsert data"""
  data: RowColumnOneUpsertInput!
}

"""Identifies documents"""
input RowColumnOneWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnOneWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnOneWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnOneWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowColumnOne record uniquely"""
input RowColumnOneWhereUniqueInput {
  id: ID
  identity: String
}

type RowColumnThree implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowColumnThree!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowColumnThree!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  colOne: RichText!
  colTwo: RichText!
  colThree: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowColumnThree versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowColumnThreeConnectInput {
  """Document to connect"""
  where: RowColumnThreeWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowColumnThreeConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowColumnThreeEdge!]!
  aggregate: Aggregate!
}

input RowColumnThreeCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """colOne input for default locale (en)"""
  colOne: RichTextAST!
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST!
  """colThree input for default locale (en)"""
  colThree: RichTextAST!
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowColumnThreeCreateLocalizationsInput
}

input RowColumnThreeCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  colOne: RichTextAST!
  colTwo: RichTextAST!
  colThree: RichTextAST!
}

input RowColumnThreeCreateLocalizationInput {
  """Localization input"""
  data: RowColumnThreeCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnThreeCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowColumnThreeCreateLocalizationInput!]
}

input RowColumnThreeCreateManyInlineInput {
  """Create and connect multiple existing RowColumnThree documents"""
  create: [RowColumnThreeCreateInput!]
  """Connect multiple existing RowColumnThree documents"""
  connect: [RowColumnThreeWhereUniqueInput!]
}

input RowColumnThreeCreateOneInlineInput {
  """Create and connect one RowColumnThree document"""
  create: RowColumnThreeCreateInput
  """Connect one existing RowColumnThree document"""
  connect: RowColumnThreeWhereUniqueInput
}

"""An edge in a connection."""
type RowColumnThreeEdge {
  """The item at the end of the edge."""
  node: RowColumnThree!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowColumnThreeManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnThreeWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnThreeWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnThreeWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowColumnThreeOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowColumnThreeUpdateInput {
  identity: String
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST
  """colThree input for default locale (en)"""
  colThree: RichTextAST
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowColumnThreeUpdateLocalizationsInput
}

input RowColumnThreeUpdateLocalizationDataInput {
  colOne: RichTextAST
  colTwo: RichTextAST
  colThree: RichTextAST
}

input RowColumnThreeUpdateLocalizationInput {
  data: RowColumnThreeUpdateLocalizationDataInput!
  locale: Locale!
}

input RowColumnThreeUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowColumnThreeCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowColumnThreeUpdateLocalizationInput!]
  upsert: [RowColumnThreeUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowColumnThreeUpdateManyInlineInput {
  """Create and connect multiple RowColumnThree documents"""
  create: [RowColumnThreeCreateInput!]
  """Connect multiple existing RowColumnThree documents"""
  connect: [RowColumnThreeConnectInput!]
  """
  Override currently-connected documents with multiple existing RowColumnThree documents
  """
  set: [RowColumnThreeWhereUniqueInput!]
  """Update multiple RowColumnThree documents"""
  update: [RowColumnThreeUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowColumnThree documents"""
  upsert: [RowColumnThreeUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowColumnThree documents"""
  disconnect: [RowColumnThreeWhereUniqueInput!]
  """Delete multiple RowColumnThree documents"""
  delete: [RowColumnThreeWhereUniqueInput!]
}

input RowColumnThreeUpdateManyInput {
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST
  """colThree input for default locale (en)"""
  colThree: RichTextAST
  """Optional updates to localizations"""
  localizations: RowColumnThreeUpdateManyLocalizationsInput
}

input RowColumnThreeUpdateManyLocalizationDataInput {
  colOne: RichTextAST
  colTwo: RichTextAST
  colThree: RichTextAST
}

input RowColumnThreeUpdateManyLocalizationInput {
  data: RowColumnThreeUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowColumnThreeUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowColumnThreeUpdateManyLocalizationInput!]
}

input RowColumnThreeUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowColumnThreeWhereInput!
  """Update many input"""
  data: RowColumnThreeUpdateManyInput!
}

input RowColumnThreeUpdateOneInlineInput {
  """Create and connect one RowColumnThree document"""
  create: RowColumnThreeCreateInput
  """Update single RowColumnThree document"""
  update: RowColumnThreeUpdateWithNestedWhereUniqueInput
  """Upsert single RowColumnThree document"""
  upsert: RowColumnThreeUpsertWithNestedWhereUniqueInput
  """Connect existing RowColumnThree document"""
  connect: RowColumnThreeWhereUniqueInput
  """Disconnect currently connected RowColumnThree document"""
  disconnect: Boolean
  """Delete currently connected RowColumnThree document"""
  delete: Boolean
}

input RowColumnThreeUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnThreeWhereUniqueInput!
  """Document to update"""
  data: RowColumnThreeUpdateInput!
}

input RowColumnThreeUpsertInput {
  """Create document if it didn't exist"""
  create: RowColumnThreeCreateInput!
  """Update document if it exists"""
  update: RowColumnThreeUpdateInput!
}

input RowColumnThreeUpsertLocalizationInput {
  update: RowColumnThreeUpdateLocalizationDataInput!
  create: RowColumnThreeCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnThreeUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnThreeWhereUniqueInput!
  """Upsert data"""
  data: RowColumnThreeUpsertInput!
}

"""Identifies documents"""
input RowColumnThreeWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnThreeWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnThreeWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnThreeWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowColumnThree record uniquely"""
input RowColumnThreeWhereUniqueInput {
  id: ID
  identity: String
}

type RowColumnTwo implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowColumnTwo!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowColumnTwo!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  colOne: RichText!
  colTwo: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowColumnTwo versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowColumnTwoConnectInput {
  """Document to connect"""
  where: RowColumnTwoWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowColumnTwoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowColumnTwoEdge!]!
  aggregate: Aggregate!
}

input RowColumnTwoCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """colOne input for default locale (en)"""
  colOne: RichTextAST!
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST!
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowColumnTwoCreateLocalizationsInput
}

input RowColumnTwoCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  colOne: RichTextAST!
  colTwo: RichTextAST!
}

input RowColumnTwoCreateLocalizationInput {
  """Localization input"""
  data: RowColumnTwoCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnTwoCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowColumnTwoCreateLocalizationInput!]
}

input RowColumnTwoCreateManyInlineInput {
  """Create and connect multiple existing RowColumnTwo documents"""
  create: [RowColumnTwoCreateInput!]
  """Connect multiple existing RowColumnTwo documents"""
  connect: [RowColumnTwoWhereUniqueInput!]
}

input RowColumnTwoCreateOneInlineInput {
  """Create and connect one RowColumnTwo document"""
  create: RowColumnTwoCreateInput
  """Connect one existing RowColumnTwo document"""
  connect: RowColumnTwoWhereUniqueInput
}

"""An edge in a connection."""
type RowColumnTwoEdge {
  """The item at the end of the edge."""
  node: RowColumnTwo!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowColumnTwoManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnTwoWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnTwoWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnTwoWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowColumnTwoOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowColumnTwoUpdateInput {
  identity: String
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowColumnTwoUpdateLocalizationsInput
}

input RowColumnTwoUpdateLocalizationDataInput {
  colOne: RichTextAST
  colTwo: RichTextAST
}

input RowColumnTwoUpdateLocalizationInput {
  data: RowColumnTwoUpdateLocalizationDataInput!
  locale: Locale!
}

input RowColumnTwoUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowColumnTwoCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowColumnTwoUpdateLocalizationInput!]
  upsert: [RowColumnTwoUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowColumnTwoUpdateManyInlineInput {
  """Create and connect multiple RowColumnTwo documents"""
  create: [RowColumnTwoCreateInput!]
  """Connect multiple existing RowColumnTwo documents"""
  connect: [RowColumnTwoConnectInput!]
  """
  Override currently-connected documents with multiple existing RowColumnTwo documents
  """
  set: [RowColumnTwoWhereUniqueInput!]
  """Update multiple RowColumnTwo documents"""
  update: [RowColumnTwoUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowColumnTwo documents"""
  upsert: [RowColumnTwoUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowColumnTwo documents"""
  disconnect: [RowColumnTwoWhereUniqueInput!]
  """Delete multiple RowColumnTwo documents"""
  delete: [RowColumnTwoWhereUniqueInput!]
}

input RowColumnTwoUpdateManyInput {
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST
  """Optional updates to localizations"""
  localizations: RowColumnTwoUpdateManyLocalizationsInput
}

input RowColumnTwoUpdateManyLocalizationDataInput {
  colOne: RichTextAST
  colTwo: RichTextAST
}

input RowColumnTwoUpdateManyLocalizationInput {
  data: RowColumnTwoUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowColumnTwoUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowColumnTwoUpdateManyLocalizationInput!]
}

input RowColumnTwoUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowColumnTwoWhereInput!
  """Update many input"""
  data: RowColumnTwoUpdateManyInput!
}

input RowColumnTwoUpdateOneInlineInput {
  """Create and connect one RowColumnTwo document"""
  create: RowColumnTwoCreateInput
  """Update single RowColumnTwo document"""
  update: RowColumnTwoUpdateWithNestedWhereUniqueInput
  """Upsert single RowColumnTwo document"""
  upsert: RowColumnTwoUpsertWithNestedWhereUniqueInput
  """Connect existing RowColumnTwo document"""
  connect: RowColumnTwoWhereUniqueInput
  """Disconnect currently connected RowColumnTwo document"""
  disconnect: Boolean
  """Delete currently connected RowColumnTwo document"""
  delete: Boolean
}

input RowColumnTwoUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnTwoWhereUniqueInput!
  """Document to update"""
  data: RowColumnTwoUpdateInput!
}

input RowColumnTwoUpsertInput {
  """Create document if it didn't exist"""
  create: RowColumnTwoCreateInput!
  """Update document if it exists"""
  update: RowColumnTwoUpdateInput!
}

input RowColumnTwoUpsertLocalizationInput {
  update: RowColumnTwoUpdateLocalizationDataInput!
  create: RowColumnTwoCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnTwoUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnTwoWhereUniqueInput!
  """Upsert data"""
  data: RowColumnTwoUpsertInput!
}

"""Identifies documents"""
input RowColumnTwoWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnTwoWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnTwoWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnTwoWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowColumnTwo record uniquely"""
input RowColumnTwoWhereUniqueInput {
  id: ID
  identity: String
}

type RowContentLinks implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowContentLinks!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowContentLinks!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  contentLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `contentLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowContentLinks versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowContentLinksConnectInput {
  """Document to connect"""
  where: RowContentLinksWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowContentLinksConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowContentLinksEdge!]!
  aggregate: Aggregate!
}

input RowContentLinksCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  contentLinks: PageLinkCreateManyInlineInput
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowContentLinksCreateLocalizationsInput
}

input RowContentLinksCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowContentLinksCreateLocalizationInput {
  """Localization input"""
  data: RowContentLinksCreateLocalizationDataInput!
  locale: Locale!
}

input RowContentLinksCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowContentLinksCreateLocalizationInput!]
}

input RowContentLinksCreateManyInlineInput {
  """Create and connect multiple existing RowContentLinks documents"""
  create: [RowContentLinksCreateInput!]
  """Connect multiple existing RowContentLinks documents"""
  connect: [RowContentLinksWhereUniqueInput!]
}

input RowContentLinksCreateOneInlineInput {
  """Create and connect one RowContentLinks document"""
  create: RowContentLinksCreateInput
  """Connect one existing RowContentLinks document"""
  connect: RowContentLinksWhereUniqueInput
}

"""An edge in a connection."""
type RowContentLinksEdge {
  """The item at the end of the edge."""
  node: RowContentLinks!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowContentLinksManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowContentLinksWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowContentLinksWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowContentLinksWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  contentLinks_every: PageLinkWhereInput
  contentLinks_some: PageLinkWhereInput
  contentLinks_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowContentLinksOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowContentLinksUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  contentLinks: PageLinkUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowContentLinksUpdateLocalizationsInput
}

input RowContentLinksUpdateLocalizationDataInput {
  title: String
}

input RowContentLinksUpdateLocalizationInput {
  data: RowContentLinksUpdateLocalizationDataInput!
  locale: Locale!
}

input RowContentLinksUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowContentLinksCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowContentLinksUpdateLocalizationInput!]
  upsert: [RowContentLinksUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowContentLinksUpdateManyInlineInput {
  """Create and connect multiple RowContentLinks documents"""
  create: [RowContentLinksCreateInput!]
  """Connect multiple existing RowContentLinks documents"""
  connect: [RowContentLinksConnectInput!]
  """
  Override currently-connected documents with multiple existing RowContentLinks documents
  """
  set: [RowContentLinksWhereUniqueInput!]
  """Update multiple RowContentLinks documents"""
  update: [RowContentLinksUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowContentLinks documents"""
  upsert: [RowContentLinksUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowContentLinks documents"""
  disconnect: [RowContentLinksWhereUniqueInput!]
  """Delete multiple RowContentLinks documents"""
  delete: [RowContentLinksWhereUniqueInput!]
}

input RowContentLinksUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowContentLinksUpdateManyLocalizationsInput
}

input RowContentLinksUpdateManyLocalizationDataInput {
  title: String
}

input RowContentLinksUpdateManyLocalizationInput {
  data: RowContentLinksUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowContentLinksUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowContentLinksUpdateManyLocalizationInput!]
}

input RowContentLinksUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowContentLinksWhereInput!
  """Update many input"""
  data: RowContentLinksUpdateManyInput!
}

input RowContentLinksUpdateOneInlineInput {
  """Create and connect one RowContentLinks document"""
  create: RowContentLinksCreateInput
  """Update single RowContentLinks document"""
  update: RowContentLinksUpdateWithNestedWhereUniqueInput
  """Upsert single RowContentLinks document"""
  upsert: RowContentLinksUpsertWithNestedWhereUniqueInput
  """Connect existing RowContentLinks document"""
  connect: RowContentLinksWhereUniqueInput
  """Disconnect currently connected RowContentLinks document"""
  disconnect: Boolean
  """Delete currently connected RowContentLinks document"""
  delete: Boolean
}

input RowContentLinksUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowContentLinksWhereUniqueInput!
  """Document to update"""
  data: RowContentLinksUpdateInput!
}

input RowContentLinksUpsertInput {
  """Create document if it didn't exist"""
  create: RowContentLinksCreateInput!
  """Update document if it exists"""
  update: RowContentLinksUpdateInput!
}

input RowContentLinksUpsertLocalizationInput {
  update: RowContentLinksUpdateLocalizationDataInput!
  create: RowContentLinksCreateLocalizationDataInput!
  locale: Locale!
}

input RowContentLinksUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowContentLinksWhereUniqueInput!
  """Upsert data"""
  data: RowContentLinksUpsertInput!
}

"""Identifies documents"""
input RowContentLinksWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowContentLinksWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowContentLinksWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowContentLinksWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  contentLinks_every: PageLinkWhereInput
  contentLinks_some: PageLinkWhereInput
  contentLinks_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowContentLinks record uniquely"""
input RowContentLinksWhereUniqueInput {
  id: ID
  identity: String
}

type RowHeroBanner implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowHeroBanner!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowHeroBanner!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  copy: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Video, landscape"""
  asset(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `asset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset!
  pageLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pageLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowHeroBanner versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowHeroBannerConnectInput {
  """Document to connect"""
  where: RowHeroBannerWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowHeroBannerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowHeroBannerEdge!]!
  aggregate: Aggregate!
}

input RowHeroBannerCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """copy input for default locale (en)"""
  copy: RichTextAST!
  asset: AssetCreateOneInlineInput!
  pageLinks: PageLinkCreateManyInlineInput
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowHeroBannerCreateLocalizationsInput
}

input RowHeroBannerCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  copy: RichTextAST!
}

input RowHeroBannerCreateLocalizationInput {
  """Localization input"""
  data: RowHeroBannerCreateLocalizationDataInput!
  locale: Locale!
}

input RowHeroBannerCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowHeroBannerCreateLocalizationInput!]
}

input RowHeroBannerCreateManyInlineInput {
  """Create and connect multiple existing RowHeroBanner documents"""
  create: [RowHeroBannerCreateInput!]
  """Connect multiple existing RowHeroBanner documents"""
  connect: [RowHeroBannerWhereUniqueInput!]
}

input RowHeroBannerCreateOneInlineInput {
  """Create and connect one RowHeroBanner document"""
  create: RowHeroBannerCreateInput
  """Connect one existing RowHeroBanner document"""
  connect: RowHeroBannerWhereUniqueInput
}

"""An edge in a connection."""
type RowHeroBannerEdge {
  """The item at the end of the edge."""
  node: RowHeroBanner!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowHeroBannerManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowHeroBannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowHeroBannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowHeroBannerWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowHeroBannerOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowHeroBannerUpdateInput {
  identity: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  asset: AssetUpdateOneInlineInput
  pageLinks: PageLinkUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowHeroBannerUpdateLocalizationsInput
}

input RowHeroBannerUpdateLocalizationDataInput {
  copy: RichTextAST
}

input RowHeroBannerUpdateLocalizationInput {
  data: RowHeroBannerUpdateLocalizationDataInput!
  locale: Locale!
}

input RowHeroBannerUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowHeroBannerCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowHeroBannerUpdateLocalizationInput!]
  upsert: [RowHeroBannerUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowHeroBannerUpdateManyInlineInput {
  """Create and connect multiple RowHeroBanner documents"""
  create: [RowHeroBannerCreateInput!]
  """Connect multiple existing RowHeroBanner documents"""
  connect: [RowHeroBannerConnectInput!]
  """
  Override currently-connected documents with multiple existing RowHeroBanner documents
  """
  set: [RowHeroBannerWhereUniqueInput!]
  """Update multiple RowHeroBanner documents"""
  update: [RowHeroBannerUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowHeroBanner documents"""
  upsert: [RowHeroBannerUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowHeroBanner documents"""
  disconnect: [RowHeroBannerWhereUniqueInput!]
  """Delete multiple RowHeroBanner documents"""
  delete: [RowHeroBannerWhereUniqueInput!]
}

input RowHeroBannerUpdateManyInput {
  """copy input for default locale (en)"""
  copy: RichTextAST
  """Optional updates to localizations"""
  localizations: RowHeroBannerUpdateManyLocalizationsInput
}

input RowHeroBannerUpdateManyLocalizationDataInput {
  copy: RichTextAST
}

input RowHeroBannerUpdateManyLocalizationInput {
  data: RowHeroBannerUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowHeroBannerUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowHeroBannerUpdateManyLocalizationInput!]
}

input RowHeroBannerUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowHeroBannerWhereInput!
  """Update many input"""
  data: RowHeroBannerUpdateManyInput!
}

input RowHeroBannerUpdateOneInlineInput {
  """Create and connect one RowHeroBanner document"""
  create: RowHeroBannerCreateInput
  """Update single RowHeroBanner document"""
  update: RowHeroBannerUpdateWithNestedWhereUniqueInput
  """Upsert single RowHeroBanner document"""
  upsert: RowHeroBannerUpsertWithNestedWhereUniqueInput
  """Connect existing RowHeroBanner document"""
  connect: RowHeroBannerWhereUniqueInput
  """Disconnect currently connected RowHeroBanner document"""
  disconnect: Boolean
  """Delete currently connected RowHeroBanner document"""
  delete: Boolean
}

input RowHeroBannerUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowHeroBannerWhereUniqueInput!
  """Document to update"""
  data: RowHeroBannerUpdateInput!
}

input RowHeroBannerUpsertInput {
  """Create document if it didn't exist"""
  create: RowHeroBannerCreateInput!
  """Update document if it exists"""
  update: RowHeroBannerUpdateInput!
}

input RowHeroBannerUpsertLocalizationInput {
  update: RowHeroBannerUpdateLocalizationDataInput!
  create: RowHeroBannerCreateLocalizationDataInput!
  locale: Locale!
}

input RowHeroBannerUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowHeroBannerWhereUniqueInput!
  """Upsert data"""
  data: RowHeroBannerUpsertInput!
}

"""Identifies documents"""
input RowHeroBannerWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowHeroBannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowHeroBannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowHeroBannerWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowHeroBanner record uniquely"""
input RowHeroBannerWhereUniqueInput {
  id: ID
  identity: String
}

type RowProduct implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowProduct!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowProduct!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  productCopy: RichText
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  pageLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pageLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  asset(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `asset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  """Row Product component to render"""
  variant: RowProductVariants
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowProduct versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowProductConnectInput {
  """Document to connect"""
  where: RowProductWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowProductConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowProductEdge!]!
  aggregate: Aggregate!
}

input RowProductCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  """productCopy input for default locale (en)"""
  productCopy: RichTextAST
  pageLinks: PageLinkCreateManyInlineInput
  asset: AssetCreateOneInlineInput
  variant: RowProductVariants
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowProductCreateLocalizationsInput
}

input RowProductCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
  productCopy: RichTextAST
}

input RowProductCreateLocalizationInput {
  """Localization input"""
  data: RowProductCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowProductCreateLocalizationInput!]
}

input RowProductCreateManyInlineInput {
  """Create and connect multiple existing RowProduct documents"""
  create: [RowProductCreateInput!]
  """Connect multiple existing RowProduct documents"""
  connect: [RowProductWhereUniqueInput!]
}

input RowProductCreateOneInlineInput {
  """Create and connect one RowProduct document"""
  create: RowProductCreateInput
  """Connect one existing RowProduct document"""
  connect: RowProductWhereUniqueInput
}

"""An edge in a connection."""
type RowProductEdge {
  """The item at the end of the edge."""
  node: RowProduct!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowProductManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  asset: AssetWhereInput
  variant: RowProductVariants
  """All values that are not equal to given value."""
  variant_not: RowProductVariants
  """All values that are contained in given list."""
  variant_in: [RowProductVariants!]
  """All values that are not contained in given list."""
  variant_not_in: [RowProductVariants!]
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowProductOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
  variant_ASC
  variant_DESC
}

input RowProductUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  """productCopy input for default locale (en)"""
  productCopy: RichTextAST
  pageLinks: PageLinkUpdateManyInlineInput
  asset: AssetUpdateOneInlineInput
  variant: RowProductVariants
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowProductUpdateLocalizationsInput
}

input RowProductUpdateLocalizationDataInput {
  title: String
  productCopy: RichTextAST
}

input RowProductUpdateLocalizationInput {
  data: RowProductUpdateLocalizationDataInput!
  locale: Locale!
}

input RowProductUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowProductCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowProductUpdateLocalizationInput!]
  upsert: [RowProductUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowProductUpdateManyInlineInput {
  """Create and connect multiple RowProduct documents"""
  create: [RowProductCreateInput!]
  """Connect multiple existing RowProduct documents"""
  connect: [RowProductConnectInput!]
  """
  Override currently-connected documents with multiple existing RowProduct documents
  """
  set: [RowProductWhereUniqueInput!]
  """Update multiple RowProduct documents"""
  update: [RowProductUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowProduct documents"""
  upsert: [RowProductUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowProduct documents"""
  disconnect: [RowProductWhereUniqueInput!]
  """Delete multiple RowProduct documents"""
  delete: [RowProductWhereUniqueInput!]
}

input RowProductUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """productCopy input for default locale (en)"""
  productCopy: RichTextAST
  variant: RowProductVariants
  """Optional updates to localizations"""
  localizations: RowProductUpdateManyLocalizationsInput
}

input RowProductUpdateManyLocalizationDataInput {
  title: String
  productCopy: RichTextAST
}

input RowProductUpdateManyLocalizationInput {
  data: RowProductUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowProductUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowProductUpdateManyLocalizationInput!]
}

input RowProductUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowProductWhereInput!
  """Update many input"""
  data: RowProductUpdateManyInput!
}

input RowProductUpdateOneInlineInput {
  """Create and connect one RowProduct document"""
  create: RowProductCreateInput
  """Update single RowProduct document"""
  update: RowProductUpdateWithNestedWhereUniqueInput
  """Upsert single RowProduct document"""
  upsert: RowProductUpsertWithNestedWhereUniqueInput
  """Connect existing RowProduct document"""
  connect: RowProductWhereUniqueInput
  """Disconnect currently connected RowProduct document"""
  disconnect: Boolean
  """Delete currently connected RowProduct document"""
  delete: Boolean
}

input RowProductUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductWhereUniqueInput!
  """Document to update"""
  data: RowProductUpdateInput!
}

input RowProductUpsertInput {
  """Create document if it didn't exist"""
  create: RowProductCreateInput!
  """Update document if it exists"""
  update: RowProductUpdateInput!
}

input RowProductUpsertLocalizationInput {
  update: RowProductUpdateLocalizationDataInput!
  create: RowProductCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductWhereUniqueInput!
  """Upsert data"""
  data: RowProductUpsertInput!
}

"""All different kind of possible Row Product components to render"""
enum RowProductVariants {
  Backstory
  Feature
  FeatureBoxed
  Grid
  Related
  Reviews
  Specs
  Upsells
  Swipeable
}

"""Identifies documents"""
input RowProductWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  asset: AssetWhereInput
  variant: RowProductVariants
  """All values that are not equal to given value."""
  variant_not: RowProductVariants
  """All values that are contained in given list."""
  variant_in: [RowProductVariants!]
  """All values that are not contained in given list."""
  variant_not_in: [RowProductVariants!]
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowProduct record uniquely"""
input RowProductWhereUniqueInput {
  id: ID
  identity: String
}

type RowQuote implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowQuote!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowQuote!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  quote: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowQuote versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowQuoteConnectInput {
  """Document to connect"""
  where: RowQuoteWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowQuoteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowQuoteEdge!]!
  aggregate: Aggregate!
}

input RowQuoteCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """quote input for default locale (en)"""
  quote: RichTextAST!
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowQuoteCreateLocalizationsInput
}

input RowQuoteCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  quote: RichTextAST!
}

input RowQuoteCreateLocalizationInput {
  """Localization input"""
  data: RowQuoteCreateLocalizationDataInput!
  locale: Locale!
}

input RowQuoteCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowQuoteCreateLocalizationInput!]
}

input RowQuoteCreateManyInlineInput {
  """Create and connect multiple existing RowQuote documents"""
  create: [RowQuoteCreateInput!]
  """Connect multiple existing RowQuote documents"""
  connect: [RowQuoteWhereUniqueInput!]
}

input RowQuoteCreateOneInlineInput {
  """Create and connect one RowQuote document"""
  create: RowQuoteCreateInput
  """Connect one existing RowQuote document"""
  connect: RowQuoteWhereUniqueInput
}

"""An edge in a connection."""
type RowQuoteEdge {
  """The item at the end of the edge."""
  node: RowQuote!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowQuoteManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowQuoteWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowQuoteWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowQuoteWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowQuoteOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowQuoteUpdateInput {
  identity: String
  """quote input for default locale (en)"""
  quote: RichTextAST
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowQuoteUpdateLocalizationsInput
}

input RowQuoteUpdateLocalizationDataInput {
  quote: RichTextAST
}

input RowQuoteUpdateLocalizationInput {
  data: RowQuoteUpdateLocalizationDataInput!
  locale: Locale!
}

input RowQuoteUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowQuoteCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowQuoteUpdateLocalizationInput!]
  upsert: [RowQuoteUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowQuoteUpdateManyInlineInput {
  """Create and connect multiple RowQuote documents"""
  create: [RowQuoteCreateInput!]
  """Connect multiple existing RowQuote documents"""
  connect: [RowQuoteConnectInput!]
  """
  Override currently-connected documents with multiple existing RowQuote documents
  """
  set: [RowQuoteWhereUniqueInput!]
  """Update multiple RowQuote documents"""
  update: [RowQuoteUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowQuote documents"""
  upsert: [RowQuoteUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowQuote documents"""
  disconnect: [RowQuoteWhereUniqueInput!]
  """Delete multiple RowQuote documents"""
  delete: [RowQuoteWhereUniqueInput!]
}

input RowQuoteUpdateManyInput {
  """quote input for default locale (en)"""
  quote: RichTextAST
  """Optional updates to localizations"""
  localizations: RowQuoteUpdateManyLocalizationsInput
}

input RowQuoteUpdateManyLocalizationDataInput {
  quote: RichTextAST
}

input RowQuoteUpdateManyLocalizationInput {
  data: RowQuoteUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowQuoteUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowQuoteUpdateManyLocalizationInput!]
}

input RowQuoteUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowQuoteWhereInput!
  """Update many input"""
  data: RowQuoteUpdateManyInput!
}

input RowQuoteUpdateOneInlineInput {
  """Create and connect one RowQuote document"""
  create: RowQuoteCreateInput
  """Update single RowQuote document"""
  update: RowQuoteUpdateWithNestedWhereUniqueInput
  """Upsert single RowQuote document"""
  upsert: RowQuoteUpsertWithNestedWhereUniqueInput
  """Connect existing RowQuote document"""
  connect: RowQuoteWhereUniqueInput
  """Disconnect currently connected RowQuote document"""
  disconnect: Boolean
  """Delete currently connected RowQuote document"""
  delete: Boolean
}

input RowQuoteUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowQuoteWhereUniqueInput!
  """Document to update"""
  data: RowQuoteUpdateInput!
}

input RowQuoteUpsertInput {
  """Create document if it didn't exist"""
  create: RowQuoteCreateInput!
  """Update document if it exists"""
  update: RowQuoteUpdateInput!
}

input RowQuoteUpsertLocalizationInput {
  update: RowQuoteUpdateLocalizationDataInput!
  create: RowQuoteCreateLocalizationDataInput!
  locale: Locale!
}

input RowQuoteUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowQuoteWhereUniqueInput!
  """Upsert data"""
  data: RowQuoteUpsertInput!
}

"""Identifies documents"""
input RowQuoteWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowQuoteWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowQuoteWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowQuoteWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowQuote record uniquely"""
input RowQuoteWhereUniqueInput {
  id: ID
  identity: String
}

type RowServiceOptions implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowServiceOptions!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowServiceOptions!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  serviceOptions(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `serviceOptions` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowServiceOptions versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowServiceOptionsConnectInput {
  """Document to connect"""
  where: RowServiceOptionsWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowServiceOptionsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowServiceOptionsEdge!]!
  aggregate: Aggregate!
}

input RowServiceOptionsCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  serviceOptions: PageLinkCreateManyInlineInput
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowServiceOptionsCreateLocalizationsInput
}

input RowServiceOptionsCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowServiceOptionsCreateLocalizationInput {
  """Localization input"""
  data: RowServiceOptionsCreateLocalizationDataInput!
  locale: Locale!
}

input RowServiceOptionsCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowServiceOptionsCreateLocalizationInput!]
}

input RowServiceOptionsCreateManyInlineInput {
  """Create and connect multiple existing RowServiceOptions documents"""
  create: [RowServiceOptionsCreateInput!]
  """Connect multiple existing RowServiceOptions documents"""
  connect: [RowServiceOptionsWhereUniqueInput!]
}

input RowServiceOptionsCreateOneInlineInput {
  """Create and connect one RowServiceOptions document"""
  create: RowServiceOptionsCreateInput
  """Connect one existing RowServiceOptions document"""
  connect: RowServiceOptionsWhereUniqueInput
}

"""An edge in a connection."""
type RowServiceOptionsEdge {
  """The item at the end of the edge."""
  node: RowServiceOptions!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowServiceOptionsManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowServiceOptionsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowServiceOptionsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowServiceOptionsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  serviceOptions_every: PageLinkWhereInput
  serviceOptions_some: PageLinkWhereInput
  serviceOptions_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowServiceOptionsOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowServiceOptionsUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  serviceOptions: PageLinkUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowServiceOptionsUpdateLocalizationsInput
}

input RowServiceOptionsUpdateLocalizationDataInput {
  title: String
}

input RowServiceOptionsUpdateLocalizationInput {
  data: RowServiceOptionsUpdateLocalizationDataInput!
  locale: Locale!
}

input RowServiceOptionsUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowServiceOptionsCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowServiceOptionsUpdateLocalizationInput!]
  upsert: [RowServiceOptionsUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowServiceOptionsUpdateManyInlineInput {
  """Create and connect multiple RowServiceOptions documents"""
  create: [RowServiceOptionsCreateInput!]
  """Connect multiple existing RowServiceOptions documents"""
  connect: [RowServiceOptionsConnectInput!]
  """
  Override currently-connected documents with multiple existing RowServiceOptions documents
  """
  set: [RowServiceOptionsWhereUniqueInput!]
  """Update multiple RowServiceOptions documents"""
  update: [RowServiceOptionsUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowServiceOptions documents"""
  upsert: [RowServiceOptionsUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowServiceOptions documents"""
  disconnect: [RowServiceOptionsWhereUniqueInput!]
  """Delete multiple RowServiceOptions documents"""
  delete: [RowServiceOptionsWhereUniqueInput!]
}

input RowServiceOptionsUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowServiceOptionsUpdateManyLocalizationsInput
}

input RowServiceOptionsUpdateManyLocalizationDataInput {
  title: String
}

input RowServiceOptionsUpdateManyLocalizationInput {
  data: RowServiceOptionsUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowServiceOptionsUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowServiceOptionsUpdateManyLocalizationInput!]
}

input RowServiceOptionsUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowServiceOptionsWhereInput!
  """Update many input"""
  data: RowServiceOptionsUpdateManyInput!
}

input RowServiceOptionsUpdateOneInlineInput {
  """Create and connect one RowServiceOptions document"""
  create: RowServiceOptionsCreateInput
  """Update single RowServiceOptions document"""
  update: RowServiceOptionsUpdateWithNestedWhereUniqueInput
  """Upsert single RowServiceOptions document"""
  upsert: RowServiceOptionsUpsertWithNestedWhereUniqueInput
  """Connect existing RowServiceOptions document"""
  connect: RowServiceOptionsWhereUniqueInput
  """Disconnect currently connected RowServiceOptions document"""
  disconnect: Boolean
  """Delete currently connected RowServiceOptions document"""
  delete: Boolean
}

input RowServiceOptionsUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowServiceOptionsWhereUniqueInput!
  """Document to update"""
  data: RowServiceOptionsUpdateInput!
}

input RowServiceOptionsUpsertInput {
  """Create document if it didn't exist"""
  create: RowServiceOptionsCreateInput!
  """Update document if it exists"""
  update: RowServiceOptionsUpdateInput!
}

input RowServiceOptionsUpsertLocalizationInput {
  update: RowServiceOptionsUpdateLocalizationDataInput!
  create: RowServiceOptionsCreateLocalizationDataInput!
  locale: Locale!
}

input RowServiceOptionsUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowServiceOptionsWhereUniqueInput!
  """Upsert data"""
  data: RowServiceOptionsUpsertInput!
}

"""Identifies documents"""
input RowServiceOptionsWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowServiceOptionsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowServiceOptionsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowServiceOptionsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  serviceOptions_every: PageLinkWhereInput
  serviceOptions_some: PageLinkWhereInput
  serviceOptions_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowServiceOptions record uniquely"""
input RowServiceOptionsWhereUniqueInput {
  id: ID
  identity: String
}

type RowSpecialBanner implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowSpecialBanner!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowSpecialBanner!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  topic: String
  copy: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  asset(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `asset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  pageLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pageLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  pages(
    where: PageWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowSpecialBanner versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input RowSpecialBannerConnectInput {
  """Document to connect"""
  where: RowSpecialBannerWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowSpecialBannerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowSpecialBannerEdge!]!
  aggregate: Aggregate!
}

input RowSpecialBannerCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST!
  asset: AssetCreateOneInlineInput
  pageLinks: PageLinkCreateManyInlineInput
  pages: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowSpecialBannerCreateLocalizationsInput
}

input RowSpecialBannerCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  topic: String
  copy: RichTextAST!
}

input RowSpecialBannerCreateLocalizationInput {
  """Localization input"""
  data: RowSpecialBannerCreateLocalizationDataInput!
  locale: Locale!
}

input RowSpecialBannerCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowSpecialBannerCreateLocalizationInput!]
}

input RowSpecialBannerCreateManyInlineInput {
  """Create and connect multiple existing RowSpecialBanner documents"""
  create: [RowSpecialBannerCreateInput!]
  """Connect multiple existing RowSpecialBanner documents"""
  connect: [RowSpecialBannerWhereUniqueInput!]
}

input RowSpecialBannerCreateOneInlineInput {
  """Create and connect one RowSpecialBanner document"""
  create: RowSpecialBannerCreateInput
  """Connect one existing RowSpecialBanner document"""
  connect: RowSpecialBannerWhereUniqueInput
}

"""An edge in a connection."""
type RowSpecialBannerEdge {
  """The item at the end of the edge."""
  node: RowSpecialBanner!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowSpecialBannerManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowSpecialBannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowSpecialBannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowSpecialBannerWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowSpecialBannerOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  topic_ASC
  topic_DESC
}

input RowSpecialBannerUpdateInput {
  identity: String
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  asset: AssetUpdateOneInlineInput
  pageLinks: PageLinkUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowSpecialBannerUpdateLocalizationsInput
}

input RowSpecialBannerUpdateLocalizationDataInput {
  topic: String
  copy: RichTextAST
}

input RowSpecialBannerUpdateLocalizationInput {
  data: RowSpecialBannerUpdateLocalizationDataInput!
  locale: Locale!
}

input RowSpecialBannerUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowSpecialBannerCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowSpecialBannerUpdateLocalizationInput!]
  upsert: [RowSpecialBannerUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowSpecialBannerUpdateManyInlineInput {
  """Create and connect multiple RowSpecialBanner documents"""
  create: [RowSpecialBannerCreateInput!]
  """Connect multiple existing RowSpecialBanner documents"""
  connect: [RowSpecialBannerConnectInput!]
  """
  Override currently-connected documents with multiple existing RowSpecialBanner documents
  """
  set: [RowSpecialBannerWhereUniqueInput!]
  """Update multiple RowSpecialBanner documents"""
  update: [RowSpecialBannerUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowSpecialBanner documents"""
  upsert: [RowSpecialBannerUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowSpecialBanner documents"""
  disconnect: [RowSpecialBannerWhereUniqueInput!]
  """Delete multiple RowSpecialBanner documents"""
  delete: [RowSpecialBannerWhereUniqueInput!]
}

input RowSpecialBannerUpdateManyInput {
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  """Optional updates to localizations"""
  localizations: RowSpecialBannerUpdateManyLocalizationsInput
}

input RowSpecialBannerUpdateManyLocalizationDataInput {
  topic: String
  copy: RichTextAST
}

input RowSpecialBannerUpdateManyLocalizationInput {
  data: RowSpecialBannerUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowSpecialBannerUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowSpecialBannerUpdateManyLocalizationInput!]
}

input RowSpecialBannerUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowSpecialBannerWhereInput!
  """Update many input"""
  data: RowSpecialBannerUpdateManyInput!
}

input RowSpecialBannerUpdateOneInlineInput {
  """Create and connect one RowSpecialBanner document"""
  create: RowSpecialBannerCreateInput
  """Update single RowSpecialBanner document"""
  update: RowSpecialBannerUpdateWithNestedWhereUniqueInput
  """Upsert single RowSpecialBanner document"""
  upsert: RowSpecialBannerUpsertWithNestedWhereUniqueInput
  """Connect existing RowSpecialBanner document"""
  connect: RowSpecialBannerWhereUniqueInput
  """Disconnect currently connected RowSpecialBanner document"""
  disconnect: Boolean
  """Delete currently connected RowSpecialBanner document"""
  delete: Boolean
}

input RowSpecialBannerUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowSpecialBannerWhereUniqueInput!
  """Document to update"""
  data: RowSpecialBannerUpdateInput!
}

input RowSpecialBannerUpsertInput {
  """Create document if it didn't exist"""
  create: RowSpecialBannerCreateInput!
  """Update document if it exists"""
  update: RowSpecialBannerUpdateInput!
}

input RowSpecialBannerUpsertLocalizationInput {
  update: RowSpecialBannerUpdateLocalizationDataInput!
  create: RowSpecialBannerCreateLocalizationDataInput!
  locale: Locale!
}

input RowSpecialBannerUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowSpecialBannerWhereUniqueInput!
  """Upsert data"""
  data: RowSpecialBannerUpsertInput!
}

"""Identifies documents"""
input RowSpecialBannerWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowSpecialBannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowSpecialBannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowSpecialBannerWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  topic: String
  """All values that are not equal to given value."""
  topic_not: String
  """All values that are contained in given list."""
  topic_in: [String!]
  """All values that are not contained in given list."""
  topic_not_in: [String!]
  """All values containing the given string."""
  topic_contains: String
  """All values not containing the given string."""
  topic_not_contains: String
  """All values starting with the given string."""
  topic_starts_with: String
  """All values not starting with the given string."""
  topic_not_starts_with: String
  """All values ending with the given string."""
  topic_ends_with: String
  """All values not ending with the given string"""
  topic_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowSpecialBanner record uniquely"""
input RowSpecialBannerWhereUniqueInput {
  id: ID
  identity: String
}

"""Scheduled Operation system model"""
type ScheduledOperation implements Node {
  """System stage field"""
  stage: Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [ScheduledOperation!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """Operation description"""
  description: String
  """Operation error message"""
  errorMessage: String
  """
  Raw operation payload including all details, this field is subject to change
  """
  rawPayload: Json!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """The release this operation is scheduled for"""
  release(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): ScheduledRelease
  """operation Status"""
  status: ScheduledOperationStatus!
  affectedDocuments(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperationAffectedDocument!]!
}

union ScheduledOperationAffectedDocument = Asset | Banner | Footer | Page | PageLink | RowBlogContent | RowButtonLinkList | RowColumnOne | RowColumnThree | RowColumnTwo | RowContentLinks | RowHeroBanner | RowProduct | RowQuote | RowServiceOptions | RowSpecialBanner | Usps

input ScheduledOperationConnectInput {
  """Document to connect"""
  where: ScheduledOperationWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type ScheduledOperationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [ScheduledOperationEdge!]!
  aggregate: Aggregate!
}

input ScheduledOperationCreateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationCreateOneInlineInput {
  """Connect one existing ScheduledOperation document"""
  connect: ScheduledOperationWhereUniqueInput
}

"""An edge in a connection."""
type ScheduledOperationEdge {
  """The item at the end of the edge."""
  node: ScheduledOperation!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input ScheduledOperationManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]
  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  description: String
  """All values that are not equal to given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String!]
  """All values that are not contained in given list."""
  description_not_in: [String!]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  errorMessage: String
  """All values that are not equal to given value."""
  errorMessage_not: String
  """All values that are contained in given list."""
  errorMessage_in: [String!]
  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]
  """All values containing the given string."""
  errorMessage_contains: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus
  """All values that are not equal to given value."""
  status_not: ScheduledOperationStatus
  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus!]
  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus!]
}

enum ScheduledOperationOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  status_ASC
  status_DESC
}

"""System Scheduled Operation Status"""
enum ScheduledOperationStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
  CANCELED
}

input ScheduledOperationUpdateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [ScheduledOperationConnectInput!]
  """
  Override currently-connected documents with multiple existing ScheduledOperation documents
  """
  set: [ScheduledOperationWhereUniqueInput!]
  """Disconnect multiple ScheduledOperation documents"""
  disconnect: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationUpdateOneInlineInput {
  """Connect existing ScheduledOperation document"""
  connect: ScheduledOperationWhereUniqueInput
  """Disconnect currently connected ScheduledOperation document"""
  disconnect: Boolean
}

"""Identifies documents"""
input ScheduledOperationWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]
  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  description: String
  """All values that are not equal to given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String!]
  """All values that are not contained in given list."""
  description_not_in: [String!]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  errorMessage: String
  """All values that are not equal to given value."""
  errorMessage_not: String
  """All values that are contained in given list."""
  errorMessage_in: [String!]
  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]
  """All values containing the given string."""
  errorMessage_contains: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  release: ScheduledReleaseWhereInput
  status: ScheduledOperationStatus
  """All values that are not equal to given value."""
  status_not: ScheduledOperationStatus
  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus!]
  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus!]
}

"""References ScheduledOperation record uniquely"""
input ScheduledOperationWhereUniqueInput {
  id: ID
}

"""Scheduled Release system model"""
type ScheduledRelease implements Node {
  """System stage field"""
  stage: Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [ScheduledRelease!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """Release Title"""
  title: String
  """Release description"""
  description: String
  """Release error message"""
  errorMessage: String
  """Whether scheduled release should be run"""
  isActive: Boolean!
  """Whether scheduled release is implicit"""
  isImplicit: Boolean!
  """Release date and time"""
  releaseAt: DateTime
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Operations to run with this release"""
  operations(
    where: ScheduledOperationWhereInput
    orderBy: ScheduledOperationOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  """Release Status"""
  status: ScheduledReleaseStatus!
}

input ScheduledReleaseConnectInput {
  """Document to connect"""
  where: ScheduledReleaseWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type ScheduledReleaseConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [ScheduledReleaseEdge!]!
  aggregate: Aggregate!
}

input ScheduledReleaseCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String
  description: String
  errorMessage: String
  isActive: Boolean = true
  releaseAt: DateTime
}

input ScheduledReleaseCreateManyInlineInput {
  """Create and connect multiple existing ScheduledRelease documents"""
  create: [ScheduledReleaseCreateInput!]
  """Connect multiple existing ScheduledRelease documents"""
  connect: [ScheduledReleaseWhereUniqueInput!]
}

input ScheduledReleaseCreateOneInlineInput {
  """Create and connect one ScheduledRelease document"""
  create: ScheduledReleaseCreateInput
  """Connect one existing ScheduledRelease document"""
  connect: ScheduledReleaseWhereUniqueInput
}

"""An edge in a connection."""
type ScheduledReleaseEdge {
  """The item at the end of the edge."""
  node: ScheduledRelease!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input ScheduledReleaseManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]
  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  description: String
  """All values that are not equal to given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String!]
  """All values that are not contained in given list."""
  description_not_in: [String!]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  errorMessage: String
  """All values that are not equal to given value."""
  errorMessage_not: String
  """All values that are contained in given list."""
  errorMessage_in: [String!]
  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]
  """All values containing the given string."""
  errorMessage_contains: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  isActive: Boolean
  """All values that are not equal to given value."""
  isActive_not: Boolean
  isImplicit: Boolean
  """All values that are not equal to given value."""
  isImplicit_not: Boolean
  releaseAt: DateTime
  """All values that are not equal to given value."""
  releaseAt_not: DateTime
  """All values that are contained in given list."""
  releaseAt_in: [DateTime!]
  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime!]
  """All values less than the given value."""
  releaseAt_lt: DateTime
  """All values less than or equal the given value."""
  releaseAt_lte: DateTime
  """All values greater than the given value."""
  releaseAt_gt: DateTime
  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  operations_every: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  status: ScheduledReleaseStatus
  """All values that are not equal to given value."""
  status_not: ScheduledReleaseStatus
  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus!]
  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus!]
}

enum ScheduledReleaseOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  errorMessage_ASC
  errorMessage_DESC
  isActive_ASC
  isActive_DESC
  isImplicit_ASC
  isImplicit_DESC
  releaseAt_ASC
  releaseAt_DESC
  status_ASC
  status_DESC
}

"""System Scheduled Release Status"""
enum ScheduledReleaseStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
}

input ScheduledReleaseUpdateInput {
  title: String
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
}

input ScheduledReleaseUpdateManyInlineInput {
  """Create and connect multiple ScheduledRelease documents"""
  create: [ScheduledReleaseCreateInput!]
  """Connect multiple existing ScheduledRelease documents"""
  connect: [ScheduledReleaseConnectInput!]
  """
  Override currently-connected documents with multiple existing ScheduledRelease documents
  """
  set: [ScheduledReleaseWhereUniqueInput!]
  """Update multiple ScheduledRelease documents"""
  update: [ScheduledReleaseUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple ScheduledRelease documents"""
  upsert: [ScheduledReleaseUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple ScheduledRelease documents"""
  disconnect: [ScheduledReleaseWhereUniqueInput!]
  """Delete multiple ScheduledRelease documents"""
  delete: [ScheduledReleaseWhereUniqueInput!]
}

input ScheduledReleaseUpdateManyInput {
  title: String
  description: String
  errorMessage: String
  isActive: Boolean
  releaseAt: DateTime
}

input ScheduledReleaseUpdateManyWithNestedWhereInput {
  """Document search"""
  where: ScheduledReleaseWhereInput!
  """Update many input"""
  data: ScheduledReleaseUpdateManyInput!
}

input ScheduledReleaseUpdateOneInlineInput {
  """Create and connect one ScheduledRelease document"""
  create: ScheduledReleaseCreateInput
  """Update single ScheduledRelease document"""
  update: ScheduledReleaseUpdateWithNestedWhereUniqueInput
  """Upsert single ScheduledRelease document"""
  upsert: ScheduledReleaseUpsertWithNestedWhereUniqueInput
  """Connect existing ScheduledRelease document"""
  connect: ScheduledReleaseWhereUniqueInput
  """Disconnect currently connected ScheduledRelease document"""
  disconnect: Boolean
  """Delete currently connected ScheduledRelease document"""
  delete: Boolean
}

input ScheduledReleaseUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: ScheduledReleaseWhereUniqueInput!
  """Document to update"""
  data: ScheduledReleaseUpdateInput!
}

input ScheduledReleaseUpsertInput {
  """Create document if it didn't exist"""
  create: ScheduledReleaseCreateInput!
  """Update document if it exists"""
  update: ScheduledReleaseUpdateInput!
}

input ScheduledReleaseUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: ScheduledReleaseWhereUniqueInput!
  """Upsert data"""
  data: ScheduledReleaseUpsertInput!
}

"""Identifies documents"""
input ScheduledReleaseWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]
  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  description: String
  """All values that are not equal to given value."""
  description_not: String
  """All values that are contained in given list."""
  description_in: [String!]
  """All values that are not contained in given list."""
  description_not_in: [String!]
  """All values containing the given string."""
  description_contains: String
  """All values not containing the given string."""
  description_not_contains: String
  """All values starting with the given string."""
  description_starts_with: String
  """All values not starting with the given string."""
  description_not_starts_with: String
  """All values ending with the given string."""
  description_ends_with: String
  """All values not ending with the given string"""
  description_not_ends_with: String
  errorMessage: String
  """All values that are not equal to given value."""
  errorMessage_not: String
  """All values that are contained in given list."""
  errorMessage_in: [String!]
  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]
  """All values containing the given string."""
  errorMessage_contains: String
  """All values not containing the given string."""
  errorMessage_not_contains: String
  """All values starting with the given string."""
  errorMessage_starts_with: String
  """All values not starting with the given string."""
  errorMessage_not_starts_with: String
  """All values ending with the given string."""
  errorMessage_ends_with: String
  """All values not ending with the given string"""
  errorMessage_not_ends_with: String
  isActive: Boolean
  """All values that are not equal to given value."""
  isActive_not: Boolean
  isImplicit: Boolean
  """All values that are not equal to given value."""
  isImplicit_not: Boolean
  releaseAt: DateTime
  """All values that are not equal to given value."""
  releaseAt_not: DateTime
  """All values that are contained in given list."""
  releaseAt_in: [DateTime!]
  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime!]
  """All values less than the given value."""
  releaseAt_lt: DateTime
  """All values less than or equal the given value."""
  releaseAt_lte: DateTime
  """All values greater than the given value."""
  releaseAt_gt: DateTime
  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  operations_every: ScheduledOperationWhereInput
  operations_some: ScheduledOperationWhereInput
  operations_none: ScheduledOperationWhereInput
  status: ScheduledReleaseStatus
  """All values that are not equal to given value."""
  status_not: ScheduledReleaseStatus
  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus!]
  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus!]
}

"""References ScheduledRelease record uniquely"""
input ScheduledReleaseWhereUniqueInput {
  id: ID
}

"""Stage system enumeration"""
enum Stage {
  """The Draft is the default stage for all your content."""
  DRAFT
  """The Published stage is where you can publish your content to."""
  PUBLISHED
}

enum SystemDateTimeFieldVariation {
  BASE
  LOCALIZATION
  COMBINED
}

input UnpublishLocaleInput {
  """Locales to unpublish"""
  locale: Locale!
  """Stages to unpublish selected locales from"""
  stages: [Stage!]!
}

"""User system model"""
type User implements Node {
  """System stage field"""
  stage: Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [User!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """The username"""
  name: String!
  """Profile Picture url"""
  picture: String
  """Flag to determine if user is active or not"""
  isActive: Boolean!
  """User Kind. Can be either MEMBER, PAT or PUBLIC"""
  kind: UserKind!
}

input UserConnectInput {
  """Document to connect"""
  where: UserWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [UserEdge!]!
  aggregate: Aggregate!
}

input UserCreateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInlineInput {
  """Connect one existing User document"""
  connect: UserWhereUniqueInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!
  """A cursor for use in pagination."""
  cursor: String!
}

"""System User Kind"""
enum UserKind {
  MEMBER
  PAT
  PUBLIC
  WEBHOOK
}

"""Identifies documents"""
input UserManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]
  """Logical OR on all given filters."""
  OR: [UserWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  picture: String
  """All values that are not equal to given value."""
  picture_not: String
  """All values that are contained in given list."""
  picture_in: [String!]
  """All values that are not contained in given list."""
  picture_not_in: [String!]
  """All values containing the given string."""
  picture_contains: String
  """All values not containing the given string."""
  picture_not_contains: String
  """All values starting with the given string."""
  picture_starts_with: String
  """All values not starting with the given string."""
  picture_not_starts_with: String
  """All values ending with the given string."""
  picture_ends_with: String
  """All values not ending with the given string"""
  picture_not_ends_with: String
  isActive: Boolean
  """All values that are not equal to given value."""
  isActive_not: Boolean
  kind: UserKind
  """All values that are not equal to given value."""
  kind_not: UserKind
  """All values that are contained in given list."""
  kind_in: [UserKind!]
  """All values that are not contained in given list."""
  kind_not_in: [UserKind!]
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  name_ASC
  name_DESC
  picture_ASC
  picture_DESC
  isActive_ASC
  isActive_DESC
  kind_ASC
  kind_DESC
}

input UserUpdateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserConnectInput!]
  """
  Override currently-connected documents with multiple existing User documents
  """
  set: [UserWhereUniqueInput!]
  """Disconnect multiple User documents"""
  disconnect: [UserWhereUniqueInput!]
}

input UserUpdateOneInlineInput {
  """Connect existing User document"""
  connect: UserWhereUniqueInput
  """Disconnect currently connected User document"""
  disconnect: Boolean
}

"""Identifies documents"""
input UserWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]
  """Logical OR on all given filters."""
  OR: [UserWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  picture: String
  """All values that are not equal to given value."""
  picture_not: String
  """All values that are contained in given list."""
  picture_in: [String!]
  """All values that are not contained in given list."""
  picture_not_in: [String!]
  """All values containing the given string."""
  picture_contains: String
  """All values not containing the given string."""
  picture_not_contains: String
  """All values starting with the given string."""
  picture_starts_with: String
  """All values not starting with the given string."""
  picture_not_starts_with: String
  """All values ending with the given string."""
  picture_ends_with: String
  """All values not ending with the given string"""
  picture_not_ends_with: String
  isActive: Boolean
  """All values that are not equal to given value."""
  isActive_not: Boolean
  kind: UserKind
  """All values that are not equal to given value."""
  kind_not: UserKind
  """All values that are contained in given list."""
  kind_in: [UserKind!]
  """All values that are not contained in given list."""
  kind_not_in: [UserKind!]
}

"""References User record uniquely"""
input UserWhereUniqueInput {
  id: ID
}

type Usps implements Node {
  """System stage field"""
  stage: Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Usps!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  identity: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  uspsMultiple(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `uspsMultiple` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  scheduledIn(
    where: ScheduledOperationWhereInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ScheduledOperation!]!
  """List of Usps versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!
}

input UspsConnectInput {
  """Document to connect"""
  where: UspsWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type UspsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [UspsEdge!]!
  aggregate: Aggregate!
}

input UspsCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  uspsMultiple: PageLinkCreateManyInlineInput
}

input UspsCreateManyInlineInput {
  """Create and connect multiple existing Usps documents"""
  create: [UspsCreateInput!]
  """Connect multiple existing Usps documents"""
  connect: [UspsWhereUniqueInput!]
}

input UspsCreateOneInlineInput {
  """Create and connect one Usps document"""
  create: UspsCreateInput
  """Connect one existing Usps document"""
  connect: UspsWhereUniqueInput
}

"""An edge in a connection."""
type UspsEdge {
  """The item at the end of the edge."""
  node: Usps!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input UspsManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [UspsWhereInput!]
  """Logical OR on all given filters."""
  OR: [UspsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UspsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  uspsMultiple_every: PageLinkWhereInput
  uspsMultiple_some: PageLinkWhereInput
  uspsMultiple_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
}

enum UspsOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input UspsUpdateInput {
  identity: String
  uspsMultiple: PageLinkUpdateManyInlineInput
}

input UspsUpdateManyInlineInput {
  """Create and connect multiple Usps documents"""
  create: [UspsCreateInput!]
  """Connect multiple existing Usps documents"""
  connect: [UspsConnectInput!]
  """
  Override currently-connected documents with multiple existing Usps documents
  """
  set: [UspsWhereUniqueInput!]
  """Update multiple Usps documents"""
  update: [UspsUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Usps documents"""
  upsert: [UspsUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Usps documents"""
  disconnect: [UspsWhereUniqueInput!]
  """Delete multiple Usps documents"""
  delete: [UspsWhereUniqueInput!]
}

input UspsUpdateManyInput {
  """No fields in updateMany data input"""
  _: String
}

input UspsUpdateManyWithNestedWhereInput {
  """Document search"""
  where: UspsWhereInput!
  """Update many input"""
  data: UspsUpdateManyInput!
}

input UspsUpdateOneInlineInput {
  """Create and connect one Usps document"""
  create: UspsCreateInput
  """Update single Usps document"""
  update: UspsUpdateWithNestedWhereUniqueInput
  """Upsert single Usps document"""
  upsert: UspsUpsertWithNestedWhereUniqueInput
  """Connect existing Usps document"""
  connect: UspsWhereUniqueInput
  """Disconnect currently connected Usps document"""
  disconnect: Boolean
  """Delete currently connected Usps document"""
  delete: Boolean
}

input UspsUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: UspsWhereUniqueInput!
  """Document to update"""
  data: UspsUpdateInput!
}

input UspsUpsertInput {
  """Create document if it didn't exist"""
  create: UspsCreateInput!
  """Update document if it exists"""
  update: UspsUpdateInput!
}

input UspsUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: UspsWhereUniqueInput!
  """Upsert data"""
  data: UspsUpsertInput!
}

"""Identifies documents"""
input UspsWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [UspsWhereInput!]
  """Logical OR on all given filters."""
  OR: [UspsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UspsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  uspsMultiple_every: PageLinkWhereInput
  uspsMultiple_some: PageLinkWhereInput
  uspsMultiple_none: PageLinkWhereInput
  scheduledIn_every: ScheduledOperationWhereInput
  scheduledIn_some: ScheduledOperationWhereInput
  scheduledIn_none: ScheduledOperationWhereInput
}

"""References Usps record uniquely"""
input UspsWhereUniqueInput {
  id: ID
  identity: String
}

type Version {
  id: ID!
  stage: Stage!
  revision: Int!
  createdAt: DateTime!
}

input VersionWhereInput {
  id: ID!
  stage: Stage!
  revision: Int!
}

enum _FilterKind {
  search
  AND
  OR
  NOT
  eq
  eq_not
  in
  not_in
  lt
  lte
  gt
  gte
  contains
  not_contains
  starts_with
  not_starts_with
  ends_with
  not_ends_with
  contains_all
  contains_some
  contains_none
  relational_single
  relational_every
  relational_some
  relational_none
}

enum _MutationInputFieldKind {
  scalar
  richText
  richTextWithEmbeds
  enum
  relation
  union
  virtual
}

enum _MutationKind {
  create
  publish
  unpublish
  update
  upsert
  delete
  updateMany
  publishMany
  unpublishMany
  deleteMany
  schedulePublish
  scheduleUnpublish
}

enum _OrderDirection {
  asc
  desc
}

enum _RelationInputCardinality {
  one
  many
}

enum _RelationInputKind {
  create
  update
}

enum _RelationKind {
  regular
  union
}

enum _SystemDateTimeFieldVariation {
  base
  localization
  combined
}