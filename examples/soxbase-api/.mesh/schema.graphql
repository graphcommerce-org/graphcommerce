schema {
  query: Query
  mutation: Mutation
}

type Query {
  """Retrieve multiple productpages"""
  productpages(
    where: ProductWhereInput
    orderBy: ProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = DRAFT
    """
    Defines which locales should be returned.
    
    Note that `Product` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [Product!]!
  """Retrieve a single footer"""
  footer(
    where: FooterWhereUniqueInput!
    stage: Stage! = DRAFT
    """
    Defines which locales should be returned.
    
    Note that `Footer` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Footer
  """Retrieve a single usps"""
  usps(
    where: UspsWhereUniqueInput!
    stage: Stage! = DRAFT
    """
    Defines which locales should be returned.
    
    Note that `Usps` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): Usps
  """Retrieve multiple pages"""
  pages(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = DRAFT
    """
    Defines which locales should be returned.
    
    Note that `Page` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): [Page!]!
  """Retrieve multiple pages using the Relay connection interface"""
  pagesConnection(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = DRAFT
    """
    Defines which locales should be returned.
    
    Note that `Page` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]
  ): PageConnection!
  """Get a list of available store views and their config information."""
  availableStores(
    """Filter store views by current store group"""
    useCurrentGroup: Boolean
  ): [StoreConfig]
  """Returns information about shopping cart"""
  cart(cart_id: String!): Cart
  categories(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput
    """Specifies the maximum number of results to return at once. This attribute is optional."""
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): CategoryResult
  """The category query searches for categories that match the criteria specified in the search and filter attributes."""
  category(
    """Id of the category."""
    id: Int
  ): CategoryTree @deprecated(reason: "Use 'categoryList' query instead of 'category' query")
  """Returns an array of categories based on the specified filters."""
  categoryList(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput
  ): [CategoryTree]
  """The Checkout Agreements information"""
  checkoutAgreements: [CheckoutAgreement]
  """The CMS block query returns information about CMS blocks"""
  cmsBlocks(
    """Identifiers of the CMS blocks"""
    identifiers: [String]
  ): CmsBlocks
  """The CMS page query returns information about a CMS page"""
  cmsPage(
    """Id of the CMS page"""
    id: Int
    """Identifier of the CMS page"""
    identifier: String
  ): CmsPage
  """Return products that have been added to the specified compare list"""
  compareList(uid: ID!): CompareList
  """The countries query provides information for all countries."""
  countries: [Country]
  """The countries query provides information for a single country."""
  country(id: String): Country
  """The currency query returns information about store currency."""
  currency: Currency
  """The customAttributeMetadata query returns the attribute type, given an attribute code and entity type"""
  customAttributeMetadata(attributes: [AttributeInput!]!): CustomAttributeMetadata
  """The customer query returns information about a customer account"""
  customer: Customer
  """Returns information about the customer shopping cart"""
  customerCart: Cart!
  """The query returns the contents of a customer's downloadable products"""
  customerDownloadableProducts: CustomerDownloadableProducts
  customerOrders: CustomerOrders @deprecated(reason: "Use orders from customer instead")
  """Return a list of customer payment tokens"""
  customerPaymentTokens: CustomerPaymentTokens
  """Retrieve secure PayPal url for Payments Pro Hosted Solution transaction."""
  getHostedProUrl(input: HostedProUrlInput!): HostedProUrl
  """Retrieve payment credentials for transaction. Use this query for Payflow Link and Payments Advanced payment methods."""
  getPayflowLinkToken(input: PayflowLinkTokenInput!): PayflowLinkToken
  isEmailAvailable(
    """The new customer email"""
    email: String!
  ): IsEmailAvailableOutput
  mollieCustomerOrder(
    """The hash added to your custom URL"""
    hash: String
  ): CustomerOrder
  molliePaymentMethods(input: MolliePaymentMethodsInput): MolliePaymentMethodsOutput
  """The pickup locations query searches for locations that match the search request requirements."""
  pickupLocations(
    """Perform search by location using radius and search term."""
    area: AreaInput
    """Apply filters by attributes."""
    filters: PickupLocationFilterInput
    """Specifies which attribute to sort on, and whether to return the results in ascending or descending order."""
    sort: PickupLocationSortInput
    """The maximum number of pickup locations to return at once. The attribute is optional."""
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
    """Information about products which should be delivered."""
    productsInfo: [ProductInfoInput]
  ): PickupLocations
  """Retrieves metadata required by clients to render the Reviews section."""
  productReviewRatingsMetadata: ProductReviewRatingsMetadata!
  """The products query searches for products that match the criteria specified in the search and filter attributes."""
  products(
    """Performs a full-text search using the specified key words."""
    search: String
    """Identifies which product attributes to search for and return."""
    filter: ProductAttributeFilterInput
    """Specifies the maximum number of results to return at once. This attribute is optional."""
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
    """Specifies which attributes to sort on, and whether to return the results in ascending or descending order."""
    sort: ProductAttributeSortInput
  ): Products
  """The store config query"""
  storeConfig: StoreConfig
  """The urlResolver query returns the relative URL for a specified product, category or CMS page, using as input a url_key appended by the url_suffix, if one exists"""
  urlResolver(url: String!): EntityUrl
  """The wishlist query returns the contents of a customer's wish list"""
  wishlist: WishlistOutput @deprecated(reason: "Moved under `Customer` `wishlist`")
}

type Aggregate {
  count: Int!
}

"""Asset system model"""
type Asset implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [Asset!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [Asset!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  """The file handle"""
  handle: String!
  """The file name"""
  fileName: String!
  """The height of the file"""
  height: Float
  """The file width"""
  width: Float
  """The file size"""
  size: Float
  """The mime type of the file"""
  mimeType: String
  alt: String
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  assetRowHeroBanner(
    where: RowHeroBannerWhereInput
    orderBy: RowHeroBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `assetRowHeroBanner` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowHeroBanner!]!
  rowSpecialBannerAsset(
    where: RowSpecialBannerWhereInput
    orderBy: RowSpecialBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowSpecialBannerAsset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowSpecialBanner!]!
  assetRowProductBackstory(
    where: RowProductBackstoryWhereInput
    orderBy: RowProductBackstoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `assetRowProductBackstory` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowProductBackstory!]!
  assetPage(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `assetPage` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  assetPageLink(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `assetPageLink` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  """List of Asset versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
  """Get the url for the asset with provided transformations applied."""
  url(transformation: AssetTransformationInput): String!
}

input AssetConnectInput {
  """Document to connect"""
  where: AssetWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type AssetConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [AssetEdge!]!
  aggregate: Aggregate!
}

input AssetCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  """alt input for default locale (en)"""
  alt: String
  assetRowHeroBanner: RowHeroBannerCreateManyInlineInput
  rowSpecialBannerAsset: RowSpecialBannerCreateManyInlineInput
  assetRowProductBackstory: RowProductBackstoryCreateManyInlineInput
  assetPage: PageCreateManyInlineInput
  assetPageLink: PageLinkCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: AssetCreateLocalizationsInput
}

input AssetCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  alt: String
}

input AssetCreateLocalizationInput {
  """Localization input"""
  data: AssetCreateLocalizationDataInput!
  locale: Locale!
}

input AssetCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [AssetCreateLocalizationInput!]
}

input AssetCreateManyInlineInput {
  """Create and connect multiple existing Asset documents"""
  create: [AssetCreateInput!]
  """Connect multiple existing Asset documents"""
  connect: [AssetWhereUniqueInput!]
}

input AssetCreateOneInlineInput {
  """Create and connect one Asset document"""
  create: AssetCreateInput
  """Connect one existing Asset document"""
  connect: AssetWhereUniqueInput
}

"""An edge in a connection."""
type AssetEdge {
  """The item at the end of the edge."""
  node: Asset!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input AssetManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]
  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  assetRowHeroBanner_every: RowHeroBannerWhereInput
  assetRowHeroBanner_some: RowHeroBannerWhereInput
  assetRowHeroBanner_none: RowHeroBannerWhereInput
  rowSpecialBannerAsset_every: RowSpecialBannerWhereInput
  rowSpecialBannerAsset_some: RowSpecialBannerWhereInput
  rowSpecialBannerAsset_none: RowSpecialBannerWhereInput
  assetRowProductBackstory_every: RowProductBackstoryWhereInput
  assetRowProductBackstory_some: RowProductBackstoryWhereInput
  assetRowProductBackstory_none: RowProductBackstoryWhereInput
  assetPage_every: PageWhereInput
  assetPage_some: PageWhereInput
  assetPage_none: PageWhereInput
  assetPageLink_every: PageLinkWhereInput
  assetPageLink_some: PageLinkWhereInput
  assetPageLink_none: PageLinkWhereInput
}

enum AssetOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  handle_ASC
  handle_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  width_ASC
  width_DESC
  size_ASC
  size_DESC
  mimeType_ASC
  mimeType_DESC
  alt_ASC
  alt_DESC
}

"""Transformations for Assets"""
input AssetTransformationInput {
  image: ImageTransformationInput
  document: DocumentTransformationInput
  """Pass true if you want to validate the passed transformation parameters"""
  validateOptions: Boolean = false
}

input AssetUpdateInput {
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  """alt input for default locale (en)"""
  alt: String
  assetRowHeroBanner: RowHeroBannerUpdateManyInlineInput
  rowSpecialBannerAsset: RowSpecialBannerUpdateManyInlineInput
  assetRowProductBackstory: RowProductBackstoryUpdateManyInlineInput
  assetPage: PageUpdateManyInlineInput
  assetPageLink: PageLinkUpdateManyInlineInput
  """Manage document localizations"""
  localizations: AssetUpdateLocalizationsInput
}

input AssetUpdateLocalizationDataInput {
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  alt: String
}

input AssetUpdateLocalizationInput {
  data: AssetUpdateLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateLocalizationsInput {
  """Localizations to create"""
  create: [AssetCreateLocalizationInput!]
  """Localizations to update"""
  update: [AssetUpdateLocalizationInput!]
  upsert: [AssetUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input AssetUpdateManyInlineInput {
  """Create and connect multiple Asset documents"""
  create: [AssetCreateInput!]
  """Connect multiple existing Asset documents"""
  connect: [AssetConnectInput!]
  """Override currently-connected documents with multiple existing Asset documents"""
  set: [AssetWhereUniqueInput!]
  """Update multiple Asset documents"""
  update: [AssetUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Asset documents"""
  upsert: [AssetUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Asset documents"""
  disconnect: [AssetWhereUniqueInput!]
  """Delete multiple Asset documents"""
  delete: [AssetWhereUniqueInput!]
}

input AssetUpdateManyInput {
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  """alt input for default locale (en)"""
  alt: String
  """Optional updates to localizations"""
  localizations: AssetUpdateManyLocalizationsInput
}

input AssetUpdateManyLocalizationDataInput {
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  alt: String
}

input AssetUpdateManyLocalizationInput {
  data: AssetUpdateManyLocalizationDataInput!
  locale: Locale!
}

input AssetUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [AssetUpdateManyLocalizationInput!]
}

input AssetUpdateManyWithNestedWhereInput {
  """Document search"""
  where: AssetWhereInput!
  """Update many input"""
  data: AssetUpdateManyInput!
}

input AssetUpdateOneInlineInput {
  """Create and connect one Asset document"""
  create: AssetCreateInput
  """Update single Asset document"""
  update: AssetUpdateWithNestedWhereUniqueInput
  """Upsert single Asset document"""
  upsert: AssetUpsertWithNestedWhereUniqueInput
  """Connect existing Asset document"""
  connect: AssetWhereUniqueInput
  """Disconnect currently connected Asset document"""
  disconnect: Boolean
  """Delete currently connected Asset document"""
  delete: Boolean
}

input AssetUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: AssetWhereUniqueInput!
  """Document to update"""
  data: AssetUpdateInput!
}

input AssetUpsertInput {
  """Create document if it didn't exist"""
  create: AssetCreateInput!
  """Update document if it exists"""
  update: AssetUpdateInput!
}

input AssetUpsertLocalizationInput {
  update: AssetUpdateLocalizationDataInput!
  create: AssetCreateLocalizationDataInput!
  locale: Locale!
}

input AssetUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: AssetWhereUniqueInput!
  """Upsert data"""
  data: AssetUpsertInput!
}

"""Identifies documents"""
input AssetWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]
  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  handle: String
  """All values that are not equal to given value."""
  handle_not: String
  """All values that are contained in given list."""
  handle_in: [String!]
  """All values that are not contained in given list."""
  handle_not_in: [String!]
  """All values containing the given string."""
  handle_contains: String
  """All values not containing the given string."""
  handle_not_contains: String
  """All values starting with the given string."""
  handle_starts_with: String
  """All values not starting with the given string."""
  handle_not_starts_with: String
  """All values ending with the given string."""
  handle_ends_with: String
  """All values not ending with the given string"""
  handle_not_ends_with: String
  fileName: String
  """All values that are not equal to given value."""
  fileName_not: String
  """All values that are contained in given list."""
  fileName_in: [String!]
  """All values that are not contained in given list."""
  fileName_not_in: [String!]
  """All values containing the given string."""
  fileName_contains: String
  """All values not containing the given string."""
  fileName_not_contains: String
  """All values starting with the given string."""
  fileName_starts_with: String
  """All values not starting with the given string."""
  fileName_not_starts_with: String
  """All values ending with the given string."""
  fileName_ends_with: String
  """All values not ending with the given string"""
  fileName_not_ends_with: String
  height: Float
  """All values that are not equal to given value."""
  height_not: Float
  """All values that are contained in given list."""
  height_in: [Float!]
  """All values that are not contained in given list."""
  height_not_in: [Float!]
  """All values less than the given value."""
  height_lt: Float
  """All values less than or equal the given value."""
  height_lte: Float
  """All values greater than the given value."""
  height_gt: Float
  """All values greater than or equal the given value."""
  height_gte: Float
  width: Float
  """All values that are not equal to given value."""
  width_not: Float
  """All values that are contained in given list."""
  width_in: [Float!]
  """All values that are not contained in given list."""
  width_not_in: [Float!]
  """All values less than the given value."""
  width_lt: Float
  """All values less than or equal the given value."""
  width_lte: Float
  """All values greater than the given value."""
  width_gt: Float
  """All values greater than or equal the given value."""
  width_gte: Float
  size: Float
  """All values that are not equal to given value."""
  size_not: Float
  """All values that are contained in given list."""
  size_in: [Float!]
  """All values that are not contained in given list."""
  size_not_in: [Float!]
  """All values less than the given value."""
  size_lt: Float
  """All values less than or equal the given value."""
  size_lte: Float
  """All values greater than the given value."""
  size_gt: Float
  """All values greater than or equal the given value."""
  size_gte: Float
  mimeType: String
  """All values that are not equal to given value."""
  mimeType_not: String
  """All values that are contained in given list."""
  mimeType_in: [String!]
  """All values that are not contained in given list."""
  mimeType_not_in: [String!]
  """All values containing the given string."""
  mimeType_contains: String
  """All values not containing the given string."""
  mimeType_not_contains: String
  """All values starting with the given string."""
  mimeType_starts_with: String
  """All values not starting with the given string."""
  mimeType_not_starts_with: String
  """All values ending with the given string."""
  mimeType_ends_with: String
  """All values not ending with the given string"""
  mimeType_not_ends_with: String
  alt: String
  """All values that are not equal to given value."""
  alt_not: String
  """All values that are contained in given list."""
  alt_in: [String!]
  """All values that are not contained in given list."""
  alt_not_in: [String!]
  """All values containing the given string."""
  alt_contains: String
  """All values not containing the given string."""
  alt_not_contains: String
  """All values starting with the given string."""
  alt_starts_with: String
  """All values not starting with the given string."""
  alt_not_starts_with: String
  """All values ending with the given string."""
  alt_ends_with: String
  """All values not ending with the given string"""
  alt_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  assetRowHeroBanner_every: RowHeroBannerWhereInput
  assetRowHeroBanner_some: RowHeroBannerWhereInput
  assetRowHeroBanner_none: RowHeroBannerWhereInput
  rowSpecialBannerAsset_every: RowSpecialBannerWhereInput
  rowSpecialBannerAsset_some: RowSpecialBannerWhereInput
  rowSpecialBannerAsset_none: RowSpecialBannerWhereInput
  assetRowProductBackstory_every: RowProductBackstoryWhereInput
  assetRowProductBackstory_some: RowProductBackstoryWhereInput
  assetRowProductBackstory_none: RowProductBackstoryWhereInput
  assetPage_every: PageWhereInput
  assetPage_some: PageWhereInput
  assetPage_none: PageWhereInput
  assetPageLink_every: PageLinkWhereInput
  assetPageLink_some: PageLinkWhereInput
  assetPageLink_none: PageLinkWhereInput
}

"""References Asset record uniquely"""
input AssetWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""Representing a color value comprising of HEX, RGBA and css color values"""
type Color {
  hex: Hex!
  rgba: RGBA!
  css: String!
}

"""Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used."""
input ColorInput {
  hex: Hex
  rgba: RGBAInput
}

input ConnectPositionInput {
  """Connect document after specified document"""
  after: ID
  """Connect document before specified document"""
  before: ID
  """Connect document at first position"""
  start: Boolean
  """Connect document at last position"""
  end: Boolean
}

"""A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar."""
scalar Date

"""A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar."""
scalar DateTime

enum DocumentFileTypes {
  jpg
  odp
  ods
  odt
  png
  svg
  txt
  webp
  docx
  pdf
  html
  doc
  xlsx
  xls
  pptx
  ppt
}

input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:
  
  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""Transformations for Documents"""
input DocumentTransformationInput {
  """Changes the output for the file."""
  output: DocumentOutputInput
}

type DocumentVersion {
  id: ID!
  stage: Stage!
  revision: Int!
  createdAt: DateTime!
  data: Json
}

type Footer implements Node {
  """System stage field"""
  stage: Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [Footer!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  identity: String!
  copyright: String
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  socialLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `socialLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  legalLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `legalLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  """List of Footer versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input FooterConnectInput {
  """Document to connect"""
  where: FooterWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type FooterConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [FooterEdge!]!
  aggregate: Aggregate!
}

input FooterCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  copyright: String
  socialLinks: PageLinkCreateManyInlineInput
  legalLinks: PageLinkCreateManyInlineInput
}

input FooterCreateManyInlineInput {
  """Create and connect multiple existing Footer documents"""
  create: [FooterCreateInput!]
  """Connect multiple existing Footer documents"""
  connect: [FooterWhereUniqueInput!]
}

input FooterCreateOneInlineInput {
  """Create and connect one Footer document"""
  create: FooterCreateInput
  """Connect one existing Footer document"""
  connect: FooterWhereUniqueInput
}

"""An edge in a connection."""
type FooterEdge {
  """The item at the end of the edge."""
  node: Footer!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input FooterManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [FooterWhereInput!]
  """Logical OR on all given filters."""
  OR: [FooterWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [FooterWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  copyright: String
  """All values that are not equal to given value."""
  copyright_not: String
  """All values that are contained in given list."""
  copyright_in: [String!]
  """All values that are not contained in given list."""
  copyright_not_in: [String!]
  """All values containing the given string."""
  copyright_contains: String
  """All values not containing the given string."""
  copyright_not_contains: String
  """All values starting with the given string."""
  copyright_starts_with: String
  """All values not starting with the given string."""
  copyright_not_starts_with: String
  """All values ending with the given string."""
  copyright_ends_with: String
  """All values not ending with the given string"""
  copyright_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  socialLinks_every: PageLinkWhereInput
  socialLinks_some: PageLinkWhereInput
  socialLinks_none: PageLinkWhereInput
  legalLinks_every: PageLinkWhereInput
  legalLinks_some: PageLinkWhereInput
  legalLinks_none: PageLinkWhereInput
}

enum FooterOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  copyright_ASC
  copyright_DESC
}

input FooterUpdateInput {
  identity: String
  copyright: String
  socialLinks: PageLinkUpdateManyInlineInput
  legalLinks: PageLinkUpdateManyInlineInput
}

input FooterUpdateManyInlineInput {
  """Create and connect multiple Footer documents"""
  create: [FooterCreateInput!]
  """Connect multiple existing Footer documents"""
  connect: [FooterConnectInput!]
  """Override currently-connected documents with multiple existing Footer documents"""
  set: [FooterWhereUniqueInput!]
  """Update multiple Footer documents"""
  update: [FooterUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Footer documents"""
  upsert: [FooterUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Footer documents"""
  disconnect: [FooterWhereUniqueInput!]
  """Delete multiple Footer documents"""
  delete: [FooterWhereUniqueInput!]
}

input FooterUpdateManyInput {
  copyright: String
}

input FooterUpdateManyWithNestedWhereInput {
  """Document search"""
  where: FooterWhereInput!
  """Update many input"""
  data: FooterUpdateManyInput!
}

input FooterUpdateOneInlineInput {
  """Create and connect one Footer document"""
  create: FooterCreateInput
  """Update single Footer document"""
  update: FooterUpdateWithNestedWhereUniqueInput
  """Upsert single Footer document"""
  upsert: FooterUpsertWithNestedWhereUniqueInput
  """Connect existing Footer document"""
  connect: FooterWhereUniqueInput
  """Disconnect currently connected Footer document"""
  disconnect: Boolean
  """Delete currently connected Footer document"""
  delete: Boolean
}

input FooterUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: FooterWhereUniqueInput!
  """Document to update"""
  data: FooterUpdateInput!
}

input FooterUpsertInput {
  """Create document if it didn't exist"""
  create: FooterCreateInput!
  """Update document if it exists"""
  update: FooterUpdateInput!
}

input FooterUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: FooterWhereUniqueInput!
  """Upsert data"""
  data: FooterUpsertInput!
}

"""Identifies documents"""
input FooterWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [FooterWhereInput!]
  """Logical OR on all given filters."""
  OR: [FooterWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [FooterWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  copyright: String
  """All values that are not equal to given value."""
  copyright_not: String
  """All values that are contained in given list."""
  copyright_in: [String!]
  """All values that are not contained in given list."""
  copyright_not_in: [String!]
  """All values containing the given string."""
  copyright_contains: String
  """All values not containing the given string."""
  copyright_not_contains: String
  """All values starting with the given string."""
  copyright_starts_with: String
  """All values not starting with the given string."""
  copyright_not_starts_with: String
  """All values ending with the given string."""
  copyright_ends_with: String
  """All values not ending with the given string"""
  copyright_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  socialLinks_every: PageLinkWhereInput
  socialLinks_some: PageLinkWhereInput
  socialLinks_none: PageLinkWhereInput
  legalLinks_every: PageLinkWhereInput
  legalLinks_some: PageLinkWhereInput
  legalLinks_none: PageLinkWhereInput
}

"""References Footer record uniquely"""
input FooterWhereUniqueInput {
  id: ID
  identity: String
}

scalar Hex

enum ImageFit {
  """Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio."""
  clip
  """Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries."""
  crop
  """Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method."""
  scale
  """Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size."""
  max
}

input ImageResizeInput {
  """The width in pixels to resize the image to. The value must be an integer from 1 to 10000."""
  width: Int
  """The height in pixels to resize the image to. The value must be an integer from 1 to 10000."""
  height: Int
  """The default value for the fit parameter is fit:clip."""
  fit: ImageFit
}

"""Transformations for Images"""
input ImageTransformationInput {
  """Resizes the image"""
  resize: ImageResizeInput
}

"""Raw JSON value"""
scalar Json

"""Locale system enumeration"""
enum Locale {
  """System locale"""
  en
}

"""Representing a geolocation point with latitude and longitude"""
type Location {
  latitude: Float!
  longitude: Float!
  distance(from: LocationInput!): Float!
}

"""Input for a geolocation point with latitude and longitude"""
input LocationInput {
  latitude: Float!
  longitude: Float!
}

"""The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1."""
scalar Long

type MagentoCategory implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [MagentoCategory!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [MagentoCategory!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  url: String!
  category: String
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  rowProductGrids(
    where: RowProductGridWhereInput
    orderBy: RowProductGridOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowProductGrids` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowProductGrid!]!
  """List of MagentoCategory versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input MagentoCategoryConnectInput {
  """Document to connect"""
  where: MagentoCategoryWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type MagentoCategoryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [MagentoCategoryEdge!]!
  aggregate: Aggregate!
}

input MagentoCategoryCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """url input for default locale (en)"""
  url: String!
  category: String
  rowProductGrids: RowProductGridCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: MagentoCategoryCreateLocalizationsInput
}

input MagentoCategoryCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  url: String!
}

input MagentoCategoryCreateLocalizationInput {
  """Localization input"""
  data: MagentoCategoryCreateLocalizationDataInput!
  locale: Locale!
}

input MagentoCategoryCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [MagentoCategoryCreateLocalizationInput!]
}

input MagentoCategoryCreateManyInlineInput {
  """Create and connect multiple existing MagentoCategory documents"""
  create: [MagentoCategoryCreateInput!]
  """Connect multiple existing MagentoCategory documents"""
  connect: [MagentoCategoryWhereUniqueInput!]
}

input MagentoCategoryCreateOneInlineInput {
  """Create and connect one MagentoCategory document"""
  create: MagentoCategoryCreateInput
  """Connect one existing MagentoCategory document"""
  connect: MagentoCategoryWhereUniqueInput
}

"""An edge in a connection."""
type MagentoCategoryEdge {
  """The item at the end of the edge."""
  node: MagentoCategory!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input MagentoCategoryManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [MagentoCategoryWhereInput!]
  """Logical OR on all given filters."""
  OR: [MagentoCategoryWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [MagentoCategoryWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  category: String
  """All values that are not equal to given value."""
  category_not: String
  """All values that are contained in given list."""
  category_in: [String!]
  """All values that are not contained in given list."""
  category_not_in: [String!]
  """All values containing the given string."""
  category_contains: String
  """All values not containing the given string."""
  category_not_contains: String
  """All values starting with the given string."""
  category_starts_with: String
  """All values not starting with the given string."""
  category_not_starts_with: String
  """All values ending with the given string."""
  category_ends_with: String
  """All values not ending with the given string"""
  category_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  rowProductGrids_every: RowProductGridWhereInput
  rowProductGrids_some: RowProductGridWhereInput
  rowProductGrids_none: RowProductGridWhereInput
}

enum MagentoCategoryOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  url_ASC
  url_DESC
  category_ASC
  category_DESC
}

input MagentoCategoryUpdateInput {
  """url input for default locale (en)"""
  url: String
  category: String
  rowProductGrids: RowProductGridUpdateManyInlineInput
  """Manage document localizations"""
  localizations: MagentoCategoryUpdateLocalizationsInput
}

input MagentoCategoryUpdateLocalizationDataInput {
  url: String
}

input MagentoCategoryUpdateLocalizationInput {
  data: MagentoCategoryUpdateLocalizationDataInput!
  locale: Locale!
}

input MagentoCategoryUpdateLocalizationsInput {
  """Localizations to create"""
  create: [MagentoCategoryCreateLocalizationInput!]
  """Localizations to update"""
  update: [MagentoCategoryUpdateLocalizationInput!]
  upsert: [MagentoCategoryUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input MagentoCategoryUpdateManyInlineInput {
  """Create and connect multiple MagentoCategory documents"""
  create: [MagentoCategoryCreateInput!]
  """Connect multiple existing MagentoCategory documents"""
  connect: [MagentoCategoryConnectInput!]
  """Override currently-connected documents with multiple existing MagentoCategory documents"""
  set: [MagentoCategoryWhereUniqueInput!]
  """Update multiple MagentoCategory documents"""
  update: [MagentoCategoryUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple MagentoCategory documents"""
  upsert: [MagentoCategoryUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple MagentoCategory documents"""
  disconnect: [MagentoCategoryWhereUniqueInput!]
  """Delete multiple MagentoCategory documents"""
  delete: [MagentoCategoryWhereUniqueInput!]
}

input MagentoCategoryUpdateManyInput {
  category: String
}

input MagentoCategoryUpdateManyWithNestedWhereInput {
  """Document search"""
  where: MagentoCategoryWhereInput!
  """Update many input"""
  data: MagentoCategoryUpdateManyInput!
}

input MagentoCategoryUpdateOneInlineInput {
  """Create and connect one MagentoCategory document"""
  create: MagentoCategoryCreateInput
  """Update single MagentoCategory document"""
  update: MagentoCategoryUpdateWithNestedWhereUniqueInput
  """Upsert single MagentoCategory document"""
  upsert: MagentoCategoryUpsertWithNestedWhereUniqueInput
  """Connect existing MagentoCategory document"""
  connect: MagentoCategoryWhereUniqueInput
  """Disconnect currently connected MagentoCategory document"""
  disconnect: Boolean
  """Delete currently connected MagentoCategory document"""
  delete: Boolean
}

input MagentoCategoryUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: MagentoCategoryWhereUniqueInput!
  """Document to update"""
  data: MagentoCategoryUpdateInput!
}

input MagentoCategoryUpsertInput {
  """Create document if it didn't exist"""
  create: MagentoCategoryCreateInput!
  """Update document if it exists"""
  update: MagentoCategoryUpdateInput!
}

input MagentoCategoryUpsertLocalizationInput {
  update: MagentoCategoryUpdateLocalizationDataInput!
  create: MagentoCategoryCreateLocalizationDataInput!
  locale: Locale!
}

input MagentoCategoryUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: MagentoCategoryWhereUniqueInput!
  """Upsert data"""
  data: MagentoCategoryUpsertInput!
}

"""Identifies documents"""
input MagentoCategoryWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [MagentoCategoryWhereInput!]
  """Logical OR on all given filters."""
  OR: [MagentoCategoryWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [MagentoCategoryWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  url: String
  """All values that are not equal to given value."""
  url_not: String
  """All values that are contained in given list."""
  url_in: [String!]
  """All values that are not contained in given list."""
  url_not_in: [String!]
  """All values containing the given string."""
  url_contains: String
  """All values not containing the given string."""
  url_not_contains: String
  """All values starting with the given string."""
  url_starts_with: String
  """All values not starting with the given string."""
  url_not_starts_with: String
  """All values ending with the given string."""
  url_ends_with: String
  """All values not ending with the given string"""
  url_not_ends_with: String
  category: String
  """All values that are not equal to given value."""
  category_not: String
  """All values that are contained in given list."""
  category_in: [String!]
  """All values that are not contained in given list."""
  category_not_in: [String!]
  """All values containing the given string."""
  category_contains: String
  """All values not containing the given string."""
  category_not_contains: String
  """All values starting with the given string."""
  category_starts_with: String
  """All values not starting with the given string."""
  category_not_starts_with: String
  """All values ending with the given string."""
  category_ends_with: String
  """All values not ending with the given string"""
  category_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  rowProductGrids_every: RowProductGridWhereInput
  rowProductGrids_some: RowProductGridWhereInput
  rowProductGrids_none: RowProductGridWhereInput
}

"""References MagentoCategory record uniquely"""
input MagentoCategoryWhereUniqueInput {
  id: ID
}

enum MetaRobots {
  INDEX_FOLLOW
  INDEX_NOFOLLOW
  NOINDEX_FOLLOW
  NOINDEX_NOFOLLOW
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
  """The Stage of an object"""
  stage: Stage!
}

type Page implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [Page!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [Page!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  url: String!
  title: String
  metaTitle: String!
  metaDescription: String!
  date: DateTime
  author: String
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  rowButtonLinkLists(
    where: RowButtonLinkListWhereInput
    orderBy: RowButtonLinkListOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowButtonLinkLists` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowButtonLinkList!]!
  """9:6 for general usage"""
  asset(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `asset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  childPages(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `childPages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  relatedPages(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `relatedPages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  metaRobots: MetaRobots!
  content(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `content` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageContent!]!
  """List of Page versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input PageConnectInput {
  """Document to connect"""
  where: PageWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type PageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [PageEdge!]!
  aggregate: Aggregate!
}

union PageContent = RowBlogContent | RowButtonLinkList | RowColumnOne | RowColumnThree | RowColumnTwo | RowContentLinks | RowHeroBanner | RowProductBackstory | RowProductGrid | RowQuote | RowServiceOptions | RowSpecialBanner | RowSwipeableGrid

input PageContentConnectInput {
  RowSpecialBanner: RowSpecialBannerConnectInput
  RowColumnOne: RowColumnOneConnectInput
  RowColumnTwo: RowColumnTwoConnectInput
  RowColumnThree: RowColumnThreeConnectInput
  RowQuote: RowQuoteConnectInput
  RowHeroBanner: RowHeroBannerConnectInput
  RowProductGrid: RowProductGridConnectInput
  RowSwipeableGrid: RowSwipeableGridConnectInput
  RowProductBackstory: RowProductBackstoryConnectInput
  RowButtonLinkList: RowButtonLinkListConnectInput
  RowServiceOptions: RowServiceOptionsConnectInput
  RowBlogContent: RowBlogContentConnectInput
  RowContentLinks: RowContentLinksConnectInput
}

input PageContentCreateInput {
  RowSpecialBanner: RowSpecialBannerCreateInput
  RowColumnOne: RowColumnOneCreateInput
  RowColumnTwo: RowColumnTwoCreateInput
  RowColumnThree: RowColumnThreeCreateInput
  RowQuote: RowQuoteCreateInput
  RowHeroBanner: RowHeroBannerCreateInput
  RowProductGrid: RowProductGridCreateInput
  RowSwipeableGrid: RowSwipeableGridCreateInput
  RowProductBackstory: RowProductBackstoryCreateInput
  RowButtonLinkList: RowButtonLinkListCreateInput
  RowServiceOptions: RowServiceOptionsCreateInput
  RowBlogContent: RowBlogContentCreateInput
  RowContentLinks: RowContentLinksCreateInput
}

input PageContentCreateManyInlineInput {
  """Create and connect multiple existing PageContent documents"""
  create: [PageContentCreateInput!]
  """Connect multiple existing PageContent documents"""
  connect: [PageContentWhereUniqueInput!]
}

input PageContentCreateOneInlineInput {
  """Create and connect one PageContent document"""
  create: PageContentCreateInput
  """Connect one existing PageContent document"""
  connect: PageContentWhereUniqueInput
}

input PageContentUpdateInput {
  RowSpecialBanner: RowSpecialBannerUpdateInput
  RowColumnOne: RowColumnOneUpdateInput
  RowColumnTwo: RowColumnTwoUpdateInput
  RowColumnThree: RowColumnThreeUpdateInput
  RowQuote: RowQuoteUpdateInput
  RowHeroBanner: RowHeroBannerUpdateInput
  RowProductGrid: RowProductGridUpdateInput
  RowSwipeableGrid: RowSwipeableGridUpdateInput
  RowProductBackstory: RowProductBackstoryUpdateInput
  RowButtonLinkList: RowButtonLinkListUpdateInput
  RowServiceOptions: RowServiceOptionsUpdateInput
  RowBlogContent: RowBlogContentUpdateInput
  RowContentLinks: RowContentLinksUpdateInput
}

input PageContentUpdateManyInlineInput {
  """Create and connect multiple PageContent documents"""
  create: [PageContentCreateInput!]
  """Connect multiple existing PageContent documents"""
  connect: [PageContentConnectInput!]
  """Override currently-connected documents with multiple existing PageContent documents"""
  set: [PageContentWhereUniqueInput!]
  """Update multiple PageContent documents"""
  update: [PageContentUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple PageContent documents"""
  upsert: [PageContentUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple PageContent documents"""
  disconnect: [PageContentWhereUniqueInput!]
  """Delete multiple PageContent documents"""
  delete: [PageContentWhereUniqueInput!]
}

input PageContentUpdateManyWithNestedWhereInput {
  RowSpecialBanner: RowSpecialBannerUpdateManyWithNestedWhereInput
  RowColumnOne: RowColumnOneUpdateManyWithNestedWhereInput
  RowColumnTwo: RowColumnTwoUpdateManyWithNestedWhereInput
  RowColumnThree: RowColumnThreeUpdateManyWithNestedWhereInput
  RowQuote: RowQuoteUpdateManyWithNestedWhereInput
  RowHeroBanner: RowHeroBannerUpdateManyWithNestedWhereInput
  RowProductGrid: RowProductGridUpdateManyWithNestedWhereInput
  RowSwipeableGrid: RowSwipeableGridUpdateManyWithNestedWhereInput
  RowProductBackstory: RowProductBackstoryUpdateManyWithNestedWhereInput
  RowButtonLinkList: RowButtonLinkListUpdateManyWithNestedWhereInput
  RowServiceOptions: RowServiceOptionsUpdateManyWithNestedWhereInput
  RowBlogContent: RowBlogContentUpdateManyWithNestedWhereInput
  RowContentLinks: RowContentLinksUpdateManyWithNestedWhereInput
}

input PageContentUpdateOneInlineInput {
  """Create and connect one PageContent document"""
  create: PageContentCreateInput
  """Update single PageContent document"""
  update: PageContentUpdateWithNestedWhereUniqueInput
  """Upsert single PageContent document"""
  upsert: PageContentUpsertWithNestedWhereUniqueInput
  """Connect existing PageContent document"""
  connect: PageContentWhereUniqueInput
  """Disconnect currently connected PageContent document"""
  disconnect: Boolean
  """Delete currently connected PageContent document"""
  delete: Boolean
}

input PageContentUpdateWithNestedWhereUniqueInput {
  RowSpecialBanner: RowSpecialBannerUpdateWithNestedWhereUniqueInput
  RowColumnOne: RowColumnOneUpdateWithNestedWhereUniqueInput
  RowColumnTwo: RowColumnTwoUpdateWithNestedWhereUniqueInput
  RowColumnThree: RowColumnThreeUpdateWithNestedWhereUniqueInput
  RowQuote: RowQuoteUpdateWithNestedWhereUniqueInput
  RowHeroBanner: RowHeroBannerUpdateWithNestedWhereUniqueInput
  RowProductGrid: RowProductGridUpdateWithNestedWhereUniqueInput
  RowSwipeableGrid: RowSwipeableGridUpdateWithNestedWhereUniqueInput
  RowProductBackstory: RowProductBackstoryUpdateWithNestedWhereUniqueInput
  RowButtonLinkList: RowButtonLinkListUpdateWithNestedWhereUniqueInput
  RowServiceOptions: RowServiceOptionsUpdateWithNestedWhereUniqueInput
  RowBlogContent: RowBlogContentUpdateWithNestedWhereUniqueInput
  RowContentLinks: RowContentLinksUpdateWithNestedWhereUniqueInput
}

input PageContentUpsertWithNestedWhereUniqueInput {
  RowSpecialBanner: RowSpecialBannerUpsertWithNestedWhereUniqueInput
  RowColumnOne: RowColumnOneUpsertWithNestedWhereUniqueInput
  RowColumnTwo: RowColumnTwoUpsertWithNestedWhereUniqueInput
  RowColumnThree: RowColumnThreeUpsertWithNestedWhereUniqueInput
  RowQuote: RowQuoteUpsertWithNestedWhereUniqueInput
  RowHeroBanner: RowHeroBannerUpsertWithNestedWhereUniqueInput
  RowProductGrid: RowProductGridUpsertWithNestedWhereUniqueInput
  RowSwipeableGrid: RowSwipeableGridUpsertWithNestedWhereUniqueInput
  RowProductBackstory: RowProductBackstoryUpsertWithNestedWhereUniqueInput
  RowButtonLinkList: RowButtonLinkListUpsertWithNestedWhereUniqueInput
  RowServiceOptions: RowServiceOptionsUpsertWithNestedWhereUniqueInput
  RowBlogContent: RowBlogContentUpsertWithNestedWhereUniqueInput
  RowContentLinks: RowContentLinksUpsertWithNestedWhereUniqueInput
}

input PageContentWhereInput {
  RowSpecialBanner: RowSpecialBannerWhereInput
  RowColumnOne: RowColumnOneWhereInput
  RowColumnTwo: RowColumnTwoWhereInput
  RowColumnThree: RowColumnThreeWhereInput
  RowQuote: RowQuoteWhereInput
  RowHeroBanner: RowHeroBannerWhereInput
  RowProductGrid: RowProductGridWhereInput
  RowSwipeableGrid: RowSwipeableGridWhereInput
  RowProductBackstory: RowProductBackstoryWhereInput
  RowButtonLinkList: RowButtonLinkListWhereInput
  RowServiceOptions: RowServiceOptionsWhereInput
  RowBlogContent: RowBlogContentWhereInput
  RowContentLinks: RowContentLinksWhereInput
}

input PageContentWhereUniqueInput {
  RowSpecialBanner: RowSpecialBannerWhereUniqueInput
  RowColumnOne: RowColumnOneWhereUniqueInput
  RowColumnTwo: RowColumnTwoWhereUniqueInput
  RowColumnThree: RowColumnThreeWhereUniqueInput
  RowQuote: RowQuoteWhereUniqueInput
  RowHeroBanner: RowHeroBannerWhereUniqueInput
  RowProductGrid: RowProductGridWhereUniqueInput
  RowSwipeableGrid: RowSwipeableGridWhereUniqueInput
  RowProductBackstory: RowProductBackstoryWhereUniqueInput
  RowButtonLinkList: RowButtonLinkListWhereUniqueInput
  RowServiceOptions: RowServiceOptionsWhereUniqueInput
  RowBlogContent: RowBlogContentWhereUniqueInput
  RowContentLinks: RowContentLinksWhereUniqueInput
}

input PageCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """url input for default locale (en)"""
  url: String!
  """title input for default locale (en)"""
  title: String
  """metaTitle input for default locale (en)"""
  metaTitle: String!
  """metaDescription input for default locale (en)"""
  metaDescription: String!
  date: DateTime
  """author input for default locale (en)"""
  author: String
  rowButtonLinkLists: RowButtonLinkListCreateManyInlineInput
  asset: AssetCreateOneInlineInput
  childPages: PageCreateManyInlineInput
  relatedPages: PageCreateManyInlineInput
  """metaRobots input for default locale (en)"""
  metaRobots: MetaRobots!
  content: PageContentCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: PageCreateLocalizationsInput
}

input PageCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  url: String!
  title: String
  metaTitle: String!
  metaDescription: String!
  author: String
  metaRobots: MetaRobots!
}

input PageCreateLocalizationInput {
  """Localization input"""
  data: PageCreateLocalizationDataInput!
  locale: Locale!
}

input PageCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [PageCreateLocalizationInput!]
}

input PageCreateManyInlineInput {
  """Create and connect multiple existing Page documents"""
  create: [PageCreateInput!]
  """Connect multiple existing Page documents"""
  connect: [PageWhereUniqueInput!]
}

input PageCreateOneInlineInput {
  """Create and connect one Page document"""
  create: PageCreateInput
  """Connect one existing Page document"""
  connect: PageWhereUniqueInput
}

"""An edge in a connection."""
type PageEdge {
  """The item at the end of the edge."""
  node: Page!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: String
  """When paginating forwards, the cursor to continue."""
  endCursor: String
  """Number of items in the current page."""
  pageSize: Int
}

type PageLink implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [PageLink!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [PageLink!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  title: String!
  description: RichText
  url: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  rowHeroBanners(
    where: RowHeroBannerWhereInput
    orderBy: RowHeroBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowHeroBanners` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowHeroBanner!]!
  rowProductGrids(
    where: RowProductGridWhereInput
    orderBy: RowProductGridOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowProductGrids` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowProductGrid!]!
  rowSpecialBanners(
    where: RowSpecialBannerWhereInput
    orderBy: RowSpecialBannerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowSpecialBanners` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowSpecialBanner!]!
  footerSocialLinks(
    where: FooterWhereInput
    orderBy: FooterOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `footerSocialLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Footer!]!
  footerLegalLinks(
    where: FooterWhereInput
    orderBy: FooterOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `footerLegalLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Footer!]!
  rowServiceOptionsMultiple(
    where: RowServiceOptionsWhereInput
    orderBy: RowServiceOptionsOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowServiceOptionsMultiple` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [RowServiceOptions!]!
  rowContentLinks(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `rowContentLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): RowContentLinks
  asset(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `asset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset
  uspsMultiple(
    where: UspsWhereInput
    orderBy: UspsOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `uspsMultiple` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Usps!]!
  """List of PageLink versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input PageLinkConnectInput {
  """Document to connect"""
  where: PageLinkWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type PageLinkConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [PageLinkEdge!]!
  aggregate: Aggregate!
}

input PageLinkCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """title input for default locale (en)"""
  title: String!
  """description input for default locale (en)"""
  description: RichTextAST
  """url input for default locale (en)"""
  url: String!
  rowHeroBanners: RowHeroBannerCreateManyInlineInput
  rowProductGrids: RowProductGridCreateManyInlineInput
  rowSpecialBanners: RowSpecialBannerCreateManyInlineInput
  footerSocialLinks: FooterCreateManyInlineInput
  footerLegalLinks: FooterCreateManyInlineInput
  rowServiceOptionsMultiple: RowServiceOptionsCreateManyInlineInput
  rowContentLinks: RowContentLinksCreateOneInlineInput
  asset: AssetCreateOneInlineInput
  uspsMultiple: UspsCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: PageLinkCreateLocalizationsInput
}

input PageLinkCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
  description: RichTextAST
  url: String!
}

input PageLinkCreateLocalizationInput {
  """Localization input"""
  data: PageLinkCreateLocalizationDataInput!
  locale: Locale!
}

input PageLinkCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [PageLinkCreateLocalizationInput!]
}

input PageLinkCreateManyInlineInput {
  """Create and connect multiple existing PageLink documents"""
  create: [PageLinkCreateInput!]
  """Connect multiple existing PageLink documents"""
  connect: [PageLinkWhereUniqueInput!]
}

input PageLinkCreateOneInlineInput {
  """Create and connect one PageLink document"""
  create: PageLinkCreateInput
  """Connect one existing PageLink document"""
  connect: PageLinkWhereUniqueInput
}

"""An edge in a connection."""
type PageLinkEdge {
  """The item at the end of the edge."""
  node: PageLink!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input PageLinkManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [PageLinkWhereInput!]
  """Logical OR on all given filters."""
  OR: [PageLinkWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [PageLinkWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  rowHeroBanners_every: RowHeroBannerWhereInput
  rowHeroBanners_some: RowHeroBannerWhereInput
  rowHeroBanners_none: RowHeroBannerWhereInput
  rowProductGrids_every: RowProductGridWhereInput
  rowProductGrids_some: RowProductGridWhereInput
  rowProductGrids_none: RowProductGridWhereInput
  rowSpecialBanners_every: RowSpecialBannerWhereInput
  rowSpecialBanners_some: RowSpecialBannerWhereInput
  rowSpecialBanners_none: RowSpecialBannerWhereInput
  footerSocialLinks_every: FooterWhereInput
  footerSocialLinks_some: FooterWhereInput
  footerSocialLinks_none: FooterWhereInput
  footerLegalLinks_every: FooterWhereInput
  footerLegalLinks_some: FooterWhereInput
  footerLegalLinks_none: FooterWhereInput
  rowServiceOptionsMultiple_every: RowServiceOptionsWhereInput
  rowServiceOptionsMultiple_some: RowServiceOptionsWhereInput
  rowServiceOptionsMultiple_none: RowServiceOptionsWhereInput
  rowContentLinks: RowContentLinksWhereInput
  asset: AssetWhereInput
  uspsMultiple_every: UspsWhereInput
  uspsMultiple_some: UspsWhereInput
  uspsMultiple_none: UspsWhereInput
}

enum PageLinkOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  title_ASC
  title_DESC
  url_ASC
  url_DESC
}

input PageLinkUpdateInput {
  """title input for default locale (en)"""
  title: String
  """description input for default locale (en)"""
  description: RichTextAST
  """url input for default locale (en)"""
  url: String
  rowHeroBanners: RowHeroBannerUpdateManyInlineInput
  rowProductGrids: RowProductGridUpdateManyInlineInput
  rowSpecialBanners: RowSpecialBannerUpdateManyInlineInput
  footerSocialLinks: FooterUpdateManyInlineInput
  footerLegalLinks: FooterUpdateManyInlineInput
  rowServiceOptionsMultiple: RowServiceOptionsUpdateManyInlineInput
  rowContentLinks: RowContentLinksUpdateOneInlineInput
  asset: AssetUpdateOneInlineInput
  uspsMultiple: UspsUpdateManyInlineInput
  """Manage document localizations"""
  localizations: PageLinkUpdateLocalizationsInput
}

input PageLinkUpdateLocalizationDataInput {
  title: String
  description: RichTextAST
  url: String
}

input PageLinkUpdateLocalizationInput {
  data: PageLinkUpdateLocalizationDataInput!
  locale: Locale!
}

input PageLinkUpdateLocalizationsInput {
  """Localizations to create"""
  create: [PageLinkCreateLocalizationInput!]
  """Localizations to update"""
  update: [PageLinkUpdateLocalizationInput!]
  upsert: [PageLinkUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input PageLinkUpdateManyInlineInput {
  """Create and connect multiple PageLink documents"""
  create: [PageLinkCreateInput!]
  """Connect multiple existing PageLink documents"""
  connect: [PageLinkConnectInput!]
  """Override currently-connected documents with multiple existing PageLink documents"""
  set: [PageLinkWhereUniqueInput!]
  """Update multiple PageLink documents"""
  update: [PageLinkUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple PageLink documents"""
  upsert: [PageLinkUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple PageLink documents"""
  disconnect: [PageLinkWhereUniqueInput!]
  """Delete multiple PageLink documents"""
  delete: [PageLinkWhereUniqueInput!]
}

input PageLinkUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """description input for default locale (en)"""
  description: RichTextAST
  """url input for default locale (en)"""
  url: String
  """Optional updates to localizations"""
  localizations: PageLinkUpdateManyLocalizationsInput
}

input PageLinkUpdateManyLocalizationDataInput {
  title: String
  description: RichTextAST
  url: String
}

input PageLinkUpdateManyLocalizationInput {
  data: PageLinkUpdateManyLocalizationDataInput!
  locale: Locale!
}

input PageLinkUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [PageLinkUpdateManyLocalizationInput!]
}

input PageLinkUpdateManyWithNestedWhereInput {
  """Document search"""
  where: PageLinkWhereInput!
  """Update many input"""
  data: PageLinkUpdateManyInput!
}

input PageLinkUpdateOneInlineInput {
  """Create and connect one PageLink document"""
  create: PageLinkCreateInput
  """Update single PageLink document"""
  update: PageLinkUpdateWithNestedWhereUniqueInput
  """Upsert single PageLink document"""
  upsert: PageLinkUpsertWithNestedWhereUniqueInput
  """Connect existing PageLink document"""
  connect: PageLinkWhereUniqueInput
  """Disconnect currently connected PageLink document"""
  disconnect: Boolean
  """Delete currently connected PageLink document"""
  delete: Boolean
}

input PageLinkUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: PageLinkWhereUniqueInput!
  """Document to update"""
  data: PageLinkUpdateInput!
}

input PageLinkUpsertInput {
  """Create document if it didn't exist"""
  create: PageLinkCreateInput!
  """Update document if it exists"""
  update: PageLinkUpdateInput!
}

input PageLinkUpsertLocalizationInput {
  update: PageLinkUpdateLocalizationDataInput!
  create: PageLinkCreateLocalizationDataInput!
  locale: Locale!
}

input PageLinkUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: PageLinkWhereUniqueInput!
  """Upsert data"""
  data: PageLinkUpsertInput!
}

"""Identifies documents"""
input PageLinkWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [PageLinkWhereInput!]
  """Logical OR on all given filters."""
  OR: [PageLinkWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [PageLinkWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  url: String
  """All values that are not equal to given value."""
  url_not: String
  """All values that are contained in given list."""
  url_in: [String!]
  """All values that are not contained in given list."""
  url_not_in: [String!]
  """All values containing the given string."""
  url_contains: String
  """All values not containing the given string."""
  url_not_contains: String
  """All values starting with the given string."""
  url_starts_with: String
  """All values not starting with the given string."""
  url_not_starts_with: String
  """All values ending with the given string."""
  url_ends_with: String
  """All values not ending with the given string"""
  url_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  rowHeroBanners_every: RowHeroBannerWhereInput
  rowHeroBanners_some: RowHeroBannerWhereInput
  rowHeroBanners_none: RowHeroBannerWhereInput
  rowProductGrids_every: RowProductGridWhereInput
  rowProductGrids_some: RowProductGridWhereInput
  rowProductGrids_none: RowProductGridWhereInput
  rowSpecialBanners_every: RowSpecialBannerWhereInput
  rowSpecialBanners_some: RowSpecialBannerWhereInput
  rowSpecialBanners_none: RowSpecialBannerWhereInput
  footerSocialLinks_every: FooterWhereInput
  footerSocialLinks_some: FooterWhereInput
  footerSocialLinks_none: FooterWhereInput
  footerLegalLinks_every: FooterWhereInput
  footerLegalLinks_some: FooterWhereInput
  footerLegalLinks_none: FooterWhereInput
  rowServiceOptionsMultiple_every: RowServiceOptionsWhereInput
  rowServiceOptionsMultiple_some: RowServiceOptionsWhereInput
  rowServiceOptionsMultiple_none: RowServiceOptionsWhereInput
  rowContentLinks: RowContentLinksWhereInput
  asset: AssetWhereInput
  uspsMultiple_every: UspsWhereInput
  uspsMultiple_some: UspsWhereInput
  uspsMultiple_none: UspsWhereInput
}

"""References PageLink record uniquely"""
input PageLinkWhereUniqueInput {
  id: ID
}

"""Identifies documents"""
input PageManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [PageWhereInput!]
  """Logical OR on all given filters."""
  OR: [PageWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [PageWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  date: DateTime
  """All values that are not equal to given value."""
  date_not: DateTime
  """All values that are contained in given list."""
  date_in: [DateTime!]
  """All values that are not contained in given list."""
  date_not_in: [DateTime!]
  """All values less than the given value."""
  date_lt: DateTime
  """All values less than or equal the given value."""
  date_lte: DateTime
  """All values greater than the given value."""
  date_gt: DateTime
  """All values greater than or equal the given value."""
  date_gte: DateTime
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  rowButtonLinkLists_every: RowButtonLinkListWhereInput
  rowButtonLinkLists_some: RowButtonLinkListWhereInput
  rowButtonLinkLists_none: RowButtonLinkListWhereInput
  asset: AssetWhereInput
  childPages_every: PageWhereInput
  childPages_some: PageWhereInput
  childPages_none: PageWhereInput
  relatedPages_every: PageWhereInput
  relatedPages_some: PageWhereInput
  relatedPages_none: PageWhereInput
}

enum PageOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  url_ASC
  url_DESC
  title_ASC
  title_DESC
  metaTitle_ASC
  metaTitle_DESC
  metaDescription_ASC
  metaDescription_DESC
  date_ASC
  date_DESC
  author_ASC
  author_DESC
  metaRobots_ASC
  metaRobots_DESC
}

input PageUpdateInput {
  """url input for default locale (en)"""
  url: String
  """title input for default locale (en)"""
  title: String
  """metaTitle input for default locale (en)"""
  metaTitle: String
  """metaDescription input for default locale (en)"""
  metaDescription: String
  date: DateTime
  """author input for default locale (en)"""
  author: String
  rowButtonLinkLists: RowButtonLinkListUpdateManyInlineInput
  asset: AssetUpdateOneInlineInput
  childPages: PageUpdateManyInlineInput
  relatedPages: PageUpdateManyInlineInput
  """metaRobots input for default locale (en)"""
  metaRobots: MetaRobots
  content: PageContentUpdateManyInlineInput
  """Manage document localizations"""
  localizations: PageUpdateLocalizationsInput
}

input PageUpdateLocalizationDataInput {
  url: String
  title: String
  metaTitle: String
  metaDescription: String
  author: String
  metaRobots: MetaRobots
}

input PageUpdateLocalizationInput {
  data: PageUpdateLocalizationDataInput!
  locale: Locale!
}

input PageUpdateLocalizationsInput {
  """Localizations to create"""
  create: [PageCreateLocalizationInput!]
  """Localizations to update"""
  update: [PageUpdateLocalizationInput!]
  upsert: [PageUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input PageUpdateManyInlineInput {
  """Create and connect multiple Page documents"""
  create: [PageCreateInput!]
  """Connect multiple existing Page documents"""
  connect: [PageConnectInput!]
  """Override currently-connected documents with multiple existing Page documents"""
  set: [PageWhereUniqueInput!]
  """Update multiple Page documents"""
  update: [PageUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Page documents"""
  upsert: [PageUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Page documents"""
  disconnect: [PageWhereUniqueInput!]
  """Delete multiple Page documents"""
  delete: [PageWhereUniqueInput!]
}

input PageUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """metaTitle input for default locale (en)"""
  metaTitle: String
  """metaDescription input for default locale (en)"""
  metaDescription: String
  date: DateTime
  """author input for default locale (en)"""
  author: String
  """metaRobots input for default locale (en)"""
  metaRobots: MetaRobots
  """Optional updates to localizations"""
  localizations: PageUpdateManyLocalizationsInput
}

input PageUpdateManyLocalizationDataInput {
  title: String
  metaTitle: String
  metaDescription: String
  author: String
  metaRobots: MetaRobots
}

input PageUpdateManyLocalizationInput {
  data: PageUpdateManyLocalizationDataInput!
  locale: Locale!
}

input PageUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [PageUpdateManyLocalizationInput!]
}

input PageUpdateManyWithNestedWhereInput {
  """Document search"""
  where: PageWhereInput!
  """Update many input"""
  data: PageUpdateManyInput!
}

input PageUpdateOneInlineInput {
  """Create and connect one Page document"""
  create: PageCreateInput
  """Update single Page document"""
  update: PageUpdateWithNestedWhereUniqueInput
  """Upsert single Page document"""
  upsert: PageUpsertWithNestedWhereUniqueInput
  """Connect existing Page document"""
  connect: PageWhereUniqueInput
  """Disconnect currently connected Page document"""
  disconnect: Boolean
  """Delete currently connected Page document"""
  delete: Boolean
}

input PageUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: PageWhereUniqueInput!
  """Document to update"""
  data: PageUpdateInput!
}

input PageUpsertInput {
  """Create document if it didn't exist"""
  create: PageCreateInput!
  """Update document if it exists"""
  update: PageUpdateInput!
}

input PageUpsertLocalizationInput {
  update: PageUpdateLocalizationDataInput!
  create: PageCreateLocalizationDataInput!
  locale: Locale!
}

input PageUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: PageWhereUniqueInput!
  """Upsert data"""
  data: PageUpsertInput!
}

"""Identifies documents"""
input PageWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [PageWhereInput!]
  """Logical OR on all given filters."""
  OR: [PageWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [PageWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  url: String
  """All values that are not equal to given value."""
  url_not: String
  """All values that are contained in given list."""
  url_in: [String!]
  """All values that are not contained in given list."""
  url_not_in: [String!]
  """All values containing the given string."""
  url_contains: String
  """All values not containing the given string."""
  url_not_contains: String
  """All values starting with the given string."""
  url_starts_with: String
  """All values not starting with the given string."""
  url_not_starts_with: String
  """All values ending with the given string."""
  url_ends_with: String
  """All values not ending with the given string"""
  url_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  metaTitle: String
  """All values that are not equal to given value."""
  metaTitle_not: String
  """All values that are contained in given list."""
  metaTitle_in: [String!]
  """All values that are not contained in given list."""
  metaTitle_not_in: [String!]
  """All values containing the given string."""
  metaTitle_contains: String
  """All values not containing the given string."""
  metaTitle_not_contains: String
  """All values starting with the given string."""
  metaTitle_starts_with: String
  """All values not starting with the given string."""
  metaTitle_not_starts_with: String
  """All values ending with the given string."""
  metaTitle_ends_with: String
  """All values not ending with the given string"""
  metaTitle_not_ends_with: String
  metaDescription: String
  """All values that are not equal to given value."""
  metaDescription_not: String
  """All values that are contained in given list."""
  metaDescription_in: [String!]
  """All values that are not contained in given list."""
  metaDescription_not_in: [String!]
  """All values containing the given string."""
  metaDescription_contains: String
  """All values not containing the given string."""
  metaDescription_not_contains: String
  """All values starting with the given string."""
  metaDescription_starts_with: String
  """All values not starting with the given string."""
  metaDescription_not_starts_with: String
  """All values ending with the given string."""
  metaDescription_ends_with: String
  """All values not ending with the given string"""
  metaDescription_not_ends_with: String
  date: DateTime
  """All values that are not equal to given value."""
  date_not: DateTime
  """All values that are contained in given list."""
  date_in: [DateTime!]
  """All values that are not contained in given list."""
  date_not_in: [DateTime!]
  """All values less than the given value."""
  date_lt: DateTime
  """All values less than or equal the given value."""
  date_lte: DateTime
  """All values greater than the given value."""
  date_gt: DateTime
  """All values greater than or equal the given value."""
  date_gte: DateTime
  author: String
  """All values that are not equal to given value."""
  author_not: String
  """All values that are contained in given list."""
  author_in: [String!]
  """All values that are not contained in given list."""
  author_not_in: [String!]
  """All values containing the given string."""
  author_contains: String
  """All values not containing the given string."""
  author_not_contains: String
  """All values starting with the given string."""
  author_starts_with: String
  """All values not starting with the given string."""
  author_not_starts_with: String
  """All values ending with the given string."""
  author_ends_with: String
  """All values not ending with the given string"""
  author_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  rowButtonLinkLists_every: RowButtonLinkListWhereInput
  rowButtonLinkLists_some: RowButtonLinkListWhereInput
  rowButtonLinkLists_none: RowButtonLinkListWhereInput
  asset: AssetWhereInput
  childPages_every: PageWhereInput
  childPages_some: PageWhereInput
  childPages_none: PageWhereInput
  relatedPages_every: PageWhereInput
  relatedPages_some: PageWhereInput
  relatedPages_none: PageWhereInput
  metaRobots: MetaRobots
  """All values that are not equal to given value."""
  metaRobots_not: MetaRobots
  """All values that are contained in given list."""
  metaRobots_in: [MetaRobots!]
  """All values that are not contained in given list."""
  metaRobots_not_in: [MetaRobots!]
}

"""References Page record uniquely"""
input PageWhereUniqueInput {
  id: ID
}

type Product implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [Product!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [Product!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  url: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  content(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `content` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [ProductContent!]!
  """List of Product versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input ProductConnectInput {
  """Document to connect"""
  where: ProductWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type ProductConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [ProductEdge!]!
  aggregate: Aggregate!
}

union ProductContent = RowColumnOne | RowColumnThree | RowColumnTwo | RowContentLinks | RowProductFeature | RowProductFeatureBoxed | RowProductRelated | RowProductReviews | RowProductSpecs | RowProductUpsells | RowQuote | RowSpecialBanner

input ProductContentConnectInput {
  RowColumnOne: RowColumnOneConnectInput
  RowColumnTwo: RowColumnTwoConnectInput
  RowColumnThree: RowColumnThreeConnectInput
  RowProductFeature: RowProductFeatureConnectInput
  RowSpecialBanner: RowSpecialBannerConnectInput
  RowQuote: RowQuoteConnectInput
  RowProductFeatureBoxed: RowProductFeatureBoxedConnectInput
  RowContentLinks: RowContentLinksConnectInput
  RowProductReviews: RowProductReviewsConnectInput
  RowProductRelated: RowProductRelatedConnectInput
  RowProductUpsells: RowProductUpsellsConnectInput
  RowProductSpecs: RowProductSpecsConnectInput
}

input ProductContentCreateInput {
  RowColumnOne: RowColumnOneCreateInput
  RowColumnTwo: RowColumnTwoCreateInput
  RowColumnThree: RowColumnThreeCreateInput
  RowProductFeature: RowProductFeatureCreateInput
  RowSpecialBanner: RowSpecialBannerCreateInput
  RowQuote: RowQuoteCreateInput
  RowProductFeatureBoxed: RowProductFeatureBoxedCreateInput
  RowContentLinks: RowContentLinksCreateInput
  RowProductReviews: RowProductReviewsCreateInput
  RowProductRelated: RowProductRelatedCreateInput
  RowProductUpsells: RowProductUpsellsCreateInput
  RowProductSpecs: RowProductSpecsCreateInput
}

input ProductContentCreateManyInlineInput {
  """Create and connect multiple existing ProductContent documents"""
  create: [ProductContentCreateInput!]
  """Connect multiple existing ProductContent documents"""
  connect: [ProductContentWhereUniqueInput!]
}

input ProductContentCreateOneInlineInput {
  """Create and connect one ProductContent document"""
  create: ProductContentCreateInput
  """Connect one existing ProductContent document"""
  connect: ProductContentWhereUniqueInput
}

input ProductContentUpdateInput {
  RowColumnOne: RowColumnOneUpdateInput
  RowColumnTwo: RowColumnTwoUpdateInput
  RowColumnThree: RowColumnThreeUpdateInput
  RowProductFeature: RowProductFeatureUpdateInput
  RowSpecialBanner: RowSpecialBannerUpdateInput
  RowQuote: RowQuoteUpdateInput
  RowProductFeatureBoxed: RowProductFeatureBoxedUpdateInput
  RowContentLinks: RowContentLinksUpdateInput
  RowProductReviews: RowProductReviewsUpdateInput
  RowProductRelated: RowProductRelatedUpdateInput
  RowProductUpsells: RowProductUpsellsUpdateInput
  RowProductSpecs: RowProductSpecsUpdateInput
}

input ProductContentUpdateManyInlineInput {
  """Create and connect multiple ProductContent documents"""
  create: [ProductContentCreateInput!]
  """Connect multiple existing ProductContent documents"""
  connect: [ProductContentConnectInput!]
  """Override currently-connected documents with multiple existing ProductContent documents"""
  set: [ProductContentWhereUniqueInput!]
  """Update multiple ProductContent documents"""
  update: [ProductContentUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple ProductContent documents"""
  upsert: [ProductContentUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple ProductContent documents"""
  disconnect: [ProductContentWhereUniqueInput!]
  """Delete multiple ProductContent documents"""
  delete: [ProductContentWhereUniqueInput!]
}

input ProductContentUpdateManyWithNestedWhereInput {
  RowColumnOne: RowColumnOneUpdateManyWithNestedWhereInput
  RowColumnTwo: RowColumnTwoUpdateManyWithNestedWhereInput
  RowColumnThree: RowColumnThreeUpdateManyWithNestedWhereInput
  RowProductFeature: RowProductFeatureUpdateManyWithNestedWhereInput
  RowSpecialBanner: RowSpecialBannerUpdateManyWithNestedWhereInput
  RowQuote: RowQuoteUpdateManyWithNestedWhereInput
  RowProductFeatureBoxed: RowProductFeatureBoxedUpdateManyWithNestedWhereInput
  RowContentLinks: RowContentLinksUpdateManyWithNestedWhereInput
  RowProductReviews: RowProductReviewsUpdateManyWithNestedWhereInput
  RowProductRelated: RowProductRelatedUpdateManyWithNestedWhereInput
  RowProductUpsells: RowProductUpsellsUpdateManyWithNestedWhereInput
  RowProductSpecs: RowProductSpecsUpdateManyWithNestedWhereInput
}

input ProductContentUpdateOneInlineInput {
  """Create and connect one ProductContent document"""
  create: ProductContentCreateInput
  """Update single ProductContent document"""
  update: ProductContentUpdateWithNestedWhereUniqueInput
  """Upsert single ProductContent document"""
  upsert: ProductContentUpsertWithNestedWhereUniqueInput
  """Connect existing ProductContent document"""
  connect: ProductContentWhereUniqueInput
  """Disconnect currently connected ProductContent document"""
  disconnect: Boolean
  """Delete currently connected ProductContent document"""
  delete: Boolean
}

input ProductContentUpdateWithNestedWhereUniqueInput {
  RowColumnOne: RowColumnOneUpdateWithNestedWhereUniqueInput
  RowColumnTwo: RowColumnTwoUpdateWithNestedWhereUniqueInput
  RowColumnThree: RowColumnThreeUpdateWithNestedWhereUniqueInput
  RowProductFeature: RowProductFeatureUpdateWithNestedWhereUniqueInput
  RowSpecialBanner: RowSpecialBannerUpdateWithNestedWhereUniqueInput
  RowQuote: RowQuoteUpdateWithNestedWhereUniqueInput
  RowProductFeatureBoxed: RowProductFeatureBoxedUpdateWithNestedWhereUniqueInput
  RowContentLinks: RowContentLinksUpdateWithNestedWhereUniqueInput
  RowProductReviews: RowProductReviewsUpdateWithNestedWhereUniqueInput
  RowProductRelated: RowProductRelatedUpdateWithNestedWhereUniqueInput
  RowProductUpsells: RowProductUpsellsUpdateWithNestedWhereUniqueInput
  RowProductSpecs: RowProductSpecsUpdateWithNestedWhereUniqueInput
}

input ProductContentUpsertWithNestedWhereUniqueInput {
  RowColumnOne: RowColumnOneUpsertWithNestedWhereUniqueInput
  RowColumnTwo: RowColumnTwoUpsertWithNestedWhereUniqueInput
  RowColumnThree: RowColumnThreeUpsertWithNestedWhereUniqueInput
  RowProductFeature: RowProductFeatureUpsertWithNestedWhereUniqueInput
  RowSpecialBanner: RowSpecialBannerUpsertWithNestedWhereUniqueInput
  RowQuote: RowQuoteUpsertWithNestedWhereUniqueInput
  RowProductFeatureBoxed: RowProductFeatureBoxedUpsertWithNestedWhereUniqueInput
  RowContentLinks: RowContentLinksUpsertWithNestedWhereUniqueInput
  RowProductReviews: RowProductReviewsUpsertWithNestedWhereUniqueInput
  RowProductRelated: RowProductRelatedUpsertWithNestedWhereUniqueInput
  RowProductUpsells: RowProductUpsellsUpsertWithNestedWhereUniqueInput
  RowProductSpecs: RowProductSpecsUpsertWithNestedWhereUniqueInput
}

input ProductContentWhereInput {
  RowColumnOne: RowColumnOneWhereInput
  RowColumnTwo: RowColumnTwoWhereInput
  RowColumnThree: RowColumnThreeWhereInput
  RowProductFeature: RowProductFeatureWhereInput
  RowSpecialBanner: RowSpecialBannerWhereInput
  RowQuote: RowQuoteWhereInput
  RowProductFeatureBoxed: RowProductFeatureBoxedWhereInput
  RowContentLinks: RowContentLinksWhereInput
  RowProductReviews: RowProductReviewsWhereInput
  RowProductRelated: RowProductRelatedWhereInput
  RowProductUpsells: RowProductUpsellsWhereInput
  RowProductSpecs: RowProductSpecsWhereInput
}

input ProductContentWhereUniqueInput {
  RowColumnOne: RowColumnOneWhereUniqueInput
  RowColumnTwo: RowColumnTwoWhereUniqueInput
  RowColumnThree: RowColumnThreeWhereUniqueInput
  RowProductFeature: RowProductFeatureWhereUniqueInput
  RowSpecialBanner: RowSpecialBannerWhereUniqueInput
  RowQuote: RowQuoteWhereUniqueInput
  RowProductFeatureBoxed: RowProductFeatureBoxedWhereUniqueInput
  RowContentLinks: RowContentLinksWhereUniqueInput
  RowProductReviews: RowProductReviewsWhereUniqueInput
  RowProductRelated: RowProductRelatedWhereUniqueInput
  RowProductUpsells: RowProductUpsellsWhereUniqueInput
  RowProductSpecs: RowProductSpecsWhereUniqueInput
}

input ProductCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """url input for default locale (en)"""
  url: String!
  content: ProductContentCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: ProductCreateLocalizationsInput
}

input ProductCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  url: String!
}

input ProductCreateLocalizationInput {
  """Localization input"""
  data: ProductCreateLocalizationDataInput!
  locale: Locale!
}

input ProductCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [ProductCreateLocalizationInput!]
}

input ProductCreateManyInlineInput {
  """Create and connect multiple existing Product documents"""
  create: [ProductCreateInput!]
  """Connect multiple existing Product documents"""
  connect: [ProductWhereUniqueInput!]
}

input ProductCreateOneInlineInput {
  """Create and connect one Product document"""
  create: ProductCreateInput
  """Connect one existing Product document"""
  connect: ProductWhereUniqueInput
}

"""An edge in a connection."""
type ProductEdge {
  """The item at the end of the edge."""
  node: Product!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input ProductManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ProductWhereInput!]
  """Logical OR on all given filters."""
  OR: [ProductWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
}

enum ProductOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  url_ASC
  url_DESC
}

input ProductUpdateInput {
  """url input for default locale (en)"""
  url: String
  content: ProductContentUpdateManyInlineInput
  """Manage document localizations"""
  localizations: ProductUpdateLocalizationsInput
}

input ProductUpdateLocalizationDataInput {
  url: String
}

input ProductUpdateLocalizationInput {
  data: ProductUpdateLocalizationDataInput!
  locale: Locale!
}

input ProductUpdateLocalizationsInput {
  """Localizations to create"""
  create: [ProductCreateLocalizationInput!]
  """Localizations to update"""
  update: [ProductUpdateLocalizationInput!]
  upsert: [ProductUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input ProductUpdateManyInlineInput {
  """Create and connect multiple Product documents"""
  create: [ProductCreateInput!]
  """Connect multiple existing Product documents"""
  connect: [ProductConnectInput!]
  """Override currently-connected documents with multiple existing Product documents"""
  set: [ProductWhereUniqueInput!]
  """Update multiple Product documents"""
  update: [ProductUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Product documents"""
  upsert: [ProductUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Product documents"""
  disconnect: [ProductWhereUniqueInput!]
  """Delete multiple Product documents"""
  delete: [ProductWhereUniqueInput!]
}

input ProductUpdateManyInput {
  """No fields in updateMany data input"""
  _: String
}

input ProductUpdateManyWithNestedWhereInput {
  """Document search"""
  where: ProductWhereInput!
  """Update many input"""
  data: ProductUpdateManyInput!
}

input ProductUpdateOneInlineInput {
  """Create and connect one Product document"""
  create: ProductCreateInput
  """Update single Product document"""
  update: ProductUpdateWithNestedWhereUniqueInput
  """Upsert single Product document"""
  upsert: ProductUpsertWithNestedWhereUniqueInput
  """Connect existing Product document"""
  connect: ProductWhereUniqueInput
  """Disconnect currently connected Product document"""
  disconnect: Boolean
  """Delete currently connected Product document"""
  delete: Boolean
}

input ProductUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: ProductWhereUniqueInput!
  """Document to update"""
  data: ProductUpdateInput!
}

input ProductUpsertInput {
  """Create document if it didn't exist"""
  create: ProductCreateInput!
  """Update document if it exists"""
  update: ProductUpdateInput!
}

input ProductUpsertLocalizationInput {
  update: ProductUpdateLocalizationDataInput!
  create: ProductCreateLocalizationDataInput!
  locale: Locale!
}

input ProductUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: ProductWhereUniqueInput!
  """Upsert data"""
  data: ProductUpsertInput!
}

"""Identifies documents"""
input ProductWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [ProductWhereInput!]
  """Logical OR on all given filters."""
  OR: [ProductWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  url: String
  """All values that are not equal to given value."""
  url_not: String
  """All values that are contained in given list."""
  url_in: [String!]
  """All values that are not contained in given list."""
  url_not_in: [String!]
  """All values containing the given string."""
  url_contains: String
  """All values not containing the given string."""
  url_not_contains: String
  """All values starting with the given string."""
  url_starts_with: String
  """All values not starting with the given string."""
  url_not_starts_with: String
  """All values ending with the given string."""
  url_ends_with: String
  """All values not ending with the given string"""
  url_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
}

"""References Product record uniquely"""
input ProductWhereUniqueInput {
  id: ID
}

input PublishLocaleInput {
  """Locales to publish"""
  locale: Locale!
  """Stages to publish selected locales to"""
  stages: [Stage!]!
}

"""Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()"""
type RGBA {
  r: RGBAHue!
  g: RGBAHue!
  b: RGBAHue!
  a: RGBATransparency!
}

scalar RGBAHue

"""Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()"""
input RGBAInput {
  r: RGBAHue!
  g: RGBAHue!
  b: RGBAHue!
  a: RGBATransparency!
}

scalar RGBATransparency

"""Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values"""
type RichText {
  """Returns AST representation"""
  raw: RichTextAST!
  """Returns HTMl representation"""
  html: String!
  """Returns Markdown representation"""
  markdown: String!
  """Returns plain-text contents of RichText"""
  text: String!
}

"""Slate-compatible RichText AST"""
scalar RichTextAST

type RowBlogContent implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowBlogContent!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowBlogContent!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  content: RichText
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowBlogContent versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowBlogContentConnectInput {
  """Document to connect"""
  where: RowBlogContentWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowBlogContentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowBlogContentEdge!]!
  aggregate: Aggregate!
}

input RowBlogContentCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """content input for default locale (en)"""
  content: RichTextAST
  pages: PageCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowBlogContentCreateLocalizationsInput
}

input RowBlogContentCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  content: RichTextAST
}

input RowBlogContentCreateLocalizationInput {
  """Localization input"""
  data: RowBlogContentCreateLocalizationDataInput!
  locale: Locale!
}

input RowBlogContentCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowBlogContentCreateLocalizationInput!]
}

input RowBlogContentCreateManyInlineInput {
  """Create and connect multiple existing RowBlogContent documents"""
  create: [RowBlogContentCreateInput!]
  """Connect multiple existing RowBlogContent documents"""
  connect: [RowBlogContentWhereUniqueInput!]
}

input RowBlogContentCreateOneInlineInput {
  """Create and connect one RowBlogContent document"""
  create: RowBlogContentCreateInput
  """Connect one existing RowBlogContent document"""
  connect: RowBlogContentWhereUniqueInput
}

"""An edge in a connection."""
type RowBlogContentEdge {
  """The item at the end of the edge."""
  node: RowBlogContent!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowBlogContentManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowBlogContentWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowBlogContentWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowBlogContentWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowBlogContentOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowBlogContentUpdateInput {
  identity: String
  """content input for default locale (en)"""
  content: RichTextAST
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowBlogContentUpdateLocalizationsInput
}

input RowBlogContentUpdateLocalizationDataInput {
  content: RichTextAST
}

input RowBlogContentUpdateLocalizationInput {
  data: RowBlogContentUpdateLocalizationDataInput!
  locale: Locale!
}

input RowBlogContentUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowBlogContentCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowBlogContentUpdateLocalizationInput!]
  upsert: [RowBlogContentUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowBlogContentUpdateManyInlineInput {
  """Create and connect multiple RowBlogContent documents"""
  create: [RowBlogContentCreateInput!]
  """Connect multiple existing RowBlogContent documents"""
  connect: [RowBlogContentConnectInput!]
  """Override currently-connected documents with multiple existing RowBlogContent documents"""
  set: [RowBlogContentWhereUniqueInput!]
  """Update multiple RowBlogContent documents"""
  update: [RowBlogContentUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowBlogContent documents"""
  upsert: [RowBlogContentUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowBlogContent documents"""
  disconnect: [RowBlogContentWhereUniqueInput!]
  """Delete multiple RowBlogContent documents"""
  delete: [RowBlogContentWhereUniqueInput!]
}

input RowBlogContentUpdateManyInput {
  """content input for default locale (en)"""
  content: RichTextAST
  """Optional updates to localizations"""
  localizations: RowBlogContentUpdateManyLocalizationsInput
}

input RowBlogContentUpdateManyLocalizationDataInput {
  content: RichTextAST
}

input RowBlogContentUpdateManyLocalizationInput {
  data: RowBlogContentUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowBlogContentUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowBlogContentUpdateManyLocalizationInput!]
}

input RowBlogContentUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowBlogContentWhereInput!
  """Update many input"""
  data: RowBlogContentUpdateManyInput!
}

input RowBlogContentUpdateOneInlineInput {
  """Create and connect one RowBlogContent document"""
  create: RowBlogContentCreateInput
  """Update single RowBlogContent document"""
  update: RowBlogContentUpdateWithNestedWhereUniqueInput
  """Upsert single RowBlogContent document"""
  upsert: RowBlogContentUpsertWithNestedWhereUniqueInput
  """Connect existing RowBlogContent document"""
  connect: RowBlogContentWhereUniqueInput
  """Disconnect currently connected RowBlogContent document"""
  disconnect: Boolean
  """Delete currently connected RowBlogContent document"""
  delete: Boolean
}

input RowBlogContentUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowBlogContentWhereUniqueInput!
  """Document to update"""
  data: RowBlogContentUpdateInput!
}

input RowBlogContentUpsertInput {
  """Create document if it didn't exist"""
  create: RowBlogContentCreateInput!
  """Update document if it exists"""
  update: RowBlogContentUpdateInput!
}

input RowBlogContentUpsertLocalizationInput {
  update: RowBlogContentUpdateLocalizationDataInput!
  create: RowBlogContentCreateLocalizationDataInput!
  locale: Locale!
}

input RowBlogContentUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowBlogContentWhereUniqueInput!
  """Upsert data"""
  data: RowBlogContentUpsertInput!
}

"""Identifies documents"""
input RowBlogContentWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowBlogContentWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowBlogContentWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowBlogContentWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowBlogContent record uniquely"""
input RowBlogContentWhereUniqueInput {
  id: ID
  identity: String
}

type RowButtonLinkList implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowButtonLinkList!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowButtonLinkList!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  links(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `links` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowButtonLinkList versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowButtonLinkListConnectInput {
  """Document to connect"""
  where: RowButtonLinkListWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowButtonLinkListConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowButtonLinkListEdge!]!
  aggregate: Aggregate!
}

input RowButtonLinkListCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  links: PageCreateManyInlineInput
  pages: PageCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowButtonLinkListCreateLocalizationsInput
}

input RowButtonLinkListCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowButtonLinkListCreateLocalizationInput {
  """Localization input"""
  data: RowButtonLinkListCreateLocalizationDataInput!
  locale: Locale!
}

input RowButtonLinkListCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowButtonLinkListCreateLocalizationInput!]
}

input RowButtonLinkListCreateManyInlineInput {
  """Create and connect multiple existing RowButtonLinkList documents"""
  create: [RowButtonLinkListCreateInput!]
  """Connect multiple existing RowButtonLinkList documents"""
  connect: [RowButtonLinkListWhereUniqueInput!]
}

input RowButtonLinkListCreateOneInlineInput {
  """Create and connect one RowButtonLinkList document"""
  create: RowButtonLinkListCreateInput
  """Connect one existing RowButtonLinkList document"""
  connect: RowButtonLinkListWhereUniqueInput
}

"""An edge in a connection."""
type RowButtonLinkListEdge {
  """The item at the end of the edge."""
  node: RowButtonLinkList!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowButtonLinkListManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowButtonLinkListWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowButtonLinkListWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowButtonLinkListWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  links_every: PageWhereInput
  links_some: PageWhereInput
  links_none: PageWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowButtonLinkListOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowButtonLinkListUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  links: PageUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowButtonLinkListUpdateLocalizationsInput
}

input RowButtonLinkListUpdateLocalizationDataInput {
  title: String
}

input RowButtonLinkListUpdateLocalizationInput {
  data: RowButtonLinkListUpdateLocalizationDataInput!
  locale: Locale!
}

input RowButtonLinkListUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowButtonLinkListCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowButtonLinkListUpdateLocalizationInput!]
  upsert: [RowButtonLinkListUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowButtonLinkListUpdateManyInlineInput {
  """Create and connect multiple RowButtonLinkList documents"""
  create: [RowButtonLinkListCreateInput!]
  """Connect multiple existing RowButtonLinkList documents"""
  connect: [RowButtonLinkListConnectInput!]
  """Override currently-connected documents with multiple existing RowButtonLinkList documents"""
  set: [RowButtonLinkListWhereUniqueInput!]
  """Update multiple RowButtonLinkList documents"""
  update: [RowButtonLinkListUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowButtonLinkList documents"""
  upsert: [RowButtonLinkListUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowButtonLinkList documents"""
  disconnect: [RowButtonLinkListWhereUniqueInput!]
  """Delete multiple RowButtonLinkList documents"""
  delete: [RowButtonLinkListWhereUniqueInput!]
}

input RowButtonLinkListUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowButtonLinkListUpdateManyLocalizationsInput
}

input RowButtonLinkListUpdateManyLocalizationDataInput {
  title: String
}

input RowButtonLinkListUpdateManyLocalizationInput {
  data: RowButtonLinkListUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowButtonLinkListUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowButtonLinkListUpdateManyLocalizationInput!]
}

input RowButtonLinkListUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowButtonLinkListWhereInput!
  """Update many input"""
  data: RowButtonLinkListUpdateManyInput!
}

input RowButtonLinkListUpdateOneInlineInput {
  """Create and connect one RowButtonLinkList document"""
  create: RowButtonLinkListCreateInput
  """Update single RowButtonLinkList document"""
  update: RowButtonLinkListUpdateWithNestedWhereUniqueInput
  """Upsert single RowButtonLinkList document"""
  upsert: RowButtonLinkListUpsertWithNestedWhereUniqueInput
  """Connect existing RowButtonLinkList document"""
  connect: RowButtonLinkListWhereUniqueInput
  """Disconnect currently connected RowButtonLinkList document"""
  disconnect: Boolean
  """Delete currently connected RowButtonLinkList document"""
  delete: Boolean
}

input RowButtonLinkListUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowButtonLinkListWhereUniqueInput!
  """Document to update"""
  data: RowButtonLinkListUpdateInput!
}

input RowButtonLinkListUpsertInput {
  """Create document if it didn't exist"""
  create: RowButtonLinkListCreateInput!
  """Update document if it exists"""
  update: RowButtonLinkListUpdateInput!
}

input RowButtonLinkListUpsertLocalizationInput {
  update: RowButtonLinkListUpdateLocalizationDataInput!
  create: RowButtonLinkListCreateLocalizationDataInput!
  locale: Locale!
}

input RowButtonLinkListUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowButtonLinkListWhereUniqueInput!
  """Upsert data"""
  data: RowButtonLinkListUpsertInput!
}

"""Identifies documents"""
input RowButtonLinkListWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowButtonLinkListWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowButtonLinkListWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowButtonLinkListWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  links_every: PageWhereInput
  links_some: PageWhereInput
  links_none: PageWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowButtonLinkList record uniquely"""
input RowButtonLinkListWhereUniqueInput {
  id: ID
  identity: String
}

type RowColumnOne implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowColumnOne!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowColumnOne!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  colOne: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowColumnOne versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowColumnOneConnectInput {
  """Document to connect"""
  where: RowColumnOneWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowColumnOneConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowColumnOneEdge!]!
  aggregate: Aggregate!
}

input RowColumnOneCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """colOne input for default locale (en)"""
  colOne: RichTextAST!
  productpages: ProductCreateManyInlineInput
  pages: PageCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowColumnOneCreateLocalizationsInput
}

input RowColumnOneCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  colOne: RichTextAST!
}

input RowColumnOneCreateLocalizationInput {
  """Localization input"""
  data: RowColumnOneCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnOneCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowColumnOneCreateLocalizationInput!]
}

input RowColumnOneCreateManyInlineInput {
  """Create and connect multiple existing RowColumnOne documents"""
  create: [RowColumnOneCreateInput!]
  """Connect multiple existing RowColumnOne documents"""
  connect: [RowColumnOneWhereUniqueInput!]
}

input RowColumnOneCreateOneInlineInput {
  """Create and connect one RowColumnOne document"""
  create: RowColumnOneCreateInput
  """Connect one existing RowColumnOne document"""
  connect: RowColumnOneWhereUniqueInput
}

"""An edge in a connection."""
type RowColumnOneEdge {
  """The item at the end of the edge."""
  node: RowColumnOne!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowColumnOneManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnOneWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnOneWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnOneWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowColumnOneOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowColumnOneUpdateInput {
  identity: String
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  productpages: ProductUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowColumnOneUpdateLocalizationsInput
}

input RowColumnOneUpdateLocalizationDataInput {
  colOne: RichTextAST
}

input RowColumnOneUpdateLocalizationInput {
  data: RowColumnOneUpdateLocalizationDataInput!
  locale: Locale!
}

input RowColumnOneUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowColumnOneCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowColumnOneUpdateLocalizationInput!]
  upsert: [RowColumnOneUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowColumnOneUpdateManyInlineInput {
  """Create and connect multiple RowColumnOne documents"""
  create: [RowColumnOneCreateInput!]
  """Connect multiple existing RowColumnOne documents"""
  connect: [RowColumnOneConnectInput!]
  """Override currently-connected documents with multiple existing RowColumnOne documents"""
  set: [RowColumnOneWhereUniqueInput!]
  """Update multiple RowColumnOne documents"""
  update: [RowColumnOneUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowColumnOne documents"""
  upsert: [RowColumnOneUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowColumnOne documents"""
  disconnect: [RowColumnOneWhereUniqueInput!]
  """Delete multiple RowColumnOne documents"""
  delete: [RowColumnOneWhereUniqueInput!]
}

input RowColumnOneUpdateManyInput {
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  """Optional updates to localizations"""
  localizations: RowColumnOneUpdateManyLocalizationsInput
}

input RowColumnOneUpdateManyLocalizationDataInput {
  colOne: RichTextAST
}

input RowColumnOneUpdateManyLocalizationInput {
  data: RowColumnOneUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowColumnOneUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowColumnOneUpdateManyLocalizationInput!]
}

input RowColumnOneUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowColumnOneWhereInput!
  """Update many input"""
  data: RowColumnOneUpdateManyInput!
}

input RowColumnOneUpdateOneInlineInput {
  """Create and connect one RowColumnOne document"""
  create: RowColumnOneCreateInput
  """Update single RowColumnOne document"""
  update: RowColumnOneUpdateWithNestedWhereUniqueInput
  """Upsert single RowColumnOne document"""
  upsert: RowColumnOneUpsertWithNestedWhereUniqueInput
  """Connect existing RowColumnOne document"""
  connect: RowColumnOneWhereUniqueInput
  """Disconnect currently connected RowColumnOne document"""
  disconnect: Boolean
  """Delete currently connected RowColumnOne document"""
  delete: Boolean
}

input RowColumnOneUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnOneWhereUniqueInput!
  """Document to update"""
  data: RowColumnOneUpdateInput!
}

input RowColumnOneUpsertInput {
  """Create document if it didn't exist"""
  create: RowColumnOneCreateInput!
  """Update document if it exists"""
  update: RowColumnOneUpdateInput!
}

input RowColumnOneUpsertLocalizationInput {
  update: RowColumnOneUpdateLocalizationDataInput!
  create: RowColumnOneCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnOneUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnOneWhereUniqueInput!
  """Upsert data"""
  data: RowColumnOneUpsertInput!
}

"""Identifies documents"""
input RowColumnOneWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnOneWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnOneWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnOneWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowColumnOne record uniquely"""
input RowColumnOneWhereUniqueInput {
  id: ID
  identity: String
}

type RowColumnThree implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowColumnThree!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowColumnThree!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  colOne: RichText!
  colTwo: RichText!
  colThree: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowColumnThree versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowColumnThreeConnectInput {
  """Document to connect"""
  where: RowColumnThreeWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowColumnThreeConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowColumnThreeEdge!]!
  aggregate: Aggregate!
}

input RowColumnThreeCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """colOne input for default locale (en)"""
  colOne: RichTextAST!
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST!
  """colThree input for default locale (en)"""
  colThree: RichTextAST!
  pages: PageCreateManyInlineInput
  productpages: ProductCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowColumnThreeCreateLocalizationsInput
}

input RowColumnThreeCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  colOne: RichTextAST!
  colTwo: RichTextAST!
  colThree: RichTextAST!
}

input RowColumnThreeCreateLocalizationInput {
  """Localization input"""
  data: RowColumnThreeCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnThreeCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowColumnThreeCreateLocalizationInput!]
}

input RowColumnThreeCreateManyInlineInput {
  """Create and connect multiple existing RowColumnThree documents"""
  create: [RowColumnThreeCreateInput!]
  """Connect multiple existing RowColumnThree documents"""
  connect: [RowColumnThreeWhereUniqueInput!]
}

input RowColumnThreeCreateOneInlineInput {
  """Create and connect one RowColumnThree document"""
  create: RowColumnThreeCreateInput
  """Connect one existing RowColumnThree document"""
  connect: RowColumnThreeWhereUniqueInput
}

"""An edge in a connection."""
type RowColumnThreeEdge {
  """The item at the end of the edge."""
  node: RowColumnThree!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowColumnThreeManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnThreeWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnThreeWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnThreeWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowColumnThreeOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowColumnThreeUpdateInput {
  identity: String
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST
  """colThree input for default locale (en)"""
  colThree: RichTextAST
  pages: PageUpdateManyInlineInput
  productpages: ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowColumnThreeUpdateLocalizationsInput
}

input RowColumnThreeUpdateLocalizationDataInput {
  colOne: RichTextAST
  colTwo: RichTextAST
  colThree: RichTextAST
}

input RowColumnThreeUpdateLocalizationInput {
  data: RowColumnThreeUpdateLocalizationDataInput!
  locale: Locale!
}

input RowColumnThreeUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowColumnThreeCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowColumnThreeUpdateLocalizationInput!]
  upsert: [RowColumnThreeUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowColumnThreeUpdateManyInlineInput {
  """Create and connect multiple RowColumnThree documents"""
  create: [RowColumnThreeCreateInput!]
  """Connect multiple existing RowColumnThree documents"""
  connect: [RowColumnThreeConnectInput!]
  """Override currently-connected documents with multiple existing RowColumnThree documents"""
  set: [RowColumnThreeWhereUniqueInput!]
  """Update multiple RowColumnThree documents"""
  update: [RowColumnThreeUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowColumnThree documents"""
  upsert: [RowColumnThreeUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowColumnThree documents"""
  disconnect: [RowColumnThreeWhereUniqueInput!]
  """Delete multiple RowColumnThree documents"""
  delete: [RowColumnThreeWhereUniqueInput!]
}

input RowColumnThreeUpdateManyInput {
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST
  """colThree input for default locale (en)"""
  colThree: RichTextAST
  """Optional updates to localizations"""
  localizations: RowColumnThreeUpdateManyLocalizationsInput
}

input RowColumnThreeUpdateManyLocalizationDataInput {
  colOne: RichTextAST
  colTwo: RichTextAST
  colThree: RichTextAST
}

input RowColumnThreeUpdateManyLocalizationInput {
  data: RowColumnThreeUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowColumnThreeUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowColumnThreeUpdateManyLocalizationInput!]
}

input RowColumnThreeUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowColumnThreeWhereInput!
  """Update many input"""
  data: RowColumnThreeUpdateManyInput!
}

input RowColumnThreeUpdateOneInlineInput {
  """Create and connect one RowColumnThree document"""
  create: RowColumnThreeCreateInput
  """Update single RowColumnThree document"""
  update: RowColumnThreeUpdateWithNestedWhereUniqueInput
  """Upsert single RowColumnThree document"""
  upsert: RowColumnThreeUpsertWithNestedWhereUniqueInput
  """Connect existing RowColumnThree document"""
  connect: RowColumnThreeWhereUniqueInput
  """Disconnect currently connected RowColumnThree document"""
  disconnect: Boolean
  """Delete currently connected RowColumnThree document"""
  delete: Boolean
}

input RowColumnThreeUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnThreeWhereUniqueInput!
  """Document to update"""
  data: RowColumnThreeUpdateInput!
}

input RowColumnThreeUpsertInput {
  """Create document if it didn't exist"""
  create: RowColumnThreeCreateInput!
  """Update document if it exists"""
  update: RowColumnThreeUpdateInput!
}

input RowColumnThreeUpsertLocalizationInput {
  update: RowColumnThreeUpdateLocalizationDataInput!
  create: RowColumnThreeCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnThreeUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnThreeWhereUniqueInput!
  """Upsert data"""
  data: RowColumnThreeUpsertInput!
}

"""Identifies documents"""
input RowColumnThreeWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnThreeWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnThreeWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnThreeWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowColumnThree record uniquely"""
input RowColumnThreeWhereUniqueInput {
  id: ID
  identity: String
}

type RowColumnTwo implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowColumnTwo!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowColumnTwo!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  colOne: RichText!
  colTwo: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowColumnTwo versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowColumnTwoConnectInput {
  """Document to connect"""
  where: RowColumnTwoWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowColumnTwoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowColumnTwoEdge!]!
  aggregate: Aggregate!
}

input RowColumnTwoCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """colOne input for default locale (en)"""
  colOne: RichTextAST!
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST!
  pages: PageCreateManyInlineInput
  productpages: ProductCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowColumnTwoCreateLocalizationsInput
}

input RowColumnTwoCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  colOne: RichTextAST!
  colTwo: RichTextAST!
}

input RowColumnTwoCreateLocalizationInput {
  """Localization input"""
  data: RowColumnTwoCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnTwoCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowColumnTwoCreateLocalizationInput!]
}

input RowColumnTwoCreateManyInlineInput {
  """Create and connect multiple existing RowColumnTwo documents"""
  create: [RowColumnTwoCreateInput!]
  """Connect multiple existing RowColumnTwo documents"""
  connect: [RowColumnTwoWhereUniqueInput!]
}

input RowColumnTwoCreateOneInlineInput {
  """Create and connect one RowColumnTwo document"""
  create: RowColumnTwoCreateInput
  """Connect one existing RowColumnTwo document"""
  connect: RowColumnTwoWhereUniqueInput
}

"""An edge in a connection."""
type RowColumnTwoEdge {
  """The item at the end of the edge."""
  node: RowColumnTwo!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowColumnTwoManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnTwoWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnTwoWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnTwoWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowColumnTwoOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowColumnTwoUpdateInput {
  identity: String
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST
  pages: PageUpdateManyInlineInput
  productpages: ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowColumnTwoUpdateLocalizationsInput
}

input RowColumnTwoUpdateLocalizationDataInput {
  colOne: RichTextAST
  colTwo: RichTextAST
}

input RowColumnTwoUpdateLocalizationInput {
  data: RowColumnTwoUpdateLocalizationDataInput!
  locale: Locale!
}

input RowColumnTwoUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowColumnTwoCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowColumnTwoUpdateLocalizationInput!]
  upsert: [RowColumnTwoUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowColumnTwoUpdateManyInlineInput {
  """Create and connect multiple RowColumnTwo documents"""
  create: [RowColumnTwoCreateInput!]
  """Connect multiple existing RowColumnTwo documents"""
  connect: [RowColumnTwoConnectInput!]
  """Override currently-connected documents with multiple existing RowColumnTwo documents"""
  set: [RowColumnTwoWhereUniqueInput!]
  """Update multiple RowColumnTwo documents"""
  update: [RowColumnTwoUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowColumnTwo documents"""
  upsert: [RowColumnTwoUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowColumnTwo documents"""
  disconnect: [RowColumnTwoWhereUniqueInput!]
  """Delete multiple RowColumnTwo documents"""
  delete: [RowColumnTwoWhereUniqueInput!]
}

input RowColumnTwoUpdateManyInput {
  """colOne input for default locale (en)"""
  colOne: RichTextAST
  """colTwo input for default locale (en)"""
  colTwo: RichTextAST
  """Optional updates to localizations"""
  localizations: RowColumnTwoUpdateManyLocalizationsInput
}

input RowColumnTwoUpdateManyLocalizationDataInput {
  colOne: RichTextAST
  colTwo: RichTextAST
}

input RowColumnTwoUpdateManyLocalizationInput {
  data: RowColumnTwoUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowColumnTwoUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowColumnTwoUpdateManyLocalizationInput!]
}

input RowColumnTwoUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowColumnTwoWhereInput!
  """Update many input"""
  data: RowColumnTwoUpdateManyInput!
}

input RowColumnTwoUpdateOneInlineInput {
  """Create and connect one RowColumnTwo document"""
  create: RowColumnTwoCreateInput
  """Update single RowColumnTwo document"""
  update: RowColumnTwoUpdateWithNestedWhereUniqueInput
  """Upsert single RowColumnTwo document"""
  upsert: RowColumnTwoUpsertWithNestedWhereUniqueInput
  """Connect existing RowColumnTwo document"""
  connect: RowColumnTwoWhereUniqueInput
  """Disconnect currently connected RowColumnTwo document"""
  disconnect: Boolean
  """Delete currently connected RowColumnTwo document"""
  delete: Boolean
}

input RowColumnTwoUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnTwoWhereUniqueInput!
  """Document to update"""
  data: RowColumnTwoUpdateInput!
}

input RowColumnTwoUpsertInput {
  """Create document if it didn't exist"""
  create: RowColumnTwoCreateInput!
  """Update document if it exists"""
  update: RowColumnTwoUpdateInput!
}

input RowColumnTwoUpsertLocalizationInput {
  update: RowColumnTwoUpdateLocalizationDataInput!
  create: RowColumnTwoCreateLocalizationDataInput!
  locale: Locale!
}

input RowColumnTwoUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowColumnTwoWhereUniqueInput!
  """Upsert data"""
  data: RowColumnTwoUpsertInput!
}

"""Identifies documents"""
input RowColumnTwoWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowColumnTwoWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowColumnTwoWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowColumnTwoWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowColumnTwo record uniquely"""
input RowColumnTwoWhereUniqueInput {
  id: ID
  identity: String
}

type RowContentLinks implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowContentLinks!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowContentLinks!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  contentLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `contentLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowContentLinks versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowContentLinksConnectInput {
  """Document to connect"""
  where: RowContentLinksWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowContentLinksConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowContentLinksEdge!]!
  aggregate: Aggregate!
}

input RowContentLinksCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  contentLinks: PageLinkCreateManyInlineInput
  pages: PageCreateManyInlineInput
  productpages: ProductCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowContentLinksCreateLocalizationsInput
}

input RowContentLinksCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowContentLinksCreateLocalizationInput {
  """Localization input"""
  data: RowContentLinksCreateLocalizationDataInput!
  locale: Locale!
}

input RowContentLinksCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowContentLinksCreateLocalizationInput!]
}

input RowContentLinksCreateManyInlineInput {
  """Create and connect multiple existing RowContentLinks documents"""
  create: [RowContentLinksCreateInput!]
  """Connect multiple existing RowContentLinks documents"""
  connect: [RowContentLinksWhereUniqueInput!]
}

input RowContentLinksCreateOneInlineInput {
  """Create and connect one RowContentLinks document"""
  create: RowContentLinksCreateInput
  """Connect one existing RowContentLinks document"""
  connect: RowContentLinksWhereUniqueInput
}

"""An edge in a connection."""
type RowContentLinksEdge {
  """The item at the end of the edge."""
  node: RowContentLinks!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowContentLinksManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowContentLinksWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowContentLinksWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowContentLinksWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  contentLinks_every: PageLinkWhereInput
  contentLinks_some: PageLinkWhereInput
  contentLinks_none: PageLinkWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowContentLinksOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowContentLinksUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  contentLinks: PageLinkUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  productpages: ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowContentLinksUpdateLocalizationsInput
}

input RowContentLinksUpdateLocalizationDataInput {
  title: String
}

input RowContentLinksUpdateLocalizationInput {
  data: RowContentLinksUpdateLocalizationDataInput!
  locale: Locale!
}

input RowContentLinksUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowContentLinksCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowContentLinksUpdateLocalizationInput!]
  upsert: [RowContentLinksUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowContentLinksUpdateManyInlineInput {
  """Create and connect multiple RowContentLinks documents"""
  create: [RowContentLinksCreateInput!]
  """Connect multiple existing RowContentLinks documents"""
  connect: [RowContentLinksConnectInput!]
  """Override currently-connected documents with multiple existing RowContentLinks documents"""
  set: [RowContentLinksWhereUniqueInput!]
  """Update multiple RowContentLinks documents"""
  update: [RowContentLinksUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowContentLinks documents"""
  upsert: [RowContentLinksUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowContentLinks documents"""
  disconnect: [RowContentLinksWhereUniqueInput!]
  """Delete multiple RowContentLinks documents"""
  delete: [RowContentLinksWhereUniqueInput!]
}

input RowContentLinksUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowContentLinksUpdateManyLocalizationsInput
}

input RowContentLinksUpdateManyLocalizationDataInput {
  title: String
}

input RowContentLinksUpdateManyLocalizationInput {
  data: RowContentLinksUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowContentLinksUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowContentLinksUpdateManyLocalizationInput!]
}

input RowContentLinksUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowContentLinksWhereInput!
  """Update many input"""
  data: RowContentLinksUpdateManyInput!
}

input RowContentLinksUpdateOneInlineInput {
  """Create and connect one RowContentLinks document"""
  create: RowContentLinksCreateInput
  """Update single RowContentLinks document"""
  update: RowContentLinksUpdateWithNestedWhereUniqueInput
  """Upsert single RowContentLinks document"""
  upsert: RowContentLinksUpsertWithNestedWhereUniqueInput
  """Connect existing RowContentLinks document"""
  connect: RowContentLinksWhereUniqueInput
  """Disconnect currently connected RowContentLinks document"""
  disconnect: Boolean
  """Delete currently connected RowContentLinks document"""
  delete: Boolean
}

input RowContentLinksUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowContentLinksWhereUniqueInput!
  """Document to update"""
  data: RowContentLinksUpdateInput!
}

input RowContentLinksUpsertInput {
  """Create document if it didn't exist"""
  create: RowContentLinksCreateInput!
  """Update document if it exists"""
  update: RowContentLinksUpdateInput!
}

input RowContentLinksUpsertLocalizationInput {
  update: RowContentLinksUpdateLocalizationDataInput!
  create: RowContentLinksCreateLocalizationDataInput!
  locale: Locale!
}

input RowContentLinksUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowContentLinksWhereUniqueInput!
  """Upsert data"""
  data: RowContentLinksUpsertInput!
}

"""Identifies documents"""
input RowContentLinksWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowContentLinksWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowContentLinksWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowContentLinksWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  contentLinks_every: PageLinkWhereInput
  contentLinks_some: PageLinkWhereInput
  contentLinks_none: PageLinkWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowContentLinks record uniquely"""
input RowContentLinksWhereUniqueInput {
  id: ID
  identity: String
}

type RowHeroBanner implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowHeroBanner!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowHeroBanner!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  copy: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Video, landscape"""
  asset(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `asset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset!
  pageLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pageLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowHeroBanner versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowHeroBannerConnectInput {
  """Document to connect"""
  where: RowHeroBannerWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowHeroBannerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowHeroBannerEdge!]!
  aggregate: Aggregate!
}

input RowHeroBannerCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """copy input for default locale (en)"""
  copy: RichTextAST!
  asset: AssetCreateOneInlineInput!
  pageLinks: PageLinkCreateManyInlineInput
  pages: PageCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowHeroBannerCreateLocalizationsInput
}

input RowHeroBannerCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  copy: RichTextAST!
}

input RowHeroBannerCreateLocalizationInput {
  """Localization input"""
  data: RowHeroBannerCreateLocalizationDataInput!
  locale: Locale!
}

input RowHeroBannerCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowHeroBannerCreateLocalizationInput!]
}

input RowHeroBannerCreateManyInlineInput {
  """Create and connect multiple existing RowHeroBanner documents"""
  create: [RowHeroBannerCreateInput!]
  """Connect multiple existing RowHeroBanner documents"""
  connect: [RowHeroBannerWhereUniqueInput!]
}

input RowHeroBannerCreateOneInlineInput {
  """Create and connect one RowHeroBanner document"""
  create: RowHeroBannerCreateInput
  """Connect one existing RowHeroBanner document"""
  connect: RowHeroBannerWhereUniqueInput
}

"""An edge in a connection."""
type RowHeroBannerEdge {
  """The item at the end of the edge."""
  node: RowHeroBanner!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowHeroBannerManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowHeroBannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowHeroBannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowHeroBannerWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowHeroBannerOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowHeroBannerUpdateInput {
  identity: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  asset: AssetUpdateOneInlineInput
  pageLinks: PageLinkUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowHeroBannerUpdateLocalizationsInput
}

input RowHeroBannerUpdateLocalizationDataInput {
  copy: RichTextAST
}

input RowHeroBannerUpdateLocalizationInput {
  data: RowHeroBannerUpdateLocalizationDataInput!
  locale: Locale!
}

input RowHeroBannerUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowHeroBannerCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowHeroBannerUpdateLocalizationInput!]
  upsert: [RowHeroBannerUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowHeroBannerUpdateManyInlineInput {
  """Create and connect multiple RowHeroBanner documents"""
  create: [RowHeroBannerCreateInput!]
  """Connect multiple existing RowHeroBanner documents"""
  connect: [RowHeroBannerConnectInput!]
  """Override currently-connected documents with multiple existing RowHeroBanner documents"""
  set: [RowHeroBannerWhereUniqueInput!]
  """Update multiple RowHeroBanner documents"""
  update: [RowHeroBannerUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowHeroBanner documents"""
  upsert: [RowHeroBannerUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowHeroBanner documents"""
  disconnect: [RowHeroBannerWhereUniqueInput!]
  """Delete multiple RowHeroBanner documents"""
  delete: [RowHeroBannerWhereUniqueInput!]
}

input RowHeroBannerUpdateManyInput {
  """copy input for default locale (en)"""
  copy: RichTextAST
  """Optional updates to localizations"""
  localizations: RowHeroBannerUpdateManyLocalizationsInput
}

input RowHeroBannerUpdateManyLocalizationDataInput {
  copy: RichTextAST
}

input RowHeroBannerUpdateManyLocalizationInput {
  data: RowHeroBannerUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowHeroBannerUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowHeroBannerUpdateManyLocalizationInput!]
}

input RowHeroBannerUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowHeroBannerWhereInput!
  """Update many input"""
  data: RowHeroBannerUpdateManyInput!
}

input RowHeroBannerUpdateOneInlineInput {
  """Create and connect one RowHeroBanner document"""
  create: RowHeroBannerCreateInput
  """Update single RowHeroBanner document"""
  update: RowHeroBannerUpdateWithNestedWhereUniqueInput
  """Upsert single RowHeroBanner document"""
  upsert: RowHeroBannerUpsertWithNestedWhereUniqueInput
  """Connect existing RowHeroBanner document"""
  connect: RowHeroBannerWhereUniqueInput
  """Disconnect currently connected RowHeroBanner document"""
  disconnect: Boolean
  """Delete currently connected RowHeroBanner document"""
  delete: Boolean
}

input RowHeroBannerUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowHeroBannerWhereUniqueInput!
  """Document to update"""
  data: RowHeroBannerUpdateInput!
}

input RowHeroBannerUpsertInput {
  """Create document if it didn't exist"""
  create: RowHeroBannerCreateInput!
  """Update document if it exists"""
  update: RowHeroBannerUpdateInput!
}

input RowHeroBannerUpsertLocalizationInput {
  update: RowHeroBannerUpdateLocalizationDataInput!
  create: RowHeroBannerCreateLocalizationDataInput!
  locale: Locale!
}

input RowHeroBannerUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowHeroBannerWhereUniqueInput!
  """Upsert data"""
  data: RowHeroBannerUpsertInput!
}

"""Identifies documents"""
input RowHeroBannerWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowHeroBannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowHeroBannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowHeroBannerWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowHeroBanner record uniquely"""
input RowHeroBannerWhereUniqueInput {
  id: ID
  identity: String
}

type RowProductBackstory implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowProductBackstory!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowProductBackstory!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  copy: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """Image, portrait (8:6)"""
  asset(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `asset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset!
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowProductBackstory versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowProductBackstoryConnectInput {
  """Document to connect"""
  where: RowProductBackstoryWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowProductBackstoryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowProductBackstoryEdge!]!
  aggregate: Aggregate!
}

input RowProductBackstoryCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """copy input for default locale (en)"""
  copy: RichTextAST!
  asset: AssetCreateOneInlineInput!
  pages: PageCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowProductBackstoryCreateLocalizationsInput
}

input RowProductBackstoryCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  copy: RichTextAST!
}

input RowProductBackstoryCreateLocalizationInput {
  """Localization input"""
  data: RowProductBackstoryCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductBackstoryCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowProductBackstoryCreateLocalizationInput!]
}

input RowProductBackstoryCreateManyInlineInput {
  """Create and connect multiple existing RowProductBackstory documents"""
  create: [RowProductBackstoryCreateInput!]
  """Connect multiple existing RowProductBackstory documents"""
  connect: [RowProductBackstoryWhereUniqueInput!]
}

input RowProductBackstoryCreateOneInlineInput {
  """Create and connect one RowProductBackstory document"""
  create: RowProductBackstoryCreateInput
  """Connect one existing RowProductBackstory document"""
  connect: RowProductBackstoryWhereUniqueInput
}

"""An edge in a connection."""
type RowProductBackstoryEdge {
  """The item at the end of the edge."""
  node: RowProductBackstory!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowProductBackstoryManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductBackstoryWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductBackstoryWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductBackstoryWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowProductBackstoryOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowProductBackstoryUpdateInput {
  identity: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  asset: AssetUpdateOneInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowProductBackstoryUpdateLocalizationsInput
}

input RowProductBackstoryUpdateLocalizationDataInput {
  copy: RichTextAST
}

input RowProductBackstoryUpdateLocalizationInput {
  data: RowProductBackstoryUpdateLocalizationDataInput!
  locale: Locale!
}

input RowProductBackstoryUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowProductBackstoryCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowProductBackstoryUpdateLocalizationInput!]
  upsert: [RowProductBackstoryUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowProductBackstoryUpdateManyInlineInput {
  """Create and connect multiple RowProductBackstory documents"""
  create: [RowProductBackstoryCreateInput!]
  """Connect multiple existing RowProductBackstory documents"""
  connect: [RowProductBackstoryConnectInput!]
  """Override currently-connected documents with multiple existing RowProductBackstory documents"""
  set: [RowProductBackstoryWhereUniqueInput!]
  """Update multiple RowProductBackstory documents"""
  update: [RowProductBackstoryUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowProductBackstory documents"""
  upsert: [RowProductBackstoryUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowProductBackstory documents"""
  disconnect: [RowProductBackstoryWhereUniqueInput!]
  """Delete multiple RowProductBackstory documents"""
  delete: [RowProductBackstoryWhereUniqueInput!]
}

input RowProductBackstoryUpdateManyInput {
  """copy input for default locale (en)"""
  copy: RichTextAST
  """Optional updates to localizations"""
  localizations: RowProductBackstoryUpdateManyLocalizationsInput
}

input RowProductBackstoryUpdateManyLocalizationDataInput {
  copy: RichTextAST
}

input RowProductBackstoryUpdateManyLocalizationInput {
  data: RowProductBackstoryUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowProductBackstoryUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowProductBackstoryUpdateManyLocalizationInput!]
}

input RowProductBackstoryUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowProductBackstoryWhereInput!
  """Update many input"""
  data: RowProductBackstoryUpdateManyInput!
}

input RowProductBackstoryUpdateOneInlineInput {
  """Create and connect one RowProductBackstory document"""
  create: RowProductBackstoryCreateInput
  """Update single RowProductBackstory document"""
  update: RowProductBackstoryUpdateWithNestedWhereUniqueInput
  """Upsert single RowProductBackstory document"""
  upsert: RowProductBackstoryUpsertWithNestedWhereUniqueInput
  """Connect existing RowProductBackstory document"""
  connect: RowProductBackstoryWhereUniqueInput
  """Disconnect currently connected RowProductBackstory document"""
  disconnect: Boolean
  """Delete currently connected RowProductBackstory document"""
  delete: Boolean
}

input RowProductBackstoryUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductBackstoryWhereUniqueInput!
  """Document to update"""
  data: RowProductBackstoryUpdateInput!
}

input RowProductBackstoryUpsertInput {
  """Create document if it didn't exist"""
  create: RowProductBackstoryCreateInput!
  """Update document if it exists"""
  update: RowProductBackstoryUpdateInput!
}

input RowProductBackstoryUpsertLocalizationInput {
  update: RowProductBackstoryUpdateLocalizationDataInput!
  create: RowProductBackstoryCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductBackstoryUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductBackstoryWhereUniqueInput!
  """Upsert data"""
  data: RowProductBackstoryUpsertInput!
}

"""Identifies documents"""
input RowProductBackstoryWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductBackstoryWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductBackstoryWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductBackstoryWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowProductBackstory record uniquely"""
input RowProductBackstoryWhereUniqueInput {
  id: ID
  identity: String
}

type RowProductFeature implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowProductFeature!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowProductFeature!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  topic: String
  copy: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowProductFeature versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

type RowProductFeatureBoxed implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowProductFeatureBoxed!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowProductFeatureBoxed!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  topic: String
  copy: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowProductFeatureBoxed versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowProductFeatureBoxedConnectInput {
  """Document to connect"""
  where: RowProductFeatureBoxedWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowProductFeatureBoxedConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowProductFeatureBoxedEdge!]!
  aggregate: Aggregate!
}

input RowProductFeatureBoxedCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST!
  productpages: ProductCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowProductFeatureBoxedCreateLocalizationsInput
}

input RowProductFeatureBoxedCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  topic: String
  copy: RichTextAST!
}

input RowProductFeatureBoxedCreateLocalizationInput {
  """Localization input"""
  data: RowProductFeatureBoxedCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductFeatureBoxedCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowProductFeatureBoxedCreateLocalizationInput!]
}

input RowProductFeatureBoxedCreateManyInlineInput {
  """Create and connect multiple existing RowProductFeatureBoxed documents"""
  create: [RowProductFeatureBoxedCreateInput!]
  """Connect multiple existing RowProductFeatureBoxed documents"""
  connect: [RowProductFeatureBoxedWhereUniqueInput!]
}

input RowProductFeatureBoxedCreateOneInlineInput {
  """Create and connect one RowProductFeatureBoxed document"""
  create: RowProductFeatureBoxedCreateInput
  """Connect one existing RowProductFeatureBoxed document"""
  connect: RowProductFeatureBoxedWhereUniqueInput
}

"""An edge in a connection."""
type RowProductFeatureBoxedEdge {
  """The item at the end of the edge."""
  node: RowProductFeatureBoxed!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowProductFeatureBoxedManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductFeatureBoxedWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductFeatureBoxedWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductFeatureBoxedWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowProductFeatureBoxedOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  topic_ASC
  topic_DESC
}

input RowProductFeatureBoxedUpdateInput {
  identity: String
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  productpages: ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowProductFeatureBoxedUpdateLocalizationsInput
}

input RowProductFeatureBoxedUpdateLocalizationDataInput {
  topic: String
  copy: RichTextAST
}

input RowProductFeatureBoxedUpdateLocalizationInput {
  data: RowProductFeatureBoxedUpdateLocalizationDataInput!
  locale: Locale!
}

input RowProductFeatureBoxedUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowProductFeatureBoxedCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowProductFeatureBoxedUpdateLocalizationInput!]
  upsert: [RowProductFeatureBoxedUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowProductFeatureBoxedUpdateManyInlineInput {
  """Create and connect multiple RowProductFeatureBoxed documents"""
  create: [RowProductFeatureBoxedCreateInput!]
  """Connect multiple existing RowProductFeatureBoxed documents"""
  connect: [RowProductFeatureBoxedConnectInput!]
  """Override currently-connected documents with multiple existing RowProductFeatureBoxed documents"""
  set: [RowProductFeatureBoxedWhereUniqueInput!]
  """Update multiple RowProductFeatureBoxed documents"""
  update: [RowProductFeatureBoxedUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowProductFeatureBoxed documents"""
  upsert: [RowProductFeatureBoxedUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowProductFeatureBoxed documents"""
  disconnect: [RowProductFeatureBoxedWhereUniqueInput!]
  """Delete multiple RowProductFeatureBoxed documents"""
  delete: [RowProductFeatureBoxedWhereUniqueInput!]
}

input RowProductFeatureBoxedUpdateManyInput {
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  """Optional updates to localizations"""
  localizations: RowProductFeatureBoxedUpdateManyLocalizationsInput
}

input RowProductFeatureBoxedUpdateManyLocalizationDataInput {
  topic: String
  copy: RichTextAST
}

input RowProductFeatureBoxedUpdateManyLocalizationInput {
  data: RowProductFeatureBoxedUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowProductFeatureBoxedUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowProductFeatureBoxedUpdateManyLocalizationInput!]
}

input RowProductFeatureBoxedUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowProductFeatureBoxedWhereInput!
  """Update many input"""
  data: RowProductFeatureBoxedUpdateManyInput!
}

input RowProductFeatureBoxedUpdateOneInlineInput {
  """Create and connect one RowProductFeatureBoxed document"""
  create: RowProductFeatureBoxedCreateInput
  """Update single RowProductFeatureBoxed document"""
  update: RowProductFeatureBoxedUpdateWithNestedWhereUniqueInput
  """Upsert single RowProductFeatureBoxed document"""
  upsert: RowProductFeatureBoxedUpsertWithNestedWhereUniqueInput
  """Connect existing RowProductFeatureBoxed document"""
  connect: RowProductFeatureBoxedWhereUniqueInput
  """Disconnect currently connected RowProductFeatureBoxed document"""
  disconnect: Boolean
  """Delete currently connected RowProductFeatureBoxed document"""
  delete: Boolean
}

input RowProductFeatureBoxedUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductFeatureBoxedWhereUniqueInput!
  """Document to update"""
  data: RowProductFeatureBoxedUpdateInput!
}

input RowProductFeatureBoxedUpsertInput {
  """Create document if it didn't exist"""
  create: RowProductFeatureBoxedCreateInput!
  """Update document if it exists"""
  update: RowProductFeatureBoxedUpdateInput!
}

input RowProductFeatureBoxedUpsertLocalizationInput {
  update: RowProductFeatureBoxedUpdateLocalizationDataInput!
  create: RowProductFeatureBoxedCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductFeatureBoxedUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductFeatureBoxedWhereUniqueInput!
  """Upsert data"""
  data: RowProductFeatureBoxedUpsertInput!
}

"""Identifies documents"""
input RowProductFeatureBoxedWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductFeatureBoxedWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductFeatureBoxedWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductFeatureBoxedWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  topic: String
  """All values that are not equal to given value."""
  topic_not: String
  """All values that are contained in given list."""
  topic_in: [String!]
  """All values that are not contained in given list."""
  topic_not_in: [String!]
  """All values containing the given string."""
  topic_contains: String
  """All values not containing the given string."""
  topic_not_contains: String
  """All values starting with the given string."""
  topic_starts_with: String
  """All values not starting with the given string."""
  topic_not_starts_with: String
  """All values ending with the given string."""
  topic_ends_with: String
  """All values not ending with the given string"""
  topic_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowProductFeatureBoxed record uniquely"""
input RowProductFeatureBoxedWhereUniqueInput {
  id: ID
  identity: String
}

input RowProductFeatureConnectInput {
  """Document to connect"""
  where: RowProductFeatureWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowProductFeatureConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowProductFeatureEdge!]!
  aggregate: Aggregate!
}

input RowProductFeatureCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST!
  productpages: ProductCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowProductFeatureCreateLocalizationsInput
}

input RowProductFeatureCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  topic: String
  copy: RichTextAST!
}

input RowProductFeatureCreateLocalizationInput {
  """Localization input"""
  data: RowProductFeatureCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductFeatureCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowProductFeatureCreateLocalizationInput!]
}

input RowProductFeatureCreateManyInlineInput {
  """Create and connect multiple existing RowProductFeature documents"""
  create: [RowProductFeatureCreateInput!]
  """Connect multiple existing RowProductFeature documents"""
  connect: [RowProductFeatureWhereUniqueInput!]
}

input RowProductFeatureCreateOneInlineInput {
  """Create and connect one RowProductFeature document"""
  create: RowProductFeatureCreateInput
  """Connect one existing RowProductFeature document"""
  connect: RowProductFeatureWhereUniqueInput
}

"""An edge in a connection."""
type RowProductFeatureEdge {
  """The item at the end of the edge."""
  node: RowProductFeature!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowProductFeatureManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductFeatureWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductFeatureWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductFeatureWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowProductFeatureOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  topic_ASC
  topic_DESC
}

input RowProductFeatureUpdateInput {
  identity: String
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  productpages: ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowProductFeatureUpdateLocalizationsInput
}

input RowProductFeatureUpdateLocalizationDataInput {
  topic: String
  copy: RichTextAST
}

input RowProductFeatureUpdateLocalizationInput {
  data: RowProductFeatureUpdateLocalizationDataInput!
  locale: Locale!
}

input RowProductFeatureUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowProductFeatureCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowProductFeatureUpdateLocalizationInput!]
  upsert: [RowProductFeatureUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowProductFeatureUpdateManyInlineInput {
  """Create and connect multiple RowProductFeature documents"""
  create: [RowProductFeatureCreateInput!]
  """Connect multiple existing RowProductFeature documents"""
  connect: [RowProductFeatureConnectInput!]
  """Override currently-connected documents with multiple existing RowProductFeature documents"""
  set: [RowProductFeatureWhereUniqueInput!]
  """Update multiple RowProductFeature documents"""
  update: [RowProductFeatureUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowProductFeature documents"""
  upsert: [RowProductFeatureUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowProductFeature documents"""
  disconnect: [RowProductFeatureWhereUniqueInput!]
  """Delete multiple RowProductFeature documents"""
  delete: [RowProductFeatureWhereUniqueInput!]
}

input RowProductFeatureUpdateManyInput {
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  """Optional updates to localizations"""
  localizations: RowProductFeatureUpdateManyLocalizationsInput
}

input RowProductFeatureUpdateManyLocalizationDataInput {
  topic: String
  copy: RichTextAST
}

input RowProductFeatureUpdateManyLocalizationInput {
  data: RowProductFeatureUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowProductFeatureUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowProductFeatureUpdateManyLocalizationInput!]
}

input RowProductFeatureUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowProductFeatureWhereInput!
  """Update many input"""
  data: RowProductFeatureUpdateManyInput!
}

input RowProductFeatureUpdateOneInlineInput {
  """Create and connect one RowProductFeature document"""
  create: RowProductFeatureCreateInput
  """Update single RowProductFeature document"""
  update: RowProductFeatureUpdateWithNestedWhereUniqueInput
  """Upsert single RowProductFeature document"""
  upsert: RowProductFeatureUpsertWithNestedWhereUniqueInput
  """Connect existing RowProductFeature document"""
  connect: RowProductFeatureWhereUniqueInput
  """Disconnect currently connected RowProductFeature document"""
  disconnect: Boolean
  """Delete currently connected RowProductFeature document"""
  delete: Boolean
}

input RowProductFeatureUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductFeatureWhereUniqueInput!
  """Document to update"""
  data: RowProductFeatureUpdateInput!
}

input RowProductFeatureUpsertInput {
  """Create document if it didn't exist"""
  create: RowProductFeatureCreateInput!
  """Update document if it exists"""
  update: RowProductFeatureUpdateInput!
}

input RowProductFeatureUpsertLocalizationInput {
  update: RowProductFeatureUpdateLocalizationDataInput!
  create: RowProductFeatureCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductFeatureUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductFeatureWhereUniqueInput!
  """Upsert data"""
  data: RowProductFeatureUpsertInput!
}

"""Identifies documents"""
input RowProductFeatureWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductFeatureWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductFeatureWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductFeatureWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  topic: String
  """All values that are not equal to given value."""
  topic_not: String
  """All values that are contained in given list."""
  topic_in: [String!]
  """All values that are not contained in given list."""
  topic_not_in: [String!]
  """All values containing the given string."""
  topic_contains: String
  """All values not containing the given string."""
  topic_not_contains: String
  """All values starting with the given string."""
  topic_starts_with: String
  """All values not starting with the given string."""
  topic_not_starts_with: String
  """All values ending with the given string."""
  topic_ends_with: String
  """All values not ending with the given string"""
  topic_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowProductFeature record uniquely"""
input RowProductFeatureWhereUniqueInput {
  id: ID
  identity: String
}

type RowProductGrid implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowProductGrid!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowProductGrid!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  pageLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pageLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  magentoCategory(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `magentoCategory` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): MagentoCategory
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowProductGrid versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowProductGridConnectInput {
  """Document to connect"""
  where: RowProductGridWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowProductGridConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowProductGridEdge!]!
  aggregate: Aggregate!
}

input RowProductGridCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  pageLinks: PageLinkCreateManyInlineInput
  magentoCategory: MagentoCategoryCreateOneInlineInput
  pages: PageCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowProductGridCreateLocalizationsInput
}

input RowProductGridCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowProductGridCreateLocalizationInput {
  """Localization input"""
  data: RowProductGridCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductGridCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowProductGridCreateLocalizationInput!]
}

input RowProductGridCreateManyInlineInput {
  """Create and connect multiple existing RowProductGrid documents"""
  create: [RowProductGridCreateInput!]
  """Connect multiple existing RowProductGrid documents"""
  connect: [RowProductGridWhereUniqueInput!]
}

input RowProductGridCreateOneInlineInput {
  """Create and connect one RowProductGrid document"""
  create: RowProductGridCreateInput
  """Connect one existing RowProductGrid document"""
  connect: RowProductGridWhereUniqueInput
}

"""An edge in a connection."""
type RowProductGridEdge {
  """The item at the end of the edge."""
  node: RowProductGrid!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowProductGridManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductGridWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductGridWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductGridWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  magentoCategory: MagentoCategoryWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowProductGridOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowProductGridUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  pageLinks: PageLinkUpdateManyInlineInput
  magentoCategory: MagentoCategoryUpdateOneInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowProductGridUpdateLocalizationsInput
}

input RowProductGridUpdateLocalizationDataInput {
  title: String
}

input RowProductGridUpdateLocalizationInput {
  data: RowProductGridUpdateLocalizationDataInput!
  locale: Locale!
}

input RowProductGridUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowProductGridCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowProductGridUpdateLocalizationInput!]
  upsert: [RowProductGridUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowProductGridUpdateManyInlineInput {
  """Create and connect multiple RowProductGrid documents"""
  create: [RowProductGridCreateInput!]
  """Connect multiple existing RowProductGrid documents"""
  connect: [RowProductGridConnectInput!]
  """Override currently-connected documents with multiple existing RowProductGrid documents"""
  set: [RowProductGridWhereUniqueInput!]
  """Update multiple RowProductGrid documents"""
  update: [RowProductGridUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowProductGrid documents"""
  upsert: [RowProductGridUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowProductGrid documents"""
  disconnect: [RowProductGridWhereUniqueInput!]
  """Delete multiple RowProductGrid documents"""
  delete: [RowProductGridWhereUniqueInput!]
}

input RowProductGridUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowProductGridUpdateManyLocalizationsInput
}

input RowProductGridUpdateManyLocalizationDataInput {
  title: String
}

input RowProductGridUpdateManyLocalizationInput {
  data: RowProductGridUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowProductGridUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowProductGridUpdateManyLocalizationInput!]
}

input RowProductGridUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowProductGridWhereInput!
  """Update many input"""
  data: RowProductGridUpdateManyInput!
}

input RowProductGridUpdateOneInlineInput {
  """Create and connect one RowProductGrid document"""
  create: RowProductGridCreateInput
  """Update single RowProductGrid document"""
  update: RowProductGridUpdateWithNestedWhereUniqueInput
  """Upsert single RowProductGrid document"""
  upsert: RowProductGridUpsertWithNestedWhereUniqueInput
  """Connect existing RowProductGrid document"""
  connect: RowProductGridWhereUniqueInput
  """Disconnect currently connected RowProductGrid document"""
  disconnect: Boolean
  """Delete currently connected RowProductGrid document"""
  delete: Boolean
}

input RowProductGridUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductGridWhereUniqueInput!
  """Document to update"""
  data: RowProductGridUpdateInput!
}

input RowProductGridUpsertInput {
  """Create document if it didn't exist"""
  create: RowProductGridCreateInput!
  """Update document if it exists"""
  update: RowProductGridUpdateInput!
}

input RowProductGridUpsertLocalizationInput {
  update: RowProductGridUpdateLocalizationDataInput!
  create: RowProductGridCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductGridUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductGridWhereUniqueInput!
  """Upsert data"""
  data: RowProductGridUpsertInput!
}

"""Identifies documents"""
input RowProductGridWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductGridWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductGridWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductGridWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  magentoCategory: MagentoCategoryWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowProductGrid record uniquely"""
input RowProductGridWhereUniqueInput {
  id: ID
  identity: String
}

type RowProductRelated implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowProductRelated!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowProductRelated!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowProductRelated versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowProductRelatedConnectInput {
  """Document to connect"""
  where: RowProductRelatedWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowProductRelatedConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowProductRelatedEdge!]!
  aggregate: Aggregate!
}

input RowProductRelatedCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  productpages: ProductCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowProductRelatedCreateLocalizationsInput
}

input RowProductRelatedCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowProductRelatedCreateLocalizationInput {
  """Localization input"""
  data: RowProductRelatedCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductRelatedCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowProductRelatedCreateLocalizationInput!]
}

input RowProductRelatedCreateManyInlineInput {
  """Create and connect multiple existing RowProductRelated documents"""
  create: [RowProductRelatedCreateInput!]
  """Connect multiple existing RowProductRelated documents"""
  connect: [RowProductRelatedWhereUniqueInput!]
}

input RowProductRelatedCreateOneInlineInput {
  """Create and connect one RowProductRelated document"""
  create: RowProductRelatedCreateInput
  """Connect one existing RowProductRelated document"""
  connect: RowProductRelatedWhereUniqueInput
}

"""An edge in a connection."""
type RowProductRelatedEdge {
  """The item at the end of the edge."""
  node: RowProductRelated!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowProductRelatedManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductRelatedWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductRelatedWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductRelatedWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowProductRelatedOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowProductRelatedUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  productpages: ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowProductRelatedUpdateLocalizationsInput
}

input RowProductRelatedUpdateLocalizationDataInput {
  title: String
}

input RowProductRelatedUpdateLocalizationInput {
  data: RowProductRelatedUpdateLocalizationDataInput!
  locale: Locale!
}

input RowProductRelatedUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowProductRelatedCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowProductRelatedUpdateLocalizationInput!]
  upsert: [RowProductRelatedUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowProductRelatedUpdateManyInlineInput {
  """Create and connect multiple RowProductRelated documents"""
  create: [RowProductRelatedCreateInput!]
  """Connect multiple existing RowProductRelated documents"""
  connect: [RowProductRelatedConnectInput!]
  """Override currently-connected documents with multiple existing RowProductRelated documents"""
  set: [RowProductRelatedWhereUniqueInput!]
  """Update multiple RowProductRelated documents"""
  update: [RowProductRelatedUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowProductRelated documents"""
  upsert: [RowProductRelatedUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowProductRelated documents"""
  disconnect: [RowProductRelatedWhereUniqueInput!]
  """Delete multiple RowProductRelated documents"""
  delete: [RowProductRelatedWhereUniqueInput!]
}

input RowProductRelatedUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowProductRelatedUpdateManyLocalizationsInput
}

input RowProductRelatedUpdateManyLocalizationDataInput {
  title: String
}

input RowProductRelatedUpdateManyLocalizationInput {
  data: RowProductRelatedUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowProductRelatedUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowProductRelatedUpdateManyLocalizationInput!]
}

input RowProductRelatedUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowProductRelatedWhereInput!
  """Update many input"""
  data: RowProductRelatedUpdateManyInput!
}

input RowProductRelatedUpdateOneInlineInput {
  """Create and connect one RowProductRelated document"""
  create: RowProductRelatedCreateInput
  """Update single RowProductRelated document"""
  update: RowProductRelatedUpdateWithNestedWhereUniqueInput
  """Upsert single RowProductRelated document"""
  upsert: RowProductRelatedUpsertWithNestedWhereUniqueInput
  """Connect existing RowProductRelated document"""
  connect: RowProductRelatedWhereUniqueInput
  """Disconnect currently connected RowProductRelated document"""
  disconnect: Boolean
  """Delete currently connected RowProductRelated document"""
  delete: Boolean
}

input RowProductRelatedUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductRelatedWhereUniqueInput!
  """Document to update"""
  data: RowProductRelatedUpdateInput!
}

input RowProductRelatedUpsertInput {
  """Create document if it didn't exist"""
  create: RowProductRelatedCreateInput!
  """Update document if it exists"""
  update: RowProductRelatedUpdateInput!
}

input RowProductRelatedUpsertLocalizationInput {
  update: RowProductRelatedUpdateLocalizationDataInput!
  create: RowProductRelatedCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductRelatedUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductRelatedWhereUniqueInput!
  """Upsert data"""
  data: RowProductRelatedUpsertInput!
}

"""Identifies documents"""
input RowProductRelatedWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductRelatedWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductRelatedWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductRelatedWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowProductRelated record uniquely"""
input RowProductRelatedWhereUniqueInput {
  id: ID
  identity: String
}

type RowProductReviews implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowProductReviews!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowProductReviews!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowProductReviews versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowProductReviewsConnectInput {
  """Document to connect"""
  where: RowProductReviewsWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowProductReviewsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowProductReviewsEdge!]!
  aggregate: Aggregate!
}

input RowProductReviewsCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  productpages: ProductCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowProductReviewsCreateLocalizationsInput
}

input RowProductReviewsCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowProductReviewsCreateLocalizationInput {
  """Localization input"""
  data: RowProductReviewsCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductReviewsCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowProductReviewsCreateLocalizationInput!]
}

input RowProductReviewsCreateManyInlineInput {
  """Create and connect multiple existing RowProductReviews documents"""
  create: [RowProductReviewsCreateInput!]
  """Connect multiple existing RowProductReviews documents"""
  connect: [RowProductReviewsWhereUniqueInput!]
}

input RowProductReviewsCreateOneInlineInput {
  """Create and connect one RowProductReviews document"""
  create: RowProductReviewsCreateInput
  """Connect one existing RowProductReviews document"""
  connect: RowProductReviewsWhereUniqueInput
}

"""An edge in a connection."""
type RowProductReviewsEdge {
  """The item at the end of the edge."""
  node: RowProductReviews!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowProductReviewsManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductReviewsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductReviewsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductReviewsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowProductReviewsOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowProductReviewsUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  productpages: ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowProductReviewsUpdateLocalizationsInput
}

input RowProductReviewsUpdateLocalizationDataInput {
  title: String
}

input RowProductReviewsUpdateLocalizationInput {
  data: RowProductReviewsUpdateLocalizationDataInput!
  locale: Locale!
}

input RowProductReviewsUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowProductReviewsCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowProductReviewsUpdateLocalizationInput!]
  upsert: [RowProductReviewsUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowProductReviewsUpdateManyInlineInput {
  """Create and connect multiple RowProductReviews documents"""
  create: [RowProductReviewsCreateInput!]
  """Connect multiple existing RowProductReviews documents"""
  connect: [RowProductReviewsConnectInput!]
  """Override currently-connected documents with multiple existing RowProductReviews documents"""
  set: [RowProductReviewsWhereUniqueInput!]
  """Update multiple RowProductReviews documents"""
  update: [RowProductReviewsUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowProductReviews documents"""
  upsert: [RowProductReviewsUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowProductReviews documents"""
  disconnect: [RowProductReviewsWhereUniqueInput!]
  """Delete multiple RowProductReviews documents"""
  delete: [RowProductReviewsWhereUniqueInput!]
}

input RowProductReviewsUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowProductReviewsUpdateManyLocalizationsInput
}

input RowProductReviewsUpdateManyLocalizationDataInput {
  title: String
}

input RowProductReviewsUpdateManyLocalizationInput {
  data: RowProductReviewsUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowProductReviewsUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowProductReviewsUpdateManyLocalizationInput!]
}

input RowProductReviewsUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowProductReviewsWhereInput!
  """Update many input"""
  data: RowProductReviewsUpdateManyInput!
}

input RowProductReviewsUpdateOneInlineInput {
  """Create and connect one RowProductReviews document"""
  create: RowProductReviewsCreateInput
  """Update single RowProductReviews document"""
  update: RowProductReviewsUpdateWithNestedWhereUniqueInput
  """Upsert single RowProductReviews document"""
  upsert: RowProductReviewsUpsertWithNestedWhereUniqueInput
  """Connect existing RowProductReviews document"""
  connect: RowProductReviewsWhereUniqueInput
  """Disconnect currently connected RowProductReviews document"""
  disconnect: Boolean
  """Delete currently connected RowProductReviews document"""
  delete: Boolean
}

input RowProductReviewsUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductReviewsWhereUniqueInput!
  """Document to update"""
  data: RowProductReviewsUpdateInput!
}

input RowProductReviewsUpsertInput {
  """Create document if it didn't exist"""
  create: RowProductReviewsCreateInput!
  """Update document if it exists"""
  update: RowProductReviewsUpdateInput!
}

input RowProductReviewsUpsertLocalizationInput {
  update: RowProductReviewsUpdateLocalizationDataInput!
  create: RowProductReviewsCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductReviewsUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductReviewsWhereUniqueInput!
  """Upsert data"""
  data: RowProductReviewsUpsertInput!
}

"""Identifies documents"""
input RowProductReviewsWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductReviewsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductReviewsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductReviewsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowProductReviews record uniquely"""
input RowProductReviewsWhereUniqueInput {
  id: ID
  identity: String
}

type RowProductSpecs implements Node {
  """System stage field"""
  stage: Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowProductSpecs!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  identity: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowProductSpecs versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowProductSpecsConnectInput {
  """Document to connect"""
  where: RowProductSpecsWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowProductSpecsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowProductSpecsEdge!]!
  aggregate: Aggregate!
}

input RowProductSpecsCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  productpages: ProductCreateManyInlineInput
}

input RowProductSpecsCreateManyInlineInput {
  """Create and connect multiple existing RowProductSpecs documents"""
  create: [RowProductSpecsCreateInput!]
  """Connect multiple existing RowProductSpecs documents"""
  connect: [RowProductSpecsWhereUniqueInput!]
}

input RowProductSpecsCreateOneInlineInput {
  """Create and connect one RowProductSpecs document"""
  create: RowProductSpecsCreateInput
  """Connect one existing RowProductSpecs document"""
  connect: RowProductSpecsWhereUniqueInput
}

"""An edge in a connection."""
type RowProductSpecsEdge {
  """The item at the end of the edge."""
  node: RowProductSpecs!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowProductSpecsManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductSpecsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductSpecsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductSpecsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowProductSpecsOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowProductSpecsUpdateInput {
  identity: String
  productpages: ProductUpdateManyInlineInput
}

input RowProductSpecsUpdateManyInlineInput {
  """Create and connect multiple RowProductSpecs documents"""
  create: [RowProductSpecsCreateInput!]
  """Connect multiple existing RowProductSpecs documents"""
  connect: [RowProductSpecsConnectInput!]
  """Override currently-connected documents with multiple existing RowProductSpecs documents"""
  set: [RowProductSpecsWhereUniqueInput!]
  """Update multiple RowProductSpecs documents"""
  update: [RowProductSpecsUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowProductSpecs documents"""
  upsert: [RowProductSpecsUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowProductSpecs documents"""
  disconnect: [RowProductSpecsWhereUniqueInput!]
  """Delete multiple RowProductSpecs documents"""
  delete: [RowProductSpecsWhereUniqueInput!]
}

input RowProductSpecsUpdateManyInput {
  """No fields in updateMany data input"""
  _: String
}

input RowProductSpecsUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowProductSpecsWhereInput!
  """Update many input"""
  data: RowProductSpecsUpdateManyInput!
}

input RowProductSpecsUpdateOneInlineInput {
  """Create and connect one RowProductSpecs document"""
  create: RowProductSpecsCreateInput
  """Update single RowProductSpecs document"""
  update: RowProductSpecsUpdateWithNestedWhereUniqueInput
  """Upsert single RowProductSpecs document"""
  upsert: RowProductSpecsUpsertWithNestedWhereUniqueInput
  """Connect existing RowProductSpecs document"""
  connect: RowProductSpecsWhereUniqueInput
  """Disconnect currently connected RowProductSpecs document"""
  disconnect: Boolean
  """Delete currently connected RowProductSpecs document"""
  delete: Boolean
}

input RowProductSpecsUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductSpecsWhereUniqueInput!
  """Document to update"""
  data: RowProductSpecsUpdateInput!
}

input RowProductSpecsUpsertInput {
  """Create document if it didn't exist"""
  create: RowProductSpecsCreateInput!
  """Update document if it exists"""
  update: RowProductSpecsUpdateInput!
}

input RowProductSpecsUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductSpecsWhereUniqueInput!
  """Upsert data"""
  data: RowProductSpecsUpsertInput!
}

"""Identifies documents"""
input RowProductSpecsWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductSpecsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductSpecsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductSpecsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowProductSpecs record uniquely"""
input RowProductSpecsWhereUniqueInput {
  id: ID
  identity: String
}

type RowProductUpsells implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowProductUpsells!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowProductUpsells!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowProductUpsells versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowProductUpsellsConnectInput {
  """Document to connect"""
  where: RowProductUpsellsWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowProductUpsellsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowProductUpsellsEdge!]!
  aggregate: Aggregate!
}

input RowProductUpsellsCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  productpages: ProductCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowProductUpsellsCreateLocalizationsInput
}

input RowProductUpsellsCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowProductUpsellsCreateLocalizationInput {
  """Localization input"""
  data: RowProductUpsellsCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductUpsellsCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowProductUpsellsCreateLocalizationInput!]
}

input RowProductUpsellsCreateManyInlineInput {
  """Create and connect multiple existing RowProductUpsells documents"""
  create: [RowProductUpsellsCreateInput!]
  """Connect multiple existing RowProductUpsells documents"""
  connect: [RowProductUpsellsWhereUniqueInput!]
}

input RowProductUpsellsCreateOneInlineInput {
  """Create and connect one RowProductUpsells document"""
  create: RowProductUpsellsCreateInput
  """Connect one existing RowProductUpsells document"""
  connect: RowProductUpsellsWhereUniqueInput
}

"""An edge in a connection."""
type RowProductUpsellsEdge {
  """The item at the end of the edge."""
  node: RowProductUpsells!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowProductUpsellsManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductUpsellsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductUpsellsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductUpsellsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowProductUpsellsOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowProductUpsellsUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  productpages: ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowProductUpsellsUpdateLocalizationsInput
}

input RowProductUpsellsUpdateLocalizationDataInput {
  title: String
}

input RowProductUpsellsUpdateLocalizationInput {
  data: RowProductUpsellsUpdateLocalizationDataInput!
  locale: Locale!
}

input RowProductUpsellsUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowProductUpsellsCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowProductUpsellsUpdateLocalizationInput!]
  upsert: [RowProductUpsellsUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowProductUpsellsUpdateManyInlineInput {
  """Create and connect multiple RowProductUpsells documents"""
  create: [RowProductUpsellsCreateInput!]
  """Connect multiple existing RowProductUpsells documents"""
  connect: [RowProductUpsellsConnectInput!]
  """Override currently-connected documents with multiple existing RowProductUpsells documents"""
  set: [RowProductUpsellsWhereUniqueInput!]
  """Update multiple RowProductUpsells documents"""
  update: [RowProductUpsellsUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowProductUpsells documents"""
  upsert: [RowProductUpsellsUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowProductUpsells documents"""
  disconnect: [RowProductUpsellsWhereUniqueInput!]
  """Delete multiple RowProductUpsells documents"""
  delete: [RowProductUpsellsWhereUniqueInput!]
}

input RowProductUpsellsUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowProductUpsellsUpdateManyLocalizationsInput
}

input RowProductUpsellsUpdateManyLocalizationDataInput {
  title: String
}

input RowProductUpsellsUpdateManyLocalizationInput {
  data: RowProductUpsellsUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowProductUpsellsUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowProductUpsellsUpdateManyLocalizationInput!]
}

input RowProductUpsellsUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowProductUpsellsWhereInput!
  """Update many input"""
  data: RowProductUpsellsUpdateManyInput!
}

input RowProductUpsellsUpdateOneInlineInput {
  """Create and connect one RowProductUpsells document"""
  create: RowProductUpsellsCreateInput
  """Update single RowProductUpsells document"""
  update: RowProductUpsellsUpdateWithNestedWhereUniqueInput
  """Upsert single RowProductUpsells document"""
  upsert: RowProductUpsellsUpsertWithNestedWhereUniqueInput
  """Connect existing RowProductUpsells document"""
  connect: RowProductUpsellsWhereUniqueInput
  """Disconnect currently connected RowProductUpsells document"""
  disconnect: Boolean
  """Delete currently connected RowProductUpsells document"""
  delete: Boolean
}

input RowProductUpsellsUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductUpsellsWhereUniqueInput!
  """Document to update"""
  data: RowProductUpsellsUpdateInput!
}

input RowProductUpsellsUpsertInput {
  """Create document if it didn't exist"""
  create: RowProductUpsellsCreateInput!
  """Update document if it exists"""
  update: RowProductUpsellsUpdateInput!
}

input RowProductUpsellsUpsertLocalizationInput {
  update: RowProductUpsellsUpdateLocalizationDataInput!
  create: RowProductUpsellsCreateLocalizationDataInput!
  locale: Locale!
}

input RowProductUpsellsUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowProductUpsellsWhereUniqueInput!
  """Upsert data"""
  data: RowProductUpsellsUpsertInput!
}

"""Identifies documents"""
input RowProductUpsellsWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowProductUpsellsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowProductUpsellsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowProductUpsellsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowProductUpsells record uniquely"""
input RowProductUpsellsWhereUniqueInput {
  id: ID
  identity: String
}

type RowQuote implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowQuote!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowQuote!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  quote: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowQuote versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowQuoteConnectInput {
  """Document to connect"""
  where: RowQuoteWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowQuoteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowQuoteEdge!]!
  aggregate: Aggregate!
}

input RowQuoteCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """quote input for default locale (en)"""
  quote: RichTextAST!
  pages: PageCreateManyInlineInput
  productpages: ProductCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowQuoteCreateLocalizationsInput
}

input RowQuoteCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  quote: RichTextAST!
}

input RowQuoteCreateLocalizationInput {
  """Localization input"""
  data: RowQuoteCreateLocalizationDataInput!
  locale: Locale!
}

input RowQuoteCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowQuoteCreateLocalizationInput!]
}

input RowQuoteCreateManyInlineInput {
  """Create and connect multiple existing RowQuote documents"""
  create: [RowQuoteCreateInput!]
  """Connect multiple existing RowQuote documents"""
  connect: [RowQuoteWhereUniqueInput!]
}

input RowQuoteCreateOneInlineInput {
  """Create and connect one RowQuote document"""
  create: RowQuoteCreateInput
  """Connect one existing RowQuote document"""
  connect: RowQuoteWhereUniqueInput
}

"""An edge in a connection."""
type RowQuoteEdge {
  """The item at the end of the edge."""
  node: RowQuote!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowQuoteManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowQuoteWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowQuoteWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowQuoteWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowQuoteOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input RowQuoteUpdateInput {
  identity: String
  """quote input for default locale (en)"""
  quote: RichTextAST
  pages: PageUpdateManyInlineInput
  productpages: ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowQuoteUpdateLocalizationsInput
}

input RowQuoteUpdateLocalizationDataInput {
  quote: RichTextAST
}

input RowQuoteUpdateLocalizationInput {
  data: RowQuoteUpdateLocalizationDataInput!
  locale: Locale!
}

input RowQuoteUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowQuoteCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowQuoteUpdateLocalizationInput!]
  upsert: [RowQuoteUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowQuoteUpdateManyInlineInput {
  """Create and connect multiple RowQuote documents"""
  create: [RowQuoteCreateInput!]
  """Connect multiple existing RowQuote documents"""
  connect: [RowQuoteConnectInput!]
  """Override currently-connected documents with multiple existing RowQuote documents"""
  set: [RowQuoteWhereUniqueInput!]
  """Update multiple RowQuote documents"""
  update: [RowQuoteUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowQuote documents"""
  upsert: [RowQuoteUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowQuote documents"""
  disconnect: [RowQuoteWhereUniqueInput!]
  """Delete multiple RowQuote documents"""
  delete: [RowQuoteWhereUniqueInput!]
}

input RowQuoteUpdateManyInput {
  """quote input for default locale (en)"""
  quote: RichTextAST
  """Optional updates to localizations"""
  localizations: RowQuoteUpdateManyLocalizationsInput
}

input RowQuoteUpdateManyLocalizationDataInput {
  quote: RichTextAST
}

input RowQuoteUpdateManyLocalizationInput {
  data: RowQuoteUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowQuoteUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowQuoteUpdateManyLocalizationInput!]
}

input RowQuoteUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowQuoteWhereInput!
  """Update many input"""
  data: RowQuoteUpdateManyInput!
}

input RowQuoteUpdateOneInlineInput {
  """Create and connect one RowQuote document"""
  create: RowQuoteCreateInput
  """Update single RowQuote document"""
  update: RowQuoteUpdateWithNestedWhereUniqueInput
  """Upsert single RowQuote document"""
  upsert: RowQuoteUpsertWithNestedWhereUniqueInput
  """Connect existing RowQuote document"""
  connect: RowQuoteWhereUniqueInput
  """Disconnect currently connected RowQuote document"""
  disconnect: Boolean
  """Delete currently connected RowQuote document"""
  delete: Boolean
}

input RowQuoteUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowQuoteWhereUniqueInput!
  """Document to update"""
  data: RowQuoteUpdateInput!
}

input RowQuoteUpsertInput {
  """Create document if it didn't exist"""
  create: RowQuoteCreateInput!
  """Update document if it exists"""
  update: RowQuoteUpdateInput!
}

input RowQuoteUpsertLocalizationInput {
  update: RowQuoteUpdateLocalizationDataInput!
  create: RowQuoteCreateLocalizationDataInput!
  locale: Locale!
}

input RowQuoteUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowQuoteWhereUniqueInput!
  """Upsert data"""
  data: RowQuoteUpsertInput!
}

"""Identifies documents"""
input RowQuoteWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowQuoteWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowQuoteWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowQuoteWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowQuote record uniquely"""
input RowQuoteWhereUniqueInput {
  id: ID
  identity: String
}

type RowServiceOptions implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowServiceOptions!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowServiceOptions!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  serviceOptions(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `serviceOptions` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowServiceOptions versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowServiceOptionsConnectInput {
  """Document to connect"""
  where: RowServiceOptionsWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowServiceOptionsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowServiceOptionsEdge!]!
  aggregate: Aggregate!
}

input RowServiceOptionsCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  serviceOptions: PageLinkCreateManyInlineInput
  pages: PageCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowServiceOptionsCreateLocalizationsInput
}

input RowServiceOptionsCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowServiceOptionsCreateLocalizationInput {
  """Localization input"""
  data: RowServiceOptionsCreateLocalizationDataInput!
  locale: Locale!
}

input RowServiceOptionsCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowServiceOptionsCreateLocalizationInput!]
}

input RowServiceOptionsCreateManyInlineInput {
  """Create and connect multiple existing RowServiceOptions documents"""
  create: [RowServiceOptionsCreateInput!]
  """Connect multiple existing RowServiceOptions documents"""
  connect: [RowServiceOptionsWhereUniqueInput!]
}

input RowServiceOptionsCreateOneInlineInput {
  """Create and connect one RowServiceOptions document"""
  create: RowServiceOptionsCreateInput
  """Connect one existing RowServiceOptions document"""
  connect: RowServiceOptionsWhereUniqueInput
}

"""An edge in a connection."""
type RowServiceOptionsEdge {
  """The item at the end of the edge."""
  node: RowServiceOptions!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowServiceOptionsManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowServiceOptionsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowServiceOptionsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowServiceOptionsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  serviceOptions_every: PageLinkWhereInput
  serviceOptions_some: PageLinkWhereInput
  serviceOptions_none: PageLinkWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowServiceOptionsOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowServiceOptionsUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  serviceOptions: PageLinkUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowServiceOptionsUpdateLocalizationsInput
}

input RowServiceOptionsUpdateLocalizationDataInput {
  title: String
}

input RowServiceOptionsUpdateLocalizationInput {
  data: RowServiceOptionsUpdateLocalizationDataInput!
  locale: Locale!
}

input RowServiceOptionsUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowServiceOptionsCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowServiceOptionsUpdateLocalizationInput!]
  upsert: [RowServiceOptionsUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowServiceOptionsUpdateManyInlineInput {
  """Create and connect multiple RowServiceOptions documents"""
  create: [RowServiceOptionsCreateInput!]
  """Connect multiple existing RowServiceOptions documents"""
  connect: [RowServiceOptionsConnectInput!]
  """Override currently-connected documents with multiple existing RowServiceOptions documents"""
  set: [RowServiceOptionsWhereUniqueInput!]
  """Update multiple RowServiceOptions documents"""
  update: [RowServiceOptionsUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowServiceOptions documents"""
  upsert: [RowServiceOptionsUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowServiceOptions documents"""
  disconnect: [RowServiceOptionsWhereUniqueInput!]
  """Delete multiple RowServiceOptions documents"""
  delete: [RowServiceOptionsWhereUniqueInput!]
}

input RowServiceOptionsUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowServiceOptionsUpdateManyLocalizationsInput
}

input RowServiceOptionsUpdateManyLocalizationDataInput {
  title: String
}

input RowServiceOptionsUpdateManyLocalizationInput {
  data: RowServiceOptionsUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowServiceOptionsUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowServiceOptionsUpdateManyLocalizationInput!]
}

input RowServiceOptionsUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowServiceOptionsWhereInput!
  """Update many input"""
  data: RowServiceOptionsUpdateManyInput!
}

input RowServiceOptionsUpdateOneInlineInput {
  """Create and connect one RowServiceOptions document"""
  create: RowServiceOptionsCreateInput
  """Update single RowServiceOptions document"""
  update: RowServiceOptionsUpdateWithNestedWhereUniqueInput
  """Upsert single RowServiceOptions document"""
  upsert: RowServiceOptionsUpsertWithNestedWhereUniqueInput
  """Connect existing RowServiceOptions document"""
  connect: RowServiceOptionsWhereUniqueInput
  """Disconnect currently connected RowServiceOptions document"""
  disconnect: Boolean
  """Delete currently connected RowServiceOptions document"""
  delete: Boolean
}

input RowServiceOptionsUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowServiceOptionsWhereUniqueInput!
  """Document to update"""
  data: RowServiceOptionsUpdateInput!
}

input RowServiceOptionsUpsertInput {
  """Create document if it didn't exist"""
  create: RowServiceOptionsCreateInput!
  """Update document if it exists"""
  update: RowServiceOptionsUpdateInput!
}

input RowServiceOptionsUpsertLocalizationInput {
  update: RowServiceOptionsUpdateLocalizationDataInput!
  create: RowServiceOptionsCreateLocalizationDataInput!
  locale: Locale!
}

input RowServiceOptionsUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowServiceOptionsWhereUniqueInput!
  """Upsert data"""
  data: RowServiceOptionsUpsertInput!
}

"""Identifies documents"""
input RowServiceOptionsWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowServiceOptionsWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowServiceOptionsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowServiceOptionsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  serviceOptions_every: PageLinkWhereInput
  serviceOptions_some: PageLinkWhereInput
  serviceOptions_none: PageLinkWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowServiceOptions record uniquely"""
input RowServiceOptionsWhereUniqueInput {
  id: ID
  identity: String
}

type RowSpecialBanner implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowSpecialBanner!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowSpecialBanner!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  topic: String
  copy: RichText!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  asset(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `asset` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset!
  pageLinks(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pageLinks` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  productpages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `productpages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Product!]!
  """List of RowSpecialBanner versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowSpecialBannerConnectInput {
  """Document to connect"""
  where: RowSpecialBannerWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowSpecialBannerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowSpecialBannerEdge!]!
  aggregate: Aggregate!
}

input RowSpecialBannerCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST!
  asset: AssetCreateOneInlineInput!
  pageLinks: PageLinkCreateManyInlineInput
  pages: PageCreateManyInlineInput
  productpages: ProductCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowSpecialBannerCreateLocalizationsInput
}

input RowSpecialBannerCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  topic: String
  copy: RichTextAST!
}

input RowSpecialBannerCreateLocalizationInput {
  """Localization input"""
  data: RowSpecialBannerCreateLocalizationDataInput!
  locale: Locale!
}

input RowSpecialBannerCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowSpecialBannerCreateLocalizationInput!]
}

input RowSpecialBannerCreateManyInlineInput {
  """Create and connect multiple existing RowSpecialBanner documents"""
  create: [RowSpecialBannerCreateInput!]
  """Connect multiple existing RowSpecialBanner documents"""
  connect: [RowSpecialBannerWhereUniqueInput!]
}

input RowSpecialBannerCreateOneInlineInput {
  """Create and connect one RowSpecialBanner document"""
  create: RowSpecialBannerCreateInput
  """Connect one existing RowSpecialBanner document"""
  connect: RowSpecialBannerWhereUniqueInput
}

"""An edge in a connection."""
type RowSpecialBannerEdge {
  """The item at the end of the edge."""
  node: RowSpecialBanner!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowSpecialBannerManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowSpecialBannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowSpecialBannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowSpecialBannerWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

enum RowSpecialBannerOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  topic_ASC
  topic_DESC
}

input RowSpecialBannerUpdateInput {
  identity: String
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  asset: AssetUpdateOneInlineInput
  pageLinks: PageLinkUpdateManyInlineInput
  pages: PageUpdateManyInlineInput
  productpages: ProductUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowSpecialBannerUpdateLocalizationsInput
}

input RowSpecialBannerUpdateLocalizationDataInput {
  topic: String
  copy: RichTextAST
}

input RowSpecialBannerUpdateLocalizationInput {
  data: RowSpecialBannerUpdateLocalizationDataInput!
  locale: Locale!
}

input RowSpecialBannerUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowSpecialBannerCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowSpecialBannerUpdateLocalizationInput!]
  upsert: [RowSpecialBannerUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowSpecialBannerUpdateManyInlineInput {
  """Create and connect multiple RowSpecialBanner documents"""
  create: [RowSpecialBannerCreateInput!]
  """Connect multiple existing RowSpecialBanner documents"""
  connect: [RowSpecialBannerConnectInput!]
  """Override currently-connected documents with multiple existing RowSpecialBanner documents"""
  set: [RowSpecialBannerWhereUniqueInput!]
  """Update multiple RowSpecialBanner documents"""
  update: [RowSpecialBannerUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowSpecialBanner documents"""
  upsert: [RowSpecialBannerUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowSpecialBanner documents"""
  disconnect: [RowSpecialBannerWhereUniqueInput!]
  """Delete multiple RowSpecialBanner documents"""
  delete: [RowSpecialBannerWhereUniqueInput!]
}

input RowSpecialBannerUpdateManyInput {
  """topic input for default locale (en)"""
  topic: String
  """copy input for default locale (en)"""
  copy: RichTextAST
  """Optional updates to localizations"""
  localizations: RowSpecialBannerUpdateManyLocalizationsInput
}

input RowSpecialBannerUpdateManyLocalizationDataInput {
  topic: String
  copy: RichTextAST
}

input RowSpecialBannerUpdateManyLocalizationInput {
  data: RowSpecialBannerUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowSpecialBannerUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowSpecialBannerUpdateManyLocalizationInput!]
}

input RowSpecialBannerUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowSpecialBannerWhereInput!
  """Update many input"""
  data: RowSpecialBannerUpdateManyInput!
}

input RowSpecialBannerUpdateOneInlineInput {
  """Create and connect one RowSpecialBanner document"""
  create: RowSpecialBannerCreateInput
  """Update single RowSpecialBanner document"""
  update: RowSpecialBannerUpdateWithNestedWhereUniqueInput
  """Upsert single RowSpecialBanner document"""
  upsert: RowSpecialBannerUpsertWithNestedWhereUniqueInput
  """Connect existing RowSpecialBanner document"""
  connect: RowSpecialBannerWhereUniqueInput
  """Disconnect currently connected RowSpecialBanner document"""
  disconnect: Boolean
  """Delete currently connected RowSpecialBanner document"""
  delete: Boolean
}

input RowSpecialBannerUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowSpecialBannerWhereUniqueInput!
  """Document to update"""
  data: RowSpecialBannerUpdateInput!
}

input RowSpecialBannerUpsertInput {
  """Create document if it didn't exist"""
  create: RowSpecialBannerCreateInput!
  """Update document if it exists"""
  update: RowSpecialBannerUpdateInput!
}

input RowSpecialBannerUpsertLocalizationInput {
  update: RowSpecialBannerUpdateLocalizationDataInput!
  create: RowSpecialBannerCreateLocalizationDataInput!
  locale: Locale!
}

input RowSpecialBannerUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowSpecialBannerWhereUniqueInput!
  """Upsert data"""
  data: RowSpecialBannerUpsertInput!
}

"""Identifies documents"""
input RowSpecialBannerWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowSpecialBannerWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowSpecialBannerWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowSpecialBannerWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  topic: String
  """All values that are not equal to given value."""
  topic_not: String
  """All values that are contained in given list."""
  topic_in: [String!]
  """All values that are not contained in given list."""
  topic_not_in: [String!]
  """All values containing the given string."""
  topic_contains: String
  """All values not containing the given string."""
  topic_not_contains: String
  """All values starting with the given string."""
  topic_starts_with: String
  """All values not starting with the given string."""
  topic_not_starts_with: String
  """All values ending with the given string."""
  topic_ends_with: String
  """All values not ending with the given string"""
  topic_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  asset: AssetWhereInput
  pageLinks_every: PageLinkWhereInput
  pageLinks_some: PageLinkWhereInput
  pageLinks_none: PageLinkWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  productpages_every: ProductWhereInput
  productpages_some: ProductWhereInput
  productpages_none: ProductWhereInput
}

"""References RowSpecialBanner record uniquely"""
input RowSpecialBannerWhereUniqueInput {
  id: ID
  identity: String
}

type RowSwipeableGrid implements Node {
  """System stage field"""
  stage: Stage!
  """System Locale field"""
  locale: Locale!
  """Get the other localizations for this document"""
  localizations(
    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false
  ): [RowSwipeableGrid!]!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [RowSwipeableGrid!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was updated"""
  updatedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both"""
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime
  identity: String!
  title: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  pages(
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `pages` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [Page!]!
  """List of RowSwipeableGrid versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input RowSwipeableGridConnectInput {
  """Document to connect"""
  where: RowSwipeableGridWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type RowSwipeableGridConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [RowSwipeableGridEdge!]!
  aggregate: Aggregate!
}

input RowSwipeableGridCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """title input for default locale (en)"""
  title: String!
  pages: PageCreateManyInlineInput
  """Inline mutations for managing document localizations excluding the default locale"""
  localizations: RowSwipeableGridCreateLocalizationsInput
}

input RowSwipeableGridCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}

input RowSwipeableGridCreateLocalizationInput {
  """Localization input"""
  data: RowSwipeableGridCreateLocalizationDataInput!
  locale: Locale!
}

input RowSwipeableGridCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [RowSwipeableGridCreateLocalizationInput!]
}

input RowSwipeableGridCreateManyInlineInput {
  """Create and connect multiple existing RowSwipeableGrid documents"""
  create: [RowSwipeableGridCreateInput!]
  """Connect multiple existing RowSwipeableGrid documents"""
  connect: [RowSwipeableGridWhereUniqueInput!]
}

input RowSwipeableGridCreateOneInlineInput {
  """Create and connect one RowSwipeableGrid document"""
  create: RowSwipeableGridCreateInput
  """Connect one existing RowSwipeableGrid document"""
  connect: RowSwipeableGridWhereUniqueInput
}

"""An edge in a connection."""
type RowSwipeableGridEdge {
  """The item at the end of the edge."""
  node: RowSwipeableGrid!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input RowSwipeableGridManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowSwipeableGridWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowSwipeableGridWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowSwipeableGridWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

enum RowSwipeableGridOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  title_ASC
  title_DESC
}

input RowSwipeableGridUpdateInput {
  identity: String
  """title input for default locale (en)"""
  title: String
  pages: PageUpdateManyInlineInput
  """Manage document localizations"""
  localizations: RowSwipeableGridUpdateLocalizationsInput
}

input RowSwipeableGridUpdateLocalizationDataInput {
  title: String
}

input RowSwipeableGridUpdateLocalizationInput {
  data: RowSwipeableGridUpdateLocalizationDataInput!
  locale: Locale!
}

input RowSwipeableGridUpdateLocalizationsInput {
  """Localizations to create"""
  create: [RowSwipeableGridCreateLocalizationInput!]
  """Localizations to update"""
  update: [RowSwipeableGridUpdateLocalizationInput!]
  upsert: [RowSwipeableGridUpsertLocalizationInput!]
  """Localizations to delete"""
  delete: [Locale!]
}

input RowSwipeableGridUpdateManyInlineInput {
  """Create and connect multiple RowSwipeableGrid documents"""
  create: [RowSwipeableGridCreateInput!]
  """Connect multiple existing RowSwipeableGrid documents"""
  connect: [RowSwipeableGridConnectInput!]
  """Override currently-connected documents with multiple existing RowSwipeableGrid documents"""
  set: [RowSwipeableGridWhereUniqueInput!]
  """Update multiple RowSwipeableGrid documents"""
  update: [RowSwipeableGridUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple RowSwipeableGrid documents"""
  upsert: [RowSwipeableGridUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple RowSwipeableGrid documents"""
  disconnect: [RowSwipeableGridWhereUniqueInput!]
  """Delete multiple RowSwipeableGrid documents"""
  delete: [RowSwipeableGridWhereUniqueInput!]
}

input RowSwipeableGridUpdateManyInput {
  """title input for default locale (en)"""
  title: String
  """Optional updates to localizations"""
  localizations: RowSwipeableGridUpdateManyLocalizationsInput
}

input RowSwipeableGridUpdateManyLocalizationDataInput {
  title: String
}

input RowSwipeableGridUpdateManyLocalizationInput {
  data: RowSwipeableGridUpdateManyLocalizationDataInput!
  locale: Locale!
}

input RowSwipeableGridUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [RowSwipeableGridUpdateManyLocalizationInput!]
}

input RowSwipeableGridUpdateManyWithNestedWhereInput {
  """Document search"""
  where: RowSwipeableGridWhereInput!
  """Update many input"""
  data: RowSwipeableGridUpdateManyInput!
}

input RowSwipeableGridUpdateOneInlineInput {
  """Create and connect one RowSwipeableGrid document"""
  create: RowSwipeableGridCreateInput
  """Update single RowSwipeableGrid document"""
  update: RowSwipeableGridUpdateWithNestedWhereUniqueInput
  """Upsert single RowSwipeableGrid document"""
  upsert: RowSwipeableGridUpsertWithNestedWhereUniqueInput
  """Connect existing RowSwipeableGrid document"""
  connect: RowSwipeableGridWhereUniqueInput
  """Disconnect currently connected RowSwipeableGrid document"""
  disconnect: Boolean
  """Delete currently connected RowSwipeableGrid document"""
  delete: Boolean
}

input RowSwipeableGridUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowSwipeableGridWhereUniqueInput!
  """Document to update"""
  data: RowSwipeableGridUpdateInput!
}

input RowSwipeableGridUpsertInput {
  """Create document if it didn't exist"""
  create: RowSwipeableGridCreateInput!
  """Update document if it exists"""
  update: RowSwipeableGridUpdateInput!
}

input RowSwipeableGridUpsertLocalizationInput {
  update: RowSwipeableGridUpdateLocalizationDataInput!
  create: RowSwipeableGridCreateLocalizationDataInput!
  locale: Locale!
}

input RowSwipeableGridUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: RowSwipeableGridWhereUniqueInput!
  """Upsert data"""
  data: RowSwipeableGridUpsertInput!
}

"""Identifies documents"""
input RowSwipeableGridWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [RowSwipeableGridWhereInput!]
  """Logical OR on all given filters."""
  OR: [RowSwipeableGridWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [RowSwipeableGridWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  title: String
  """All values that are not equal to given value."""
  title_not: String
  """All values that are contained in given list."""
  title_in: [String!]
  """All values that are not contained in given list."""
  title_not_in: [String!]
  """All values containing the given string."""
  title_contains: String
  """All values not containing the given string."""
  title_not_contains: String
  """All values starting with the given string."""
  title_starts_with: String
  """All values not starting with the given string."""
  title_not_starts_with: String
  """All values ending with the given string."""
  title_ends_with: String
  """All values not ending with the given string"""
  title_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}

"""References RowSwipeableGrid record uniquely"""
input RowSwipeableGridWhereUniqueInput {
  id: ID
  identity: String
}

"""Stage system enumeration"""
enum Stage {
  """The Draft is the default stage for all your content."""
  DRAFT
  """The Published stage is where you can publish your content to."""
  PUBLISHED
}

enum SystemDateTimeFieldVariation {
  BASE
  LOCALIZATION
  COMBINED
}

input UnpublishLocaleInput {
  """Locales to unpublish"""
  locale: Locale!
  """Stages to unpublish selected locales from"""
  stages: [Stage!]!
}

"""User system model"""
type User implements Node {
  """System stage field"""
  stage: Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [User!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  """The username"""
  name: String!
  """Profile Picture url"""
  picture: String
  """Flag to determine if user is active or not"""
  isActive: Boolean!
  """User Kind. Can be either MEMBER, PAT or PUBLIC"""
  kind: UserKind!
}

input UserConnectInput {
  """Document to connect"""
  where: UserWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [UserEdge!]!
  aggregate: Aggregate!
}

input UserCreateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInlineInput {
  """Connect one existing User document"""
  connect: UserWhereUniqueInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!
  """A cursor for use in pagination."""
  cursor: String!
}

"""System User Kind"""
enum UserKind {
  MEMBER
  PAT
  PUBLIC
  WEBHOOK
}

"""Identifies documents"""
input UserManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]
  """Logical OR on all given filters."""
  OR: [UserWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  picture: String
  """All values that are not equal to given value."""
  picture_not: String
  """All values that are contained in given list."""
  picture_in: [String!]
  """All values that are not contained in given list."""
  picture_not_in: [String!]
  """All values containing the given string."""
  picture_contains: String
  """All values not containing the given string."""
  picture_not_contains: String
  """All values starting with the given string."""
  picture_starts_with: String
  """All values not starting with the given string."""
  picture_not_starts_with: String
  """All values ending with the given string."""
  picture_ends_with: String
  """All values not ending with the given string"""
  picture_not_ends_with: String
  isActive: Boolean
  """All values that are not equal to given value."""
  isActive_not: Boolean
  kind: UserKind
  """All values that are not equal to given value."""
  kind_not: UserKind
  """All values that are contained in given list."""
  kind_in: [UserKind!]
  """All values that are not contained in given list."""
  kind_not_in: [UserKind!]
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  name_ASC
  name_DESC
  picture_ASC
  picture_DESC
  isActive_ASC
  isActive_DESC
  kind_ASC
  kind_DESC
}

input UserUpdateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserConnectInput!]
  """Override currently-connected documents with multiple existing User documents"""
  set: [UserWhereUniqueInput!]
  """Disconnect multiple User documents"""
  disconnect: [UserWhereUniqueInput!]
}

input UserUpdateOneInlineInput {
  """Connect existing User document"""
  connect: UserWhereUniqueInput
  """Disconnect currently connected User document"""
  disconnect: Boolean
}

"""Identifies documents"""
input UserWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]
  """Logical OR on all given filters."""
  OR: [UserWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  name: String
  """All values that are not equal to given value."""
  name_not: String
  """All values that are contained in given list."""
  name_in: [String!]
  """All values that are not contained in given list."""
  name_not_in: [String!]
  """All values containing the given string."""
  name_contains: String
  """All values not containing the given string."""
  name_not_contains: String
  """All values starting with the given string."""
  name_starts_with: String
  """All values not starting with the given string."""
  name_not_starts_with: String
  """All values ending with the given string."""
  name_ends_with: String
  """All values not ending with the given string"""
  name_not_ends_with: String
  picture: String
  """All values that are not equal to given value."""
  picture_not: String
  """All values that are contained in given list."""
  picture_in: [String!]
  """All values that are not contained in given list."""
  picture_not_in: [String!]
  """All values containing the given string."""
  picture_contains: String
  """All values not containing the given string."""
  picture_not_contains: String
  """All values starting with the given string."""
  picture_starts_with: String
  """All values not starting with the given string."""
  picture_not_starts_with: String
  """All values ending with the given string."""
  picture_ends_with: String
  """All values not ending with the given string"""
  picture_not_ends_with: String
  isActive: Boolean
  """All values that are not equal to given value."""
  isActive_not: Boolean
  kind: UserKind
  """All values that are not equal to given value."""
  kind_not: UserKind
  """All values that are contained in given list."""
  kind_in: [UserKind!]
  """All values that are not contained in given list."""
  kind_not_in: [UserKind!]
}

"""References User record uniquely"""
input UserWhereUniqueInput {
  id: ID
}

type Usps implements Node {
  """System stage field"""
  stage: Stage!
  """Get the document in other stages"""
  documentInStages(
    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false
    """Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree"""
    inheritLocale: Boolean! = false
  ): [Usps!]!
  """The unique identifier"""
  id: ID!
  """The time the document was created"""
  createdAt: DateTime!
  """The time the document was updated"""
  updatedAt: DateTime!
  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime
  identity: String!
  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
  uspsMultiple(
    where: PageLinkWhereInput
    orderBy: PageLinkOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `uspsMultiple` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): [PageLink!]!
  """List of Usps versions"""
  history(
    limit: Int! = 10
    skip: Int! = 0
    """This is optional and can be used to fetch the document version history for a specific stage instead of the current one"""
    stageOverride: Stage
  ): [Version!]!
}

input UspsConnectInput {
  """Document to connect"""
  where: UspsWhereUniqueInput!
  """Allow to specify document position in list of connected documents, will default to appending at end of list"""
  position: ConnectPositionInput
}

"""A connection to a list of items."""
type UspsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """A list of edges."""
  edges: [UspsEdge!]!
  aggregate: Aggregate!
}

input UspsCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  uspsMultiple: PageLinkCreateManyInlineInput
}

input UspsCreateManyInlineInput {
  """Create and connect multiple existing Usps documents"""
  create: [UspsCreateInput!]
  """Connect multiple existing Usps documents"""
  connect: [UspsWhereUniqueInput!]
}

input UspsCreateOneInlineInput {
  """Create and connect one Usps document"""
  create: UspsCreateInput
  """Connect one existing Usps document"""
  connect: UspsWhereUniqueInput
}

"""An edge in a connection."""
type UspsEdge {
  """The item at the end of the edge."""
  node: Usps!
  """A cursor for use in pagination."""
  cursor: String!
}

"""Identifies documents"""
input UspsManyWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [UspsWhereInput!]
  """Logical OR on all given filters."""
  OR: [UspsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UspsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  uspsMultiple_every: PageLinkWhereInput
  uspsMultiple_some: PageLinkWhereInput
  uspsMultiple_none: PageLinkWhereInput
}

enum UspsOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}

input UspsUpdateInput {
  identity: String
  uspsMultiple: PageLinkUpdateManyInlineInput
}

input UspsUpdateManyInlineInput {
  """Create and connect multiple Usps documents"""
  create: [UspsCreateInput!]
  """Connect multiple existing Usps documents"""
  connect: [UspsConnectInput!]
  """Override currently-connected documents with multiple existing Usps documents"""
  set: [UspsWhereUniqueInput!]
  """Update multiple Usps documents"""
  update: [UspsUpdateWithNestedWhereUniqueInput!]
  """Upsert multiple Usps documents"""
  upsert: [UspsUpsertWithNestedWhereUniqueInput!]
  """Disconnect multiple Usps documents"""
  disconnect: [UspsWhereUniqueInput!]
  """Delete multiple Usps documents"""
  delete: [UspsWhereUniqueInput!]
}

input UspsUpdateManyInput {
  """No fields in updateMany data input"""
  _: String
}

input UspsUpdateManyWithNestedWhereInput {
  """Document search"""
  where: UspsWhereInput!
  """Update many input"""
  data: UspsUpdateManyInput!
}

input UspsUpdateOneInlineInput {
  """Create and connect one Usps document"""
  create: UspsCreateInput
  """Update single Usps document"""
  update: UspsUpdateWithNestedWhereUniqueInput
  """Upsert single Usps document"""
  upsert: UspsUpsertWithNestedWhereUniqueInput
  """Connect existing Usps document"""
  connect: UspsWhereUniqueInput
  """Disconnect currently connected Usps document"""
  disconnect: Boolean
  """Delete currently connected Usps document"""
  delete: Boolean
}

input UspsUpdateWithNestedWhereUniqueInput {
  """Unique document search"""
  where: UspsWhereUniqueInput!
  """Document to update"""
  data: UspsUpdateInput!
}

input UspsUpsertInput {
  """Create document if it didn't exist"""
  create: UspsCreateInput!
  """Update document if it exists"""
  update: UspsUpdateInput!
}

input UspsUpsertWithNestedWhereUniqueInput {
  """Unique document search"""
  where: UspsWhereUniqueInput!
  """Upsert data"""
  data: UspsUpsertInput!
}

"""Identifies documents"""
input UspsWhereInput {
  """Contains search across all appropriate fields."""
  _search: String
  """Logical AND on all given filters."""
  AND: [UspsWhereInput!]
  """Logical OR on all given filters."""
  OR: [UspsWhereInput!]
  """Logical NOT on all given filters combined by AND."""
  NOT: [UspsWhereInput!]
  id: ID
  """All values that are not equal to given value."""
  id_not: ID
  """All values that are contained in given list."""
  id_in: [ID!]
  """All values that are not contained in given list."""
  id_not_in: [ID!]
  """All values containing the given string."""
  id_contains: ID
  """All values not containing the given string."""
  id_not_contains: ID
  """All values starting with the given string."""
  id_starts_with: ID
  """All values not starting with the given string."""
  id_not_starts_with: ID
  """All values ending with the given string."""
  id_ends_with: ID
  """All values not ending with the given string"""
  id_not_ends_with: ID
  createdAt: DateTime
  """All values that are not equal to given value."""
  createdAt_not: DateTime
  """All values that are contained in given list."""
  createdAt_in: [DateTime!]
  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]
  """All values less than the given value."""
  createdAt_lt: DateTime
  """All values less than or equal the given value."""
  createdAt_lte: DateTime
  """All values greater than the given value."""
  createdAt_gt: DateTime
  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime
  """All values that are not equal to given value."""
  updatedAt_not: DateTime
  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
  """All values less than the given value."""
  updatedAt_lt: DateTime
  """All values less than or equal the given value."""
  updatedAt_lte: DateTime
  """All values greater than the given value."""
  updatedAt_gt: DateTime
  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """All values that are not equal to given value."""
  publishedAt_not: DateTime
  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]
  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]
  """All values less than the given value."""
  publishedAt_lt: DateTime
  """All values less than or equal the given value."""
  publishedAt_lte: DateTime
  """All values greater than the given value."""
  publishedAt_gt: DateTime
  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime
  identity: String
  """All values that are not equal to given value."""
  identity_not: String
  """All values that are contained in given list."""
  identity_in: [String!]
  """All values that are not contained in given list."""
  identity_not_in: [String!]
  """All values containing the given string."""
  identity_contains: String
  """All values not containing the given string."""
  identity_not_contains: String
  """All values starting with the given string."""
  identity_starts_with: String
  """All values not starting with the given string."""
  identity_not_starts_with: String
  """All values ending with the given string."""
  identity_ends_with: String
  """All values not ending with the given string"""
  identity_not_ends_with: String
  createdBy: UserWhereInput
  updatedBy: UserWhereInput
  publishedBy: UserWhereInput
  uspsMultiple_every: PageLinkWhereInput
  uspsMultiple_some: PageLinkWhereInput
  uspsMultiple_none: PageLinkWhereInput
}

"""References Usps record uniquely"""
input UspsWhereUniqueInput {
  id: ID
  identity: String
}

type Version {
  id: ID!
  stage: Stage!
  revision: Int!
  createdAt: DateTime!
}

input VersionWhereInput {
  id: ID!
  stage: Stage!
  revision: Int!
}

enum _FilterKind {
  search
  AND
  OR
  NOT
  eq
  eq_not
  in
  not_in
  lt
  lte
  gt
  gte
  contains
  not_contains
  starts_with
  not_starts_with
  ends_with
  not_ends_with
  contains_all
  contains_some
  contains_none
  relational_single
  relational_every
  relational_some
  relational_none
}

enum _MutationInputFieldKind {
  scalar
  richText
  richTextWithEmbeds
  enum
  relation
  union
  virtual
}

enum _MutationKind {
  create
  publish
  unpublish
  update
  upsert
  delete
  updateMany
  publishMany
  unpublishMany
  deleteMany
}

enum _OrderDirection {
  asc
  desc
}

enum _RelationInputCardinality {
  one
  many
}

enum _RelationInputKind {
  create
  update
}

enum _RelationKind {
  regular
  union
}

enum _SystemDateTimeFieldVariation {
  base
  localization
  combined
}

type Mutation {
  addBundleProductsToCart(input: AddBundleProductsToCartInput): AddBundleProductsToCartOutput
  addConfigurableProductsToCart(input: AddConfigurableProductsToCartInput): AddConfigurableProductsToCartOutput
  addDownloadableProductsToCart(input: AddDownloadableProductsToCartInput): AddDownloadableProductsToCartOutput
  """Add any type of product to the cart"""
  addProductsToCart(cartId: String!, cartItems: [CartItemInput!]!): AddProductsToCartOutput
  """Add products to the specified compare list"""
  addProductsToCompareList(input: AddProductsToCompareListInput): CompareList
  """Adds one or more products to the specified wish list. This mutation supports all product types"""
  addProductsToWishlist(wishlistId: ID!, wishlistItems: [WishlistItemInput!]!): AddProductsToWishlistOutput
  addSimpleProductsToCart(input: AddSimpleProductsToCartInput): AddSimpleProductsToCartOutput
  addVirtualProductsToCart(input: AddVirtualProductsToCartInput): AddVirtualProductsToCartOutput
  applyCouponToCart(input: ApplyCouponToCartInput): ApplyCouponToCartOutput
  """Assign the specified compare list to the logged in customer"""
  assignCompareListToCustomer(uid: ID!): AssignCompareListToCustomerOutput
  """Changes the password for the logged-in customer"""
  changeCustomerPassword(currentPassword: String!, newPassword: String!): Customer
  """Creates Client Token for Braintree Javascript SDK initialization."""
  createBraintreeClientToken: String!
  """Creates a new compare list. The compare list is saved for logged in customers"""
  createCompareList(input: CreateCompareListInput): CompareList
  """Create customer account"""
  createCustomer(input: CustomerInput!): CustomerOutput
  """Create customer address"""
  createCustomerAddress(input: CustomerAddressInput!): CustomerAddress
  """Create customer account"""
  createCustomerV2(input: CustomerCreateInput!): CustomerOutput
  """Creates an empty shopping cart for a guest or logged in user"""
  createEmptyCart(input: createEmptyCartInput): String
  """Creates a Klarna Payments Session."""
  createKlarnaPaymentsSession(input: createKlarnaPaymentsSessionInput): createKlarnaPaymentsSessionOutput
  createMollieTransaction(input: MollieTransactionInput): MollieTransactionOutput @deprecated(reason: "Using the Order.mollie_redirect_url attribuut")
  """Initiates a transaction and receives a token. Use this mutation for Payflow Pro and Payments Pro payment methods"""
  createPayflowProToken(input: PayflowProTokenInput!): CreatePayflowProTokenOutput
  """Initiates an Express Checkout transaction and receives a token. Use this mutation for Express Checkout and Payments Standard payment methods."""
  createPaypalExpressToken(input: PaypalExpressTokenInput!): PaypalExpressTokenOutput
  """Creates a product review for the specified SKU"""
  createProductReview(input: CreateProductReviewInput!): CreateProductReviewOutput!
  """Delete the specified compare list"""
  deleteCompareList(uid: ID!): DeleteCompareListOutput
  """Delete customer address"""
  deleteCustomerAddress(id: Int!): Boolean
  """Delete a customer payment token"""
  deletePaymentToken(public_hash: String!): DeletePaymentTokenOutput
  """Retrieve the customer token"""
  generateCustomerToken(email: String!, password: String!): CustomerToken
  """Request a customer token so that an administrator can perform remote shopping assistance"""
  generateCustomerTokenAsAdmin(input: GenerateCustomerTokenAsAdminInput!): GenerateCustomerTokenAsAdminOutput
  """Handles payment response and saves payment in Quote. Use this mutations for Payflow Pro and Payments Pro payment methods."""
  handlePayflowProResponse(input: PayflowProResponseInput!): PayflowProResponseOutput
  """Merges the source cart into the destination cart"""
  mergeCarts(source_cart_id: String!, destination_cart_id: String): Cart!
  mollieProcessTransaction(input: MollieProcessTransactionInput): MollieProcessTransactionOutput
  mollieRestoreCart(input: MollieResetCartInput): MollieResetCartOutput
  placeOrder(input: PlaceOrderInput): PlaceOrderOutput
  removeCouponFromCart(input: RemoveCouponFromCartInput): RemoveCouponFromCartOutput
  removeItemFromCart(input: RemoveItemFromCartInput): RemoveItemFromCartOutput
  """Remove products from the specified compare list"""
  removeProductsFromCompareList(input: RemoveProductsFromCompareListInput): CompareList
  """Removes one or more products from the specified wish list"""
  removeProductsFromWishlist(wishlistId: ID!, wishlistItemsIds: [ID!]!): RemoveProductsFromWishlistOutput
  """Adds all products from a customer's previous order to the cart."""
  reorderItems(orderNumber: String!): ReorderItemsOutput
  """Request an email with a reset password token for the registered customer identified by the specified email."""
  requestPasswordResetEmail(email: String!): Boolean
  """Reset a customer's password using the reset password token that the customer received in an email after requesting it using requestPasswordResetEmail."""
  resetPassword(email: String!, resetPasswordToken: String!, newPassword: String!): Boolean
  """Revoke the customer token"""
  revokeCustomerToken: RevokeCustomerTokenOutput
  """Recommends Product by Sending Single/Multiple Email"""
  sendEmailToFriend(input: SendEmailToFriendInput): SendEmailToFriendOutput
  setBillingAddressOnCart(input: SetBillingAddressOnCartInput): SetBillingAddressOnCartOutput
  setGuestEmailOnCart(input: SetGuestEmailOnCartInput): SetGuestEmailOnCartOutput
  setPaymentMethodAndPlaceOrder(input: SetPaymentMethodAndPlaceOrderInput): PlaceOrderOutput @deprecated(reason: "Should use setPaymentMethodOnCart and placeOrder mutations in single request.")
  setPaymentMethodOnCart(input: SetPaymentMethodOnCartInput): SetPaymentMethodOnCartOutput
  setShippingAddressesOnCart(input: SetShippingAddressesOnCartInput): SetShippingAddressesOnCartOutput
  setShippingMethodsOnCart(input: SetShippingMethodsOnCartInput): SetShippingMethodsOnCartOutput
  """Subscribes the specified email to a newsletter"""
  subscribeEmailToNewsletter(email: String!): SubscribeEmailToNewsletterOutput
  updateCartItems(input: UpdateCartItemsInput): UpdateCartItemsOutput
  """Deprecated. Use UpdateCustomerV2 instead."""
  updateCustomer(input: CustomerInput!): CustomerOutput
  """Update customer address"""
  updateCustomerAddress(id: Int!, input: CustomerAddressInput): CustomerAddress
  updateCustomerEmail(email: String!, password: String!): CustomerOutput
  """Update the customer's personal information"""
  updateCustomerV2(input: CustomerUpdateInput!): CustomerOutput
  """Updates one or more products in the specified wish list"""
  updateProductsInWishlist(wishlistId: ID!, wishlistItems: [WishlistItemUpdateInput!]!): UpdateProductsInWishlistOutput
}

"""The type contains information about a store config"""
type StoreConfig {
  """Footer Miscellaneous HTML"""
  absolute_footer: String
  """Indicates whether guest users can write product reviews. Possible values: 1 (Yes) and 0 (No)"""
  allow_guests_to_write_product_reviews: String
  """The value of the Allow Gift Messages for Order Items option"""
  allow_items: String
  """The value of the Allow Gift Messages on Order Level option"""
  allow_order: String
  """Enable autocomplete on login and forgot password forms"""
  autocomplete_on_storefront: Boolean
  """Base currency code"""
  base_currency_code: String
  """Base link URL for the store"""
  base_link_url: String
  """Base media URL for the store"""
  base_media_url: String
  """Base static URL for the store"""
  base_static_url: String
  """Base URL for the store"""
  base_url: String
  """Braintree cc vault status."""
  braintree_cc_vault_active: String
  """Default Sort By."""
  catalog_default_sort_by: String
  """Corresponds to the 'Display Prices In Product Lists' field. It indicates how FPT information is displayed on category pages"""
  category_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings
  """Category URL Suffix."""
  category_url_suffix: String
  """CMS Home Page"""
  cms_home_page: String
  """CMS No Cookies Page"""
  cms_no_cookies: String
  """CMS No Route Page"""
  cms_no_route: String
  """A code assigned to the store to identify it"""
  code: String @deprecated(reason: "Use `store_code` instead.")
  """The configuration setting determines which thumbnail should be used in the cart for configurable products."""
  configurable_thumbnail_source: String
  """Copyright"""
  copyright: String
  """Default Meta Description"""
  default_description: String
  """Default display currency code"""
  default_display_currency_code: String
  """Default Meta Keywords"""
  default_keywords: String
  """Default Page Title"""
  default_title: String
  """Display Demo Store Notice"""
  demonotice: Int
  """Default Web URL"""
  front: String
  """Products per Page on Grid Default Value."""
  grid_per_page: Int
  """Products per Page on Grid Allowed Values."""
  grid_per_page_values: String
  """Scripts and Style Sheets"""
  head_includes: String
  """Favicon Icon"""
  head_shortcut_icon: String
  """Logo Image"""
  header_logo_src: String
  """The ID number assigned to the store"""
  id: Int @deprecated(reason: "Use `store_code` instead.")
  """Indicates whether the store view has been designated as the default within the store group"""
  is_default_store: Boolean
  """Indicates whether the store group has been designated as the default within the website"""
  is_default_store_group: Boolean
  """List Mode."""
  list_mode: String
  """Products per Page on List Default Value."""
  list_per_page: Int
  """Products per Page on List Allowed Values."""
  list_per_page_values: String
  """Store locale"""
  locale: String
  """Logo Image Alt"""
  logo_alt: String
  """Logo Attribute Height"""
  logo_height: Int
  """Logo Attribute Width"""
  logo_width: Int
  """Indicates whether wishlists are enabled (1) or disabled (0)"""
  magento_wishlist_general_is_enabled: String
  """The minimum number of characters required for a valid password."""
  minimum_password_length: String
  """Default No-route URL"""
  no_route: String
  """Payflow Pro vault status."""
  payment_payflowpro_cc_vault_active: String
  """Corresponds to the 'Display Prices On Product View Page' field. It indicates how FPT information is displayed on product pages"""
  product_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings
  """Indicates whether product reviews are enabled. Possible values: 1 (Yes) and 0 (No)"""
  product_reviews_enabled: String
  """Product URL Suffix."""
  product_url_suffix: String
  """The number of different character classes required in a password (lowercase, uppercase, digits, special characters)."""
  required_character_classes_number: String
  """The ID of the root category"""
  root_category_id: Int @deprecated(reason: "Use `root_category_uid` instead")
  """The unique ID for a `CategoryInterface` object."""
  root_category_uid: ID
  """Corresponds to the 'Display Prices In Sales Modules' field. It indicates how FPT information is displayed on cart, checkout, and order pages"""
  sales_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings
  """Secure base link URL for the store"""
  secure_base_link_url: String
  """Secure base media URL for the store"""
  secure_base_media_url: String
  """Secure base static URL for the store"""
  secure_base_static_url: String
  """Secure base URL for the store"""
  secure_base_url: String
  """Email to a Friend configuration."""
  send_friend: SendFriendConfiguration
  """Show Breadcrumbs for CMS Pages"""
  show_cms_breadcrumbs: Int
  """The unique ID of the store view. In the Admin, this is called the Store View Code. When making a GraphQL call, assign this value to the `Store` header to provide the scope"""
  store_code: ID
  """The unique ID assigned to the store group. In the Admin, this is called the Store Name"""
  store_group_code: ID
  """The label assigned to the store group"""
  store_group_name: String
  """The label assigned to the store view"""
  store_name: String
  """The store view sort order"""
  store_sort_order: Int
  """Timezone of the store"""
  timezone: String
  """Page Title Prefix"""
  title_prefix: String
  """Page Title Separator."""
  title_separator: String
  """Page Title Suffix"""
  title_suffix: String
  """The configuration determines if the store code should be used in the URL"""
  use_store_in_url: Boolean
  """The unique ID for the website"""
  website_code: ID
  """The ID number assigned to the website store"""
  website_id: Int @deprecated(reason: "The field should not be used on the storefront")
  """The label assigned to the website"""
  website_name: String
  """The unit of weight"""
  weight_unit: String
  """Welcome Text"""
  welcome: String
}

"""This enumeration display settings for the fixed product tax"""
enum FixedProductTaxDisplaySettings {
  """The displayed price includes the FPT amount without displaying the ProductPrice.fixed_product_taxes values. This value corresponds to 'Including FPT only'"""
  INCLUDE_FPT_WITHOUT_DETAILS
  """The displayed price includes the FPT amount while displaying the values of ProductPrice.fixed_product_taxes separately. This value corresponds to 'Including FPT and FPT description'"""
  INCLUDE_FPT_WITH_DETAILS
  """The displayed price does not include the FPT amount. The values of ProductPrice.fixed_product_taxes and the price including the FPT are displayed separately. This value corresponds to 'Excluding FPT, Including FPT description and final price'"""
  EXCLUDE_FPT_AND_INCLUDE_WITH_DETAILS
  """The displayed price does not include the FPT amount. The values from ProductPrice.fixed_product_taxes are not displayed. This value corresponds to 'Excluding FPT'"""
  EXCLUDE_FPT_WITHOUT_DETAILS
  """The FPT feature is not enabled. You can omit  ProductPrice.fixed_product_taxes from your query"""
  FPT_DISABLED
}

type SendFriendConfiguration {
  """Indicates whether the Email to a Friend feature is enabled."""
  enabled_for_customers: Boolean!
  """Indicates whether the Email to a Friend feature is enabled for guests."""
  enabled_for_guests: Boolean!
}

type Cart {
  """An array of coupons that have been applied to the cart"""
  applied_coupon: AppliedCoupon @deprecated(reason: "Use applied_coupons instead")
  """An array of `AppliedCoupon` objects. Each object contains the `code` text attribute, which specifies the coupon code"""
  applied_coupons: [AppliedCoupon]
  """Available payment methods"""
  available_payment_methods: [AvailablePaymentMethod]
  billing_address: BillingCartAddress
  email: String
  """The entered gift message for the cart"""
  gift_message: GiftMessage
  """The unique ID for a `Cart` object"""
  id: ID!
  is_virtual: Boolean!
  items: [CartItemInterface]
  """Available issuers for the selected payment method"""
  mollie_available_issuers: [MollieIssuer]
  prices: CartPrices
  selected_payment_method: SelectedPaymentMethod
  shipping_addresses: [ShippingCartAddress]!
  total_quantity: Float!
}

type AppliedCoupon {
  code: String!
}

type AvailablePaymentMethod {
  """The payment method code"""
  code: String!
  """Available issuers for this payment method"""
  mollie_available_issuers: [MollieIssuer]
  """Retrieve meta information for this payment method (image)"""
  mollie_meta: MolliePaymentMethodMeta!
  """The payment method title."""
  title: String!
}

type MollieIssuer {
  code: String
  image: String!
  name: String
  svg: String!
}

type MolliePaymentMethodMeta {
  image: String
}

type BillingCartAddress implements CartAddressInterface {
  city: String!
  company: String
  country: CartAddressCountry!
  customer_notes: String @deprecated(reason: "The field is used only in shipping address")
  firstname: String!
  lastname: String!
  postcode: String
  region: CartAddressRegion
  street: [String]!
  telephone: String!
}

interface CartAddressInterface {
  city: String!
  company: String
  country: CartAddressCountry!
  firstname: String!
  lastname: String!
  postcode: String
  region: CartAddressRegion
  street: [String]!
  telephone: String!
}

type CartAddressCountry {
  code: String!
  label: String!
}

type CartAddressRegion {
  code: String
  label: String
  region_id: Int
}

"""Contains the text of a gift message, its sender, and recipient"""
type GiftMessage {
  """Sender name"""
  from: String!
  """Gift message text"""
  message: String!
  """Recipient name"""
  to: String!
}

interface CartItemInterface {
  id: String! @deprecated(reason: "Use `uid` instead")
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

type CartItemPrices {
  """An array of discounts to be applied to the cart item"""
  discounts: [Discount]
  price: Money!
  row_total: Money!
  row_total_including_tax: Money!
  """The total of all discounts applied to the item"""
  total_item_discount: Money
}

"""Defines an individual discount. A discount can be applied to the cart as a whole or to an item."""
type Discount {
  """The amount of the discount"""
  amount: Money!
  """A description of the discount"""
  label: String!
}

"""A Money object defines a monetary value, including a numeric value and a currency code."""
type Money {
  """A three-letter currency code, such as USD or EUR"""
  currency: CurrencyEnum
  """A number expressing a monetary value"""
  value: Float
}

"""The list of available currency codes"""
enum CurrencyEnum {
  AFN
  ALL
  AZN
  DZD
  AOA
  ARS
  AMD
  AWG
  AUD
  BSD
  BHD
  BDT
  BBD
  BYN
  BZD
  BMD
  BTN
  BOB
  BAM
  BWP
  BRL
  GBP
  BND
  BGN
  BUK
  BIF
  KHR
  CAD
  CVE
  CZK
  KYD
  GQE
  CLP
  CNY
  COP
  KMF
  CDF
  CRC
  HRK
  CUP
  DKK
  DJF
  DOP
  XCD
  EGP
  SVC
  ERN
  EEK
  ETB
  EUR
  FKP
  FJD
  GMD
  GEK
  GEL
  GHS
  GIP
  GTQ
  GNF
  GYD
  HTG
  HNL
  HKD
  HUF
  ISK
  INR
  IDR
  IRR
  IQD
  ILS
  JMD
  JPY
  JOD
  KZT
  KES
  KWD
  KGS
  LAK
  LVL
  LBP
  LSL
  LRD
  LYD
  LTL
  MOP
  MKD
  MGA
  MWK
  MYR
  MVR
  LSM
  MRO
  MUR
  MXN
  MDL
  MNT
  MAD
  MZN
  MMK
  NAD
  NPR
  ANG
  YTL
  NZD
  NIC
  NGN
  KPW
  NOK
  OMR
  PKR
  PAB
  PGK
  PYG
  PEN
  PHP
  PLN
  QAR
  RHD
  RON
  RUB
  RWF
  SHP
  STD
  SAR
  RSD
  SCR
  SLL
  SGD
  SKK
  SBD
  SOS
  ZAR
  KRW
  LKR
  SDG
  SRD
  SZL
  SEK
  CHF
  SYP
  TWD
  TJS
  TZS
  THB
  TOP
  TTD
  TND
  TMM
  USD
  UGX
  UAH
  AED
  UYU
  UZS
  VUV
  VEB
  VEF
  VND
  CHE
  CHW
  XOF
  WST
  YER
  ZMK
  ZWD
  TRY
  AZM
  ROL
  TRL
  XPF
}

"""The ProductInterface contains attributes that are common to all types of products. Note that descriptions may not be available for custom and EAV attributes."""
interface ProductInterface {
  activity: String
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  backorder_delivery_date: String
  backorder_delivery_period: Int
  """Relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled"""
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String
  climate: String
  collar: String
  color: Int
  colors: String
  compatible_phones: Int
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """Detailed information about the product. The value can include simple HTML tags."""
  description: ComplexTextValue
  dominant_color: Int
  eco_collection: Int
  erin_recommends: Int
  features_bags: String
  format: Int
  gender: String
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  in_stock_delivery_period: Int
  """A number representing the product's manufacturer."""
  manufacturer: Int
  material: Int
  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")
  """A brief overview of the product for search results listings, maximum 255 characters."""
  meta_description: String
  """A comma-separated list of keywords that are visible only to search engines."""
  meta_keyword: String
  """A string that is displayed in the title bar and tab of the browser and in search results lists."""
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int
  """The beginning date for new product listings, and determines if the product is featured as a new product."""
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """If the product has multiple options, determines where they appear on the product page."""
  options_container: String
  pattern: String
  performance_fabric: Int
  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")
  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!
  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  print_art: String
  print_holiday: String
  print_labels: String
  print_landmarks: String
  print_landscape: String
  print_mood: String
  print_pattern_swatch: Int
  print_type: String
  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """Related Products"""
  related_products: [ProductInterface]
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20
    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int
  """A number or code assigned to a product to identify the product, options, price, and manufacturer."""
  sku: String
  sleeve: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date that a product has a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String
  style_bags: String
  style_bottom: String
  style_general: String
  """The file name of a swatch image"""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """The price when tier pricing is in effect and the items purchased threshold has been reached."""
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")
  """One of simple, virtual, bundle, downloadable, grouped, or configurable."""
  type_id: String @deprecated(reason: "Use __typename instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

"""CategoryInterface contains the full set of attributes that can be returned in a category search."""
interface CategoryInterface {
  available_sort_by: [String]
  """Breadcrumbs, parent categories info."""
  breadcrumbs: [Breadcrumb]
  """Relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Categories' is enabled"""
  canonical_url: String
  children_count: String
  """Category CMS Block."""
  cms_block: CmsBlock
  """Timestamp indicating when the category was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  custom_layout_update_file: String
  """The attribute to use for sorting."""
  default_sort_by: String
  """An optional description of the category."""
  description: String
  display_mode: String
  filter_price_range: Float
  """An ID that uniquely identifies the category."""
  id: Int @deprecated(reason: "Use the `uid` argument instead.")
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int
  """Indicates the depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  """The display name of the category."""
  name: String
  """Category Path."""
  path: String
  """Category path in store."""
  path_in_store: String
  """The position of the category relative to other categories at the same level in tree."""
  position: Int
  """The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not."""
  product_count: Int
  """The list of products assigned to the category."""
  products(
    """Specifies the maximum number of results to return at once. This attribute is optional."""
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
    """Specifies which attributes to sort on, and whether to return the results in ascending or descending order."""
    sort: ProductAttributeSortInput
  ): CategoryProducts
  """The unique ID for a `CategoryInterface` object."""
  uid: ID!
  """Timestamp indicating when the category was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """The url key assigned to the category."""
  url_key: String
  """The url path assigned to the category."""
  url_path: String
  """The part of the category URL that is appended after the url key"""
  url_suffix: String
}

"""Breadcrumb item."""
type Breadcrumb {
  """Category ID."""
  category_id: Int @deprecated(reason: "Use the `category_uid` argument instead.")
  """Category level."""
  category_level: Int
  """Category name."""
  category_name: String
  """The unique ID for a `Breadcrumb` object."""
  category_uid: ID!
  """Category URL key."""
  category_url_key: String
  """Category URL path."""
  category_url_path: String
}

"""CMS block defines all CMS block information"""
type CmsBlock {
  """CMS block content"""
  content: String
  """CMS block identifier"""
  identifier: String
  """CMS block title"""
  title: String
}

"""ProductAttributeSortInput specifies the attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order. It's possible to sort products using searchable attributes with enabled 'Use in Filter Options' option"""
input ProductAttributeSortInput {
  """Attribute label: Product Name"""
  name: SortEnum
  """Sort by the position assigned to each product."""
  position: SortEnum
  """Attribute label: Price"""
  price: SortEnum
  """Sort by the search relevance score (default)."""
  relevance: SortEnum
}

"""This enumeration indicates whether to return results in ascending or descending order"""
enum SortEnum {
  ASC
  DESC
}

"""The category products object returned in the Category query."""
type CategoryProducts {
  """An array of products that are assigned to the category."""
  items: [ProductInterface]
  """An object that includes the page_info and currentPage values specified in the query."""
  page_info: SearchResultPageInfo
  """The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not."""
  total_count: Int
}

"""SearchResultPageInfo provides navigation for the query response"""
type SearchResultPageInfo {
  """Specifies which page of results to return"""
  current_page: Int
  """Specifies the maximum number of items to return"""
  page_size: Int
  """Total pages"""
  total_pages: Int
}

type ComplexTextValue {
  """HTML format"""
  html: String!
}

"""Product image information. Contains the image URL and label."""
type ProductImage implements MediaGalleryInterface {
  """Whether the image is hidden from view."""
  disabled: Boolean
  """The label of the product image or video."""
  label: String
  """The media item's position after it has been sorted."""
  position: Int
  """The URL of the product image or video."""
  url: String
}

"""Contains basic information about a product image or video."""
interface MediaGalleryInterface {
  """Whether the image is hidden from view."""
  disabled: Boolean
  """The label of the product image or video."""
  label: String
  """The media item's position after it has been sorted."""
  position: Int
  """The URL of the product image or video."""
  url: String
}

"""MediaGalleryEntry defines characteristics about images and videos associated with a specific product."""
type MediaGalleryEntry {
  """Contains a ProductMediaGalleryEntriesContent object."""
  content: ProductMediaGalleryEntriesContent
  """Whether the image is hidden from view."""
  disabled: Boolean
  """The path of the image on the server."""
  file: String
  """The identifier assigned to the object."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  """The alt text displayed on the UI when the user points to the image."""
  label: String
  """image or video."""
  media_type: String
  """The media item's position after it has been sorted."""
  position: Int
  """Array of image types. It can have the following values: image, small_image, thumbnail."""
  types: [String]
  """The unique ID for a `MediaGalleryEntry` object."""
  uid: ID!
  """Contains a ProductMediaGalleryEntriesVideoContent object."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

"""ProductMediaGalleryEntriesContent contains an image in base64 format and basic information about the image."""
type ProductMediaGalleryEntriesContent {
  """The image in base64 format."""
  base64_encoded_data: String
  """The file name of the image."""
  name: String
  """The MIME type of the file, such as image/png."""
  type: String
}

"""ProductMediaGalleryEntriesVideoContent contains a link to a video file and basic information about the video."""
type ProductMediaGalleryEntriesVideoContent {
  """Must be external-video."""
  media_type: String
  """A description of the video."""
  video_description: String
  """Optional data about the video."""
  video_metadata: String
  """Describes the video source."""
  video_provider: String
  """The title of the video."""
  video_title: String
  """The URL to the video."""
  video_url: String
}

"""ProductPrices is deprecated, replaced by PriceRange. The ProductPrices object contains the regular price of an item, as well as its minimum and maximum prices. Only composite products, which include bundle, configurable, and grouped products, can contain a minimum and maximum price."""
type ProductPrices {
  """The highest possible final price for all the options defined within a composite product. If you are specifying a price range, this would be the to value."""
  maximalPrice: Price @deprecated(reason: "Use PriceRange.maximum_price.")
  """The lowest possible final price for all the options defined within a composite product. If you are specifying a price range, this would be the from value."""
  minimalPrice: Price @deprecated(reason: "Use PriceRange.minimum_price.")
  """The base price of a product."""
  regularPrice: Price @deprecated(reason: "Use regular_price from PriceRange.minimum_price or PriceRange.maximum_price.")
}

"""Price is deprecated, replaced by ProductPrice. The Price object defines the price of a product as well as any tax-related adjustments."""
type Price {
  """An array that provides information about tax, weee, or weee_tax adjustments."""
  adjustments: [PriceAdjustment] @deprecated(reason: "Price is deprecated, use ProductPrice.")
  """The price of a product plus a three-letter currency code."""
  amount: Money @deprecated(reason: "Price is deprecated, use ProductPrice.")
}

"""PriceAdjustment is deprecated. Taxes will be included or excluded in the price. The PricedAdjustment object defines the amount of money to apply as an adjustment, the type of adjustment to apply, and whether the item is included or excluded from the adjustment."""
type PriceAdjustment {
  """The amount of the price adjustment and its currency code."""
  amount: Money
  """Indicates whether the adjustment involves tax, weee, or weee_tax."""
  code: PriceAdjustmentCodesEnum @deprecated(reason: "PriceAdjustment is deprecated.")
  """Indicates whether the entity described by the code attribute is included or excluded from the adjustment."""
  description: PriceAdjustmentDescriptionEnum @deprecated(reason: "PriceAdjustment is deprecated.")
}

"""PriceAdjustment.code is deprecated. This enumeration contains values defined in modules other than the Catalog module."""
enum PriceAdjustmentCodesEnum {
  TAX
  WEEE
  WEEE_TAX
}

"""PriceAdjustmentDescriptionEnum is deprecated. This enumeration states whether a price adjustment is included or excluded."""
enum PriceAdjustmentDescriptionEnum {
  INCLUDED
  EXCLUDED
}

"""Price range for a product. If the product has a single price, the minimum and maximum price will be the same."""
type PriceRange {
  """The highest possible price for the product."""
  maximum_price: ProductPrice
  """The lowest possible price for the product."""
  minimum_price: ProductPrice!
}

"""Represents a product price."""
type ProductPrice {
  """The price discount. Represents the difference between the regular and final price."""
  discount: ProductDiscount
  """The final price of the product after discounts applied."""
  final_price: Money!
  """The multiple FPTs that can be applied to a product price."""
  fixed_product_taxes: [FixedProductTax]
  """The regular price of the product."""
  regular_price: Money!
}

"""A discount applied to a product price."""
type ProductDiscount {
  """The actual value of the discount."""
  amount_off: Float
  """The discount expressed a percentage."""
  percent_off: Float
}

"""A single FPT that can be applied to a product price."""
type FixedProductTax {
  """Amount of the FPT as a money object."""
  amount: Money
  """The label assigned to the FPT to be displayed on the frontend."""
  label: String
}

"""A price based on the quantity purchased."""
type TierPrice {
  """The price discount that this tier represents."""
  discount: ProductDiscount
  final_price: Money
  """The minimum number of items that must be purchased to qualify for this price tier."""
  quantity: Float
}

"""ProductLinks contains information about linked products, including the link type and product type of each item."""
interface ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String
  """The SKU of the linked product."""
  linked_product_sku: String
  """The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable)."""
  linked_product_type: String
  """The position within the list of product links."""
  position: Int
  """The identifier of the linked product."""
  sku: String
}

type ProductReviews {
  """An array of product reviews."""
  items: [ProductReview]!
  """Metadata for pagination rendering."""
  page_info: SearchResultPageInfo!
}

"""Details of a product review"""
type ProductReview {
  """The average rating for product review."""
  average_rating: Float!
  """Date indicating when the review was created."""
  created_at: String!
  """The customer's nickname. Defaults to the customer name, if logged in"""
  nickname: String!
  """Contains details about the reviewed product"""
  product: ProductInterface!
  """An array of ratings by rating category, such as quality, price, and value"""
  ratings_breakdown: [ProductReviewRating]!
  """The summary (title) of the review"""
  summary: String!
  """The review text."""
  text: String!
}

type ProductReviewRating {
  """The label assigned to an aspect of a product that is being rated, such as quality or price"""
  name: String!
  """The rating value given by customer. By default, possible values range from 1 to 5."""
  value: String!
}

"""This enumeration states whether a product stock status is in stock or out of stock"""
enum ProductStockStatus {
  IN_STOCK
  OUT_OF_STOCK
}

"""ProductTierPrices is deprecated and has been replaced by TierPrice. The ProductTierPrices object defines a tier price, which is a quantity discount offered to a specific customer group."""
type ProductTierPrices {
  """The ID of the customer group."""
  customer_group_id: String @deprecated(reason: "customer_group_id is not relevant for storefront.")
  """The percentage discount of the item."""
  percentage_value: Float @deprecated(reason: "ProductTierPrices is deprecated. Use TierPrice.discount.")
  """The number of items that must be purchased to qualify for tier pricing."""
  qty: Float @deprecated(reason: "ProductTierPrices is deprecated, use TierPrice.quantity.")
  """The price of the fixed price item."""
  value: Float @deprecated(reason: "ProductTierPrices is deprecated. Use TierPrice.final_price")
  """The ID assigned to the website."""
  website_id: Float @deprecated(reason: "website_id is not relevant for storefront.")
}

"""The object contains URL rewrite details"""
type UrlRewrite {
  """Request parameters"""
  parameters: [HttpQueryParameter]
  """Request URL"""
  url: String
}

"""The object details of target path parameters"""
type HttpQueryParameter {
  """Parameter name"""
  name: String
  """Parameter value"""
  value: String
}

"""Website is deprecated because it is should not be used on storefront. The type contains information about a website"""
type Website {
  """A code assigned to the website to identify it"""
  code: String @deprecated(reason: "The field should not be used on the storefront.")
  """The default group ID that the website has"""
  default_group_id: String @deprecated(reason: "The field should not be used on the storefront.")
  """The ID number assigned to the website"""
  id: Int @deprecated(reason: "The field should not be used on the storefront.")
  """Specifies if this is the default website"""
  is_default: Boolean @deprecated(reason: "The field should not be used on the storefront.")
  """The website name. Websites use this name to identify it easier."""
  name: String @deprecated(reason: "The field should not be used on the storefront.")
  """The attribute to use for sorting websites"""
  sort_order: Int @deprecated(reason: "The field should not be used on the storefront.")
}

type CartPrices {
  applied_taxes: [CartTaxItem]
  discount: CartDiscount @deprecated(reason: "Use discounts instead ")
  """An array of applied discounts"""
  discounts: [Discount]
  grand_total: Money
  subtotal_excluding_tax: Money
  subtotal_including_tax: Money
  subtotal_with_discount_excluding_tax: Money
}

type CartTaxItem {
  amount: Money!
  label: String!
}

type CartDiscount {
  amount: Money!
  label: [String]!
}

type SelectedPaymentMethod {
  """The payment method code"""
  code: String!
  """Retrieve meta information for this payment method (image)"""
  mollie_meta: MolliePaymentMethodMeta!
  """The purchase order number."""
  purchase_order_number: String
  """The payment method title."""
  title: String!
}

type ShippingCartAddress implements CartAddressInterface {
  available_shipping_methods: [AvailableShippingMethod]
  cart_items: [CartItemQuantity] @deprecated(reason: "`cart_items_v2` should be used instead")
  cart_items_v2: [CartItemInterface]
  city: String!
  company: String
  country: CartAddressCountry!
  customer_notes: String
  firstname: String!
  items_weight: Float @deprecated(reason: "This information shoud not be exposed on frontend")
  lastname: String!
  pickup_location_code: String
  postcode: String
  region: CartAddressRegion
  selected_shipping_method: SelectedShippingMethod
  street: [String]!
  telephone: String!
}

type AvailableShippingMethod {
  amount: Money!
  available: Boolean!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront")
  carrier_code: String!
  carrier_title: String!
  error_message: String
  """Could be null if method is not available"""
  method_code: String
  """Could be null if method is not available"""
  method_title: String
  price_excl_tax: Money!
  price_incl_tax: Money!
}

"""Deprecated: `cart_items` field of `ShippingCartAddress` returns now  `CartItemInterface` instead of `CartItemQuantity`"""
type CartItemQuantity {
  cart_item_id: Int! @deprecated(reason: "`cart_items` field of `ShippingCartAddress` returns now `CartItemInterface` instead of `CartItemQuantity`")
  quantity: Float! @deprecated(reason: "`cart_items` field of `ShippingCartAddress` returns now `CartItemInterface` instead of `CartItemQuantity`")
}

type SelectedShippingMethod {
  amount: Money!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront")
  carrier_code: String!
  carrier_title: String!
  method_code: String!
  method_title: String!
}

"""CategoryFilterInput defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for."""
input CategoryFilterInput {
  """Filter by the unique category ID for a `CategoryInterface` object."""
  category_uid: FilterEqualTypeInput
  """Deprecated: use 'category_uid' to filter uniquely identifiers of categories."""
  ids: FilterEqualTypeInput
  """Filter by the display name of the category."""
  name: FilterMatchTypeInput
  """Filter by the unique parent category ID for a `CategoryInterface` object."""
  parent_category_uid: FilterEqualTypeInput
  """Filter by the unique parent category ID for a `CategoryInterface` object."""
  parent_id: FilterEqualTypeInput
  """Filter by the part of the URL that identifies the category."""
  url_key: FilterEqualTypeInput
  """Filter by the URL path for the category."""
  url_path: FilterEqualTypeInput
}

"""Defines a filter that matches the input exactly."""
input FilterEqualTypeInput {
  """A string to filter on"""
  eq: String
  """An array of values to filter on"""
  in: [String]
}

"""Defines a filter that performs a fuzzy search."""
input FilterMatchTypeInput {
  """One or more words to filter on"""
  match: String
}

"""A collection of CategoryTree objects and pagination information."""
type CategoryResult {
  """A list of categories that match the filter criteria."""
  items: [CategoryTree]
  """An object that includes the page_info and currentPage values specified in the query."""
  page_info: SearchResultPageInfo
  """The total number of categories that match the criteria."""
  total_count: Int
}

"""Category Tree implementation."""
type CategoryTree implements CategoryInterface {
  available_sort_by: [String]
  """Breadcrumbs, parent categories info."""
  breadcrumbs: [Breadcrumb]
  """Relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Categories' is enabled"""
  canonical_url: String
  """Child categories tree."""
  children: [CategoryTree]
  children_count: String
  """Category CMS Block."""
  cms_block: CmsBlock
  """Timestamp indicating when the category was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  custom_layout_update_file: String
  """The attribute to use for sorting."""
  default_sort_by: String
  """An optional description of the category."""
  description: String
  display_mode: String
  filter_price_range: Float
  """An ID that uniquely identifies the category."""
  id: Int @deprecated(reason: "Use the `uid` argument instead.")
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int
  """Indicates the depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  """The display name of the category."""
  name: String
  """Category Path."""
  path: String
  """Category path in store."""
  path_in_store: String
  """The position of the category relative to other categories at the same level in tree."""
  position: Int
  """The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not."""
  product_count: Int
  """The list of products assigned to the category."""
  products(
    """Specifies the maximum number of results to return at once. This attribute is optional."""
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
    """Specifies which attributes to sort on, and whether to return the results in ascending or descending order."""
    sort: ProductAttributeSortInput
  ): CategoryProducts
  """The unique ID for a `CategoryInterface` object."""
  uid: ID!
  """Timestamp indicating when the category was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """The url key assigned to the category."""
  url_key: String
  """The url path assigned to the category."""
  url_path: String
  """The part of the category URL that is appended after the url key"""
  url_suffix: String
}

"""Defines all Checkout Agreement information"""
type CheckoutAgreement {
  """Checkout Agreement identifier"""
  agreement_id: Int!
  """Checkout Agreement checkbox text"""
  checkbox_text: String!
  """Checkout Agreement content"""
  content: String!
  """Checkout Agreement content height"""
  content_height: String
  """Is Checkout Agreement content in HTML format"""
  is_html: Boolean!
  mode: CheckoutAgreementMode!
  """Checkout Agreement name"""
  name: String!
}

enum CheckoutAgreementMode {
  AUTO
  MANUAL
}

"""CMS blocks information"""
type CmsBlocks {
  """An array of CMS blocks"""
  items: [CmsBlock]
}

"""CMS page defines all CMS page information"""
type CmsPage {
  """CMS page content"""
  content: String
  """CMS page content heading"""
  content_heading: String
  """Identifier of the CMS page"""
  identifier: String
  """CMS page meta description"""
  meta_description: String
  """CMS page meta keywords"""
  meta_keywords: String
  """CMS page meta title"""
  meta_title: String
  """CMS page content heading"""
  page_layout: String
  """CMS page title"""
  title: String
  """URL key of CMS page"""
  url_key: String
}

type CompareList {
  """An array of attributes that can be used for comparing products"""
  attributes: [ComparableAttribute]
  """The number of items in the compare list"""
  item_count: Int!
  """An array of products to compare"""
  items: [ComparableItem]
  """The unique ID assigned to the compare list"""
  uid: ID!
}

type ComparableAttribute {
  """An attribute code that is enabled for product comparisons"""
  code: String!
  """The label of the attribute code"""
  label: String!
}

type ComparableItem {
  """An array of product attributes that can be used to compare products"""
  attributes: [ProductAttribute]!
  """Contains details about a product in a compare list"""
  product: ProductInterface!
  """The unique ID of an item in a compare list"""
  uid: ID!
}

type ProductAttribute {
  """The unique identifier for a product attribute code."""
  code: String!
  """The display value of the attribute"""
  value: String!
}

type Country {
  available_regions: [Region]
  full_name_english: String
  full_name_locale: String
  """The unique ID for a `Country` object."""
  id: String
  three_letter_abbreviation: String
  two_letter_abbreviation: String
}

type Region {
  code: String
  """The unique ID for a `Region` object."""
  id: Int
  name: String
}

type Currency {
  available_currency_codes: [String]
  base_currency_code: String
  base_currency_symbol: String
  default_display_currecy_code: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_code`.")
  default_display_currecy_symbol: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_symbol`.")
  default_display_currency_code: String
  default_display_currency_symbol: String
  exchange_rates: [ExchangeRate]
}

type ExchangeRate {
  currency_to: String
  rate: Float
}

"""AttributeInput specifies the attribute_code and entity_type to search"""
input AttributeInput {
  """The unique identifier for an attribute code. This value should be in lowercase letters without spaces."""
  attribute_code: String
  """The type of entity that defines the attribute"""
  entity_type: String
}

"""CustomAttributeMetadata defines an array of attribute_codes and entity_types"""
type CustomAttributeMetadata {
  """An array of attributes"""
  items: [Attribute]
}

"""Attribute contains the attribute_type of the specified attribute_code and entity_type"""
type Attribute {
  """The unique identifier for an attribute code. This value should be in lowercase letters without spaces."""
  attribute_code: String
  """Attribute options list."""
  attribute_options: [AttributeOption]
  """The data type of the attribute"""
  attribute_type: String
  """The type of entity that defines the attribute"""
  entity_type: String
  """The frontend input type of the attribute"""
  input_type: String
}

"""Attribute option."""
type AttributeOption {
  """Attribute option label."""
  label: String
  """Attribute option value."""
  value: String
}

"""Customer defines the customer name and address and other details"""
type Customer {
  """An array containing the customer's shipping and billing addresses"""
  addresses: [CustomerAddress]
  """Indicates whether the customer has enabled remote shopping assistance"""
  allow_remote_shopping_assistance: Boolean!
  """The contents of the customer's compare list"""
  compare_list: CompareList
  """Timestamp indicating when the account was created"""
  created_at: String
  """The customer's date of birth"""
  date_of_birth: String
  """The ID assigned to the billing address"""
  default_billing: String
  """The ID assigned to the shipping address"""
  default_shipping: String
  """The customer's date of birth"""
  dob: String @deprecated(reason: "Use `date_of_birth` instead")
  """The customer's email address. Required"""
  email: String
  """The customer's first name"""
  firstname: String
  """The customer's gender (Male - 1, Female - 2)"""
  gender: Int
  group_id: Int @deprecated(reason: "Customer group should not be exposed in the storefront scenarios")
  """The ID assigned to the customer"""
  id: Int @deprecated(reason: "id is not needed as part of Customer because on server side it can be identified based on customer token used for authentication. There is no need to know customer ID on the client side.")
  """Indicates whether the customer is subscribed to the company's newsletter"""
  is_subscribed: Boolean
  """The customer's family name"""
  lastname: String
  """The customer's middle name"""
  middlename: String
  orders(
    """Defines the filter to use for searching customer orders"""
    filter: CustomerOrdersFilterInput
    """Specifies which page of results to return. The default value is 1"""
    currentPage: Int = 1
    """Specifies the maximum number of results to return at once. The default value is 20"""
    pageSize: Int = 20
  ): CustomerOrders
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """Contains the customer's product reviews"""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20
    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!
  """A value such as Sr., Jr., or III"""
  suffix: String
  """The customer's Value-added tax (VAT) number (for corporate customers)"""
  taxvat: String
  """Contains a customer's wish lists"""
  wishlist: Wishlist! @deprecated(reason: "Use `Customer.wishlists` or `Customer.wishlist_v2`")
  """Retrieve the specified wish list identified by the unique ID for a `Wishlist` object"""
  wishlist_v2(id: ID!): Wishlist
  """An array of wishlists. In Magento Open Source, customers are limited to one wish list. The number of wish lists is configurable for Magento Commerce"""
  wishlists(
    """Specifies the maximum number of results to return at once. This attribute is optional."""
    pageSize: Int = 20
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): [Wishlist]!
}

"""CustomerAddress contains detailed information about a customer's billing and shipping addresses"""
type CustomerAddress {
  """The city or town"""
  city: String
  """The customer's company"""
  company: String
  """The customer's country"""
  country_code: CountryCodeEnum
  """The customer's country"""
  country_id: String @deprecated(reason: "Use `country_code` instead.")
  custom_attributes: [CustomerAddressAttribute] @deprecated(reason: "Custom attributes should not be put into container")
  """The customer ID"""
  customer_id: Int @deprecated(reason: "customer_id is not needed as part of CustomerAddress, address ID (id) is unique identifier for the addresses.")
  """Indicates whether the address is the default billing address"""
  default_billing: Boolean
  """Indicates whether the address is the default shipping address"""
  default_shipping: Boolean
  """Address extension attributes"""
  extension_attributes: [CustomerAddressAttribute]
  """The fax number"""
  fax: String
  """The first name of the person associated with the shipping/billing address"""
  firstname: String
  """The ID assigned to the address object"""
  id: Int
  """The family name of the person associated with the shipping/billing address"""
  lastname: String
  """The middle name of the person associated with the shipping/billing address"""
  middlename: String
  """The customer's ZIP or postal code"""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """An object containing the region name, region code, and region ID"""
  region: CustomerAddressRegion
  """The unique ID for a pre-defined region"""
  region_id: Int
  """An array of strings that define the street number and name"""
  street: [String]
  """A value such as Sr., Jr., or III"""
  suffix: String
  """The telephone number"""
  telephone: String
  """The customer's Value-added tax (VAT) number (for corporate customers)"""
  vat_id: String
}

"""The list of countries codes"""
enum CountryCodeEnum {
  """Afghanistan"""
  AF
  """Åland Islands"""
  AX
  """Albania"""
  AL
  """Algeria"""
  DZ
  """American Samoa"""
  AS
  """Andorra"""
  AD
  """Angola"""
  AO
  """Anguilla"""
  AI
  """Antarctica"""
  AQ
  """Antigua & Barbuda"""
  AG
  """Argentina"""
  AR
  """Armenia"""
  AM
  """Aruba"""
  AW
  """Australia"""
  AU
  """Austria"""
  AT
  """Azerbaijan"""
  AZ
  """Bahamas"""
  BS
  """Bahrain"""
  BH
  """Bangladesh"""
  BD
  """Barbados"""
  BB
  """Belarus"""
  BY
  """Belgium"""
  BE
  """Belize"""
  BZ
  """Benin"""
  BJ
  """Bermuda"""
  BM
  """Bhutan"""
  BT
  """Bolivia"""
  BO
  """Bosnia & Herzegovina"""
  BA
  """Botswana"""
  BW
  """Bouvet Island"""
  BV
  """Brazil"""
  BR
  """British Indian Ocean Territory"""
  IO
  """British Virgin Islands"""
  VG
  """Brunei"""
  BN
  """Bulgaria"""
  BG
  """Burkina Faso"""
  BF
  """Burundi"""
  BI
  """Cambodia"""
  KH
  """Cameroon"""
  CM
  """Canada"""
  CA
  """Cape Verde"""
  CV
  """Cayman Islands"""
  KY
  """Central African Republic"""
  CF
  """Chad"""
  TD
  """Chile"""
  CL
  """China"""
  CN
  """Christmas Island"""
  CX
  """Cocos (Keeling) Islands"""
  CC
  """Colombia"""
  CO
  """Comoros"""
  KM
  """Congo-Brazzaville"""
  CG
  """Congo-Kinshasa"""
  CD
  """Cook Islands"""
  CK
  """Costa Rica"""
  CR
  """Côte d’Ivoire"""
  CI
  """Croatia"""
  HR
  """Cuba"""
  CU
  """Cyprus"""
  CY
  """Czech Republic"""
  CZ
  """Denmark"""
  DK
  """Djibouti"""
  DJ
  """Dominica"""
  DM
  """Dominican Republic"""
  DO
  """Ecuador"""
  EC
  """Egypt"""
  EG
  """El Salvador"""
  SV
  """Equatorial Guinea"""
  GQ
  """Eritrea"""
  ER
  """Estonia"""
  EE
  """Ethiopia"""
  ET
  """Falkland Islands"""
  FK
  """Faroe Islands"""
  FO
  """Fiji"""
  FJ
  """Finland"""
  FI
  """France"""
  FR
  """French Guiana"""
  GF
  """French Polynesia"""
  PF
  """French Southern Territories"""
  TF
  """Gabon"""
  GA
  """Gambia"""
  GM
  """Georgia"""
  GE
  """Germany"""
  DE
  """Ghana"""
  GH
  """Gibraltar"""
  GI
  """Greece"""
  GR
  """Greenland"""
  GL
  """Grenada"""
  GD
  """Guadeloupe"""
  GP
  """Guam"""
  GU
  """Guatemala"""
  GT
  """Guernsey"""
  GG
  """Guinea"""
  GN
  """Guinea-Bissau"""
  GW
  """Guyana"""
  GY
  """Haiti"""
  HT
  """Heard &amp; McDonald Islands"""
  HM
  """Honduras"""
  HN
  """Hong Kong SAR China"""
  HK
  """Hungary"""
  HU
  """Iceland"""
  IS
  """India"""
  IN
  """Indonesia"""
  ID
  """Iran"""
  IR
  """Iraq"""
  IQ
  """Ireland"""
  IE
  """Isle of Man"""
  IM
  """Israel"""
  IL
  """Italy"""
  IT
  """Jamaica"""
  JM
  """Japan"""
  JP
  """Jersey"""
  JE
  """Jordan"""
  JO
  """Kazakhstan"""
  KZ
  """Kenya"""
  KE
  """Kiribati"""
  KI
  """Kuwait"""
  KW
  """Kyrgyzstan"""
  KG
  """Laos"""
  LA
  """Latvia"""
  LV
  """Lebanon"""
  LB
  """Lesotho"""
  LS
  """Liberia"""
  LR
  """Libya"""
  LY
  """Liechtenstein"""
  LI
  """Lithuania"""
  LT
  """Luxembourg"""
  LU
  """Macau SAR China"""
  MO
  """Macedonia"""
  MK
  """Madagascar"""
  MG
  """Malawi"""
  MW
  """Malaysia"""
  MY
  """Maldives"""
  MV
  """Mali"""
  ML
  """Malta"""
  MT
  """Marshall Islands"""
  MH
  """Martinique"""
  MQ
  """Mauritania"""
  MR
  """Mauritius"""
  MU
  """Mayotte"""
  YT
  """Mexico"""
  MX
  """Micronesia"""
  FM
  """Moldova"""
  MD
  """Monaco"""
  MC
  """Mongolia"""
  MN
  """Montenegro"""
  ME
  """Montserrat"""
  MS
  """Morocco"""
  MA
  """Mozambique"""
  MZ
  """Myanmar (Burma)"""
  MM
  """Namibia"""
  NA
  """Nauru"""
  NR
  """Nepal"""
  NP
  """Netherlands"""
  NL
  """Netherlands Antilles"""
  AN
  """New Caledonia"""
  NC
  """New Zealand"""
  NZ
  """Nicaragua"""
  NI
  """Niger"""
  NE
  """Nigeria"""
  NG
  """Niue"""
  NU
  """Norfolk Island"""
  NF
  """Northern Mariana Islands"""
  MP
  """North Korea"""
  KP
  """Norway"""
  NO
  """Oman"""
  OM
  """Pakistan"""
  PK
  """Palau"""
  PW
  """Palestinian Territories"""
  PS
  """Panama"""
  PA
  """Papua New Guinea"""
  PG
  """Paraguay"""
  PY
  """Peru"""
  PE
  """Philippines"""
  PH
  """Pitcairn Islands"""
  PN
  """Poland"""
  PL
  """Portugal"""
  PT
  """Qatar"""
  QA
  """Réunion"""
  RE
  """Romania"""
  RO
  """Russia"""
  RU
  """Rwanda"""
  RW
  """Samoa"""
  WS
  """San Marino"""
  SM
  """São Tomé & Príncipe"""
  ST
  """Saudi Arabia"""
  SA
  """Senegal"""
  SN
  """Serbia"""
  RS
  """Seychelles"""
  SC
  """Sierra Leone"""
  SL
  """Singapore"""
  SG
  """Slovakia"""
  SK
  """Slovenia"""
  SI
  """Solomon Islands"""
  SB
  """Somalia"""
  SO
  """South Africa"""
  ZA
  """South Georgia & South Sandwich Islands"""
  GS
  """South Korea"""
  KR
  """Spain"""
  ES
  """Sri Lanka"""
  LK
  """St. Barthélemy"""
  BL
  """St. Helena"""
  SH
  """St. Kitts & Nevis"""
  KN
  """St. Lucia"""
  LC
  """St. Martin"""
  MF
  """St. Pierre & Miquelon"""
  PM
  """St. Vincent & Grenadines"""
  VC
  """Sudan"""
  SD
  """Suriname"""
  SR
  """Svalbard & Jan Mayen"""
  SJ
  """Swaziland"""
  SZ
  """Sweden"""
  SE
  """Switzerland"""
  CH
  """Syria"""
  SY
  """Taiwan"""
  TW
  """Tajikistan"""
  TJ
  """Tanzania"""
  TZ
  """Thailand"""
  TH
  """Timor-Leste"""
  TL
  """Togo"""
  TG
  """Tokelau"""
  TK
  """Tonga"""
  TO
  """Trinidad & Tobago"""
  TT
  """Tunisia"""
  TN
  """Turkey"""
  TR
  """Turkmenistan"""
  TM
  """Turks & Caicos Islands"""
  TC
  """Tuvalu"""
  TV
  """Uganda"""
  UG
  """Ukraine"""
  UA
  """United Arab Emirates"""
  AE
  """United Kingdom"""
  GB
  """United States"""
  US
  """Uruguay"""
  UY
  """U.S. Outlying Islands"""
  UM
  """U.S. Virgin Islands"""
  VI
  """Uzbekistan"""
  UZ
  """Vanuatu"""
  VU
  """Vatican City"""
  VA
  """Venezuela"""
  VE
  """Vietnam"""
  VN
  """Wallis & Futuna"""
  WF
  """Western Sahara"""
  EH
  """Yemen"""
  YE
  """Zambia"""
  ZM
  """Zimbabwe"""
  ZW
}

type CustomerAddressAttribute {
  """Attribute code"""
  attribute_code: String
  """Attribute value"""
  value: String
}

"""CustomerAddressRegion defines the customer's state or province"""
type CustomerAddressRegion {
  """The state or province name"""
  region: String
  """The address region code"""
  region_code: String
  """The unique ID for a pre-defined region"""
  region_id: Int
}

"""Identifies the filter to use for filtering orders."""
input CustomerOrdersFilterInput {
  """Filters by order number."""
  number: FilterStringTypeInput
}

"""Defines a filter for an input string."""
input FilterStringTypeInput {
  """Filters items that are exactly the same as the specified string."""
  eq: String
  """Filters items that are exactly the same as entries specified in an array of strings."""
  in: [String]
  """Defines a filter that performs a fuzzy search using the specified string."""
  match: String
}

"""The collection of orders that match the conditions defined in the filter"""
type CustomerOrders {
  """An array of customer orders"""
  items: [CustomerOrder]!
  """An object that includes the current_page, page_info, and page_size values specified in the query"""
  page_info: SearchResultPageInfo
  """The total count of customer orders"""
  total_count: Int
}

"""Contains details about each of the customer's orders"""
type CustomerOrder {
  """The billing address for the order"""
  billing_address: OrderAddress
  """The shipping carrier for the order delivery"""
  carrier: String
  """Comments about the order"""
  comments: [SalesCommentItem]
  created_at: String @deprecated(reason: "Use the order_date attribute instead")
  """A list of credit memos"""
  credit_memos: [CreditMemo]
  """The entered gift message for the order"""
  gift_message: GiftMessage
  grand_total: Float @deprecated(reason: "Use the totals.grand_total attribute instead")
  """The unique ID for a `CustomerOrder` object"""
  id: ID!
  increment_id: String @deprecated(reason: "Use the id attribute instead")
  """A list of invoices for the order"""
  invoices: [Invoice]!
  """An array containing the items purchased in this order"""
  items: [OrderItemInterface]
  """The order number"""
  number: String!
  """The date the order was placed"""
  order_date: String!
  order_number: String! @deprecated(reason: "Use the number attribute instead")
  """Payment details for the order"""
  payment_methods: [OrderPaymentMethod]
  """A list of shipments for the order"""
  shipments: [OrderShipment]
  """The shipping address for the order"""
  shipping_address: OrderAddress
  """The delivery method for the order"""
  shipping_method: String
  """The current status of the order"""
  status: String!
  """Contains details about the calculated totals for this order"""
  total: OrderTotal
}

"""OrderAddress contains detailed information about an order's billing and shipping addresses"""
type OrderAddress {
  """The city or town"""
  city: String!
  """The customer's company"""
  company: String
  """The customer's country"""
  country_code: CountryCodeEnum
  """The fax number"""
  fax: String
  """The first name of the person associated with the shipping/billing address"""
  firstname: String!
  """The family name of the person associated with the shipping/billing address"""
  lastname: String!
  """The middle name of the person associated with the shipping/billing address"""
  middlename: String
  """The customer's order ZIP or postal code"""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """The state or province name"""
  region: String
  """The unique ID for a `Region` object of a pre-defined region"""
  region_id: ID
  """An array of strings that define the street number and name"""
  street: [String]!
  """A value such as Sr., Jr., or III"""
  suffix: String
  """The telephone number"""
  telephone: String!
  """The customer's Value-added tax (VAT) number (for corporate customers)"""
  vat_id: String
}

"""Comment item details"""
type SalesCommentItem {
  """The text of the message"""
  message: String!
  """The timestamp of the comment"""
  timestamp: String!
}

"""Credit memo details"""
type CreditMemo {
  """Comments on the credit memo"""
  comments: [SalesCommentItem]
  """The unique ID for a `CreditMemo` object"""
  id: ID!
  """An array containing details about refunded items"""
  items: [CreditMemoItemInterface]
  """The sequential credit memo number"""
  number: String!
  """Contains details about the total refunded amount"""
  total: CreditMemoTotal
}

"""Credit memo item details"""
interface CreditMemoItemInterface {
  """Contains information about the final discount amount for the base product, including discounts on options"""
  discounts: [Discount]
  """The unique ID for a `CreditMemoItemInterface` object"""
  id: ID!
  """The order item the credit memo is applied to"""
  order_item: OrderItemInterface
  """The name of the base product"""
  product_name: String
  """The sale price for the base product, including selected options"""
  product_sale_price: Money!
  """SKU of the base product"""
  product_sku: String!
  """The number of refunded items"""
  quantity_refunded: Float
}

"""Order item details"""
interface OrderItemInterface {
  """The final discount information for the product"""
  discounts: [Discount]
  """The entered option for the base product, such as a logo or image"""
  entered_options: [OrderItemOption]
  """The unique ID for a `OrderItemInterface` object"""
  id: ID!
  """The name of the base product"""
  product_name: String
  """The sale price of the base product, including selected options"""
  product_sale_price: Money!
  """The SKU of the base product"""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product"""
  product_url_key: String
  """The number of canceled items"""
  quantity_canceled: Float
  """The number of invoiced items"""
  quantity_invoiced: Float
  """The number of units ordered for this item"""
  quantity_ordered: Float
  """The number of refunded items"""
  quantity_refunded: Float
  """The number of returned items"""
  quantity_returned: Float
  """The number of shipped items"""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size"""
  selected_options: [OrderItemOption]
  """The status of the order item"""
  status: String
}

"""Represents order item options like selected or entered"""
type OrderItemOption {
  """The name of the option"""
  label: String!
  """The value of the option"""
  value: String!
}

"""Credit memo price details"""
type CreditMemoTotal {
  """An adjustment manually applied to the order"""
  adjustment: Money!
  """The final base grand total amount in the base currency"""
  base_grand_total: Money!
  """The applied discounts to the credit memo"""
  discounts: [Discount]
  """The final total amount, including shipping, discounts, and taxes"""
  grand_total: Money!
  """Contains details about the shipping and handling costs for the credit memo"""
  shipping_handling: ShippingHandling
  """The subtotal of the invoice, excluding shipping, discounts, and taxes"""
  subtotal: Money!
  """The credit memo tax details"""
  taxes: [TaxItem]
  """The shipping amount for the credit memo"""
  total_shipping: Money!
  """The amount of tax applied to the credit memo"""
  total_tax: Money!
}

"""The Shipping handling details"""
type ShippingHandling {
  """The shipping amount, excluding tax"""
  amount_excluding_tax: Money
  """The shipping amount, including tax"""
  amount_including_tax: Money
  """The applied discounts to the shipping"""
  discounts: [ShippingDiscount]
  """Contains details about taxes applied for shipping"""
  taxes: [TaxItem]
  """The total amount for shipping"""
  total_amount: Money!
}

"""Defines an individual shipping discount. This discount can be applied to shipping."""
type ShippingDiscount {
  """The amount of the discount"""
  amount: Money!
}

"""The tax item details"""
type TaxItem {
  """The amount of tax applied to the item"""
  amount: Money!
  """The rate used to calculate the tax"""
  rate: Float!
  """A title that describes the tax"""
  title: String!
}

"""Invoice details"""
type Invoice {
  """Comments on the invoice"""
  comments: [SalesCommentItem]
  """The unique ID for a `Invoice` object"""
  id: ID!
  """Invoiced product details"""
  items: [InvoiceItemInterface]
  """Sequential invoice number"""
  number: String!
  """Invoice total amount details"""
  total: InvoiceTotal
}

"""Invoice item details"""
interface InvoiceItemInterface {
  """Contains information about the final discount amount for the base product, including discounts on options"""
  discounts: [Discount]
  """The unique ID for a `InvoiceItemInterface` object"""
  id: ID!
  """Contains details about an individual order item"""
  order_item: OrderItemInterface
  """The name of the base product"""
  product_name: String
  """The sale price for the base product including selected options"""
  product_sale_price: Money!
  """The SKU of the base product"""
  product_sku: String!
  """The number of invoiced items"""
  quantity_invoiced: Float
}

"""Contains price details from an invoice"""
type InvoiceTotal {
  """The final base grand total amount in the base currency"""
  base_grand_total: Money!
  """The applied discounts to the invoice"""
  discounts: [Discount]
  """The final total amount, including shipping, discounts, and taxes"""
  grand_total: Money!
  """Contains details about the shipping and handling costs for the invoice"""
  shipping_handling: ShippingHandling
  """The subtotal of the invoice, excluding shipping, discounts, and taxes"""
  subtotal: Money!
  """The invoice tax details"""
  taxes: [TaxItem]
  """The shipping amount for the invoice"""
  total_shipping: Money!
  """The amount of tax applied to the invoice"""
  total_tax: Money!
}

"""Contains details about the payment method used to pay for the order"""
type OrderPaymentMethod {
  """Additional data per payment method type"""
  additional_data: [KeyValue]
  """The label that describes the payment method"""
  name: String!
  """The payment method code that indicates how the order was paid for"""
  type: String!
}

"""The key-value type"""
type KeyValue {
  """The name part of the name/value pair"""
  name: String
  """The value part of the name/value pair"""
  value: String
}

"""Order shipment details"""
type OrderShipment {
  """Comments added to the shipment"""
  comments: [SalesCommentItem]
  """The unique ID for a `OrderShipment` object"""
  id: ID!
  """Contains items included in the shipment"""
  items: [ShipmentItemInterface]
  """The sequential credit shipment number"""
  number: String!
  """Contains shipment tracking details"""
  tracking: [ShipmentTracking]
}

"""Order shipment item details"""
interface ShipmentItemInterface {
  """The unique ID for a `ShipmentItemInterface` object"""
  id: ID!
  """Associated order item"""
  order_item: OrderItemInterface
  """Name of the base product"""
  product_name: String
  """Sale price for the base product"""
  product_sale_price: Money!
  """SKU of the base product"""
  product_sku: String!
  """Number of shipped items"""
  quantity_shipped: Float!
}

"""Order shipment tracking details"""
type ShipmentTracking {
  """The shipping carrier for the order delivery"""
  carrier: String!
  """The tracking number of the order shipment"""
  number: String
  """The shipment tracking title"""
  title: String!
}

"""Contains details about the sales total amounts used to calculate the final price"""
type OrderTotal {
  """The final base grand total amount in the base currency"""
  base_grand_total: Money!
  """The applied discounts to the order"""
  discounts: [Discount]
  """The final total amount, including shipping, discounts, and taxes"""
  grand_total: Money!
  """Contains details about the shipping and handling costs for the order"""
  shipping_handling: ShippingHandling
  """The subtotal of the order, excluding shipping, discounts, and taxes"""
  subtotal: Money!
  """The order tax details"""
  taxes: [TaxItem]
  """The shipping amount for the order"""
  total_shipping: Money!
  """The amount of tax applied to the order"""
  total_tax: Money!
}

type Wishlist {
  """The unique ID for a `Wishlist` object"""
  id: ID
  items: [WishlistItem] @deprecated(reason: "Use field `items_v2` from type `Wishlist` instead")
  """The number of items in the wish list"""
  items_count: Int
  """An array of items in the customer's wish list"""
  items_v2(currentPage: Int = 1, pageSize: Int = 20): WishlistItems
  """An encrypted code that Magento uses to link to the wish list"""
  sharing_code: String
  """The time of the last modification to the wish list"""
  updated_at: String
}

type WishlistItem {
  """The time when the customer added the item to the wish list"""
  added_at: String
  """The customer's comment about this item"""
  description: String
  """The unique ID for a `WishlistItem` object"""
  id: Int
  product: ProductInterface
  """The quantity of this wish list item"""
  qty: Float
}

type WishlistItems {
  """A list of items in the wish list"""
  items: [WishlistItemInterface]!
  """Contains pagination metadata"""
  page_info: SearchResultPageInfo
}

interface WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!
  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item"""
  description: String
  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!
  """Product details of the wish list item"""
  product: ProductInterface
  """The quantity of this wish list item"""
  quantity: Float!
}

type SelectedCustomizableOption {
  """The unique ID for a `CustomizableRadioOption`, `CustomizableDropDownOption`, `CustomizableMultipleOption`, etc. of `CustomizableOptionInterface` objects"""
  customizable_option_uid: ID!
  id: Int! @deprecated(reason: "Use SelectedCustomizableOption.customizable_option_uid instead")
  is_required: Boolean!
  label: String!
  sort_order: Int!
  type: String!
  values: [SelectedCustomizableOptionValue]!
}

type SelectedCustomizableOptionValue {
  """The unique ID for a `CustomizableMultipleValue`, `CustomizableRadioValue`, `CustomizableCheckboxValue`, `CustomizableDropDownValue`, etc. objects"""
  customizable_option_value_uid: ID!
  id: Int! @deprecated(reason: "Use SelectedCustomizableOptionValue.customizable_option_value_uid instead")
  label: String!
  price: CartItemSelectedOptionValuePrice!
  value: String!
}

type CartItemSelectedOptionValuePrice {
  type: PriceTypeEnum!
  units: String!
  value: Float!
}

"""This enumeration the price type."""
enum PriceTypeEnum {
  FIXED
  PERCENT
  DYNAMIC
}

type CustomerDownloadableProducts {
  """List of purchased downloadable items"""
  items: [CustomerDownloadableProduct]
}

type CustomerDownloadableProduct {
  date: String
  download_url: String
  order_increment_id: String
  remaining_downloads: String
  status: String
}

type CustomerPaymentTokens {
  """An array of payment tokens"""
  items: [PaymentToken]!
}

"""The stored payment method available to the customer"""
type PaymentToken {
  """Stored account details"""
  details: String
  """The payment method code associated with the token"""
  payment_method_code: String!
  """The public hash of the token"""
  public_hash: String!
  type: PaymentTokenTypeEnum!
}

"""The list of available payment token types"""
enum PaymentTokenTypeEnum {
  card
  account
}

"""The required input to request the secure URL for Payments Pro Hosted Solution payment."""
input HostedProUrlInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

"""Contains secure URL used for Payments Pro Hosted Solution payment method."""
type HostedProUrl {
  """Secure Url generated by PayPal"""
  secure_form_url: String
}

"""Input required to fetch payment token information for Payflow Link and Payments Advanced payment methods."""
input PayflowLinkTokenInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

"""Contains information used to generate PayPal iframe for transaction. Applies to Payflow Link and Payments Advanced payment methods."""
type PayflowLinkToken {
  """Mode for Payflow transaction"""
  mode: PayflowLinkMode
  """PayPal URL used for requesting Payflow form"""
  paypal_url: String
  """Secure token generated by PayPal"""
  secure_token: String
  """Secure token ID generated by PayPal"""
  secure_token_id: String
}

"""Mode for payment: TEST or LIVE. Applies to Payflow Link and Payments Advanced payment methods."""
enum PayflowLinkMode {
  TEST
  LIVE
}

type IsEmailAvailableOutput {
  """Is email availabel value"""
  is_email_available: Boolean
}

input MolliePaymentMethodsInput {
  amount: Float!
  currency: String!
}

type MolliePaymentMethodsOutput {
  methods: [MolliePaymentMethod]
}

type MolliePaymentMethod {
  code: String
  image: String
  name: String
}

"""AreaInput defines the parameters which will be used for filter by specified location."""
input AreaInput {
  """The radius for the search in KM."""
  radius: Int!
  """The country code where search must be performed. Required parameter together with region, city or postcode."""
  search_term: String!
}

"""PickupLocationFilterInput defines the list of attributes and filters for the search."""
input PickupLocationFilterInput {
  """Filter by city."""
  city: FilterTypeInput
  """Filter by country."""
  country_id: FilterTypeInput
  """Filter by pickup location name."""
  name: FilterTypeInput
  """Filter by pickup location code."""
  pickup_location_code: FilterTypeInput
  """Filter by postcode."""
  postcode: FilterTypeInput
  """Filter by region."""
  region: FilterTypeInput
  """Filter by region id."""
  region_id: FilterTypeInput
  """Filter by street."""
  street: FilterTypeInput
}

"""FilterTypeInput specifies which action will be performed in a query """
input FilterTypeInput {
  """Equals"""
  eq: String
  finset: [String]
  """From. Must be used with 'to'"""
  from: String
  """Greater than"""
  gt: String
  """Greater than or equal to"""
  gteq: String
  """In. The value can contain a set of comma-separated values"""
  in: [String]
  """Like. The specified value can contain % (percent signs) to allow matching of 0 or more characters"""
  like: String
  """Less than"""
  lt: String
  """Less than or equal to"""
  lteq: String
  """More than or equal to"""
  moreq: String
  """Not equal to"""
  neq: String
  """Not in. The value can contain a set of comma-separated values"""
  nin: [String]
  """Not null"""
  notnull: String
  """Is null"""
  null: String
  """To. Must be used with 'from'"""
  to: String
}

"""PickupLocationSortInput specifies attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order."""
input PickupLocationSortInput {
  """City where pickup location is placed."""
  city: SortEnum
  """Name of the contact person."""
  contact_name: SortEnum
  """Id of the country in two letters."""
  country_id: SortEnum
  """Description of the pickup location."""
  description: SortEnum
  """Distance to the address, requested by distance filter. Applicable only with distance filter. If distance sort order is present, all other sort orders will be ignored."""
  distance: SortEnum
  """Contact email of the pickup location."""
  email: SortEnum
  """Contact fax of the pickup location."""
  fax: SortEnum
  """Geographic latitude where pickup location is placed."""
  latitude: SortEnum
  """Geographic longitude where pickup location is placed."""
  longitude: SortEnum
  """The pickup location name. Customer use this to identify the pickup location."""
  name: SortEnum
  """Contact phone number of the pickup location."""
  phone: SortEnum
  """A code assigned to pickup location to identify the source."""
  pickup_location_code: SortEnum
  """Postcode where pickup location is placed."""
  postcode: SortEnum
  """Name of the region."""
  region: SortEnum
  """Id of the region."""
  region_id: SortEnum
  """Street where pickup location is placed."""
  street: SortEnum
}

"""Product Information used for Pickup Locations search."""
input ProductInfoInput {
  """Product SKU."""
  sku: String!
}

"""Top level object returned in a pickup locations search."""
type PickupLocations {
  """An array of pickup locations that match the specific search request."""
  items: [PickupLocation]
  """An object that includes the page_info and currentPage values specified in the query."""
  page_info: SearchResultPageInfo
  """The number of products returned."""
  total_count: Int
}

"""Defines Pickup Location information."""
type PickupLocation {
  city: String
  contact_name: String
  country_id: String
  description: String
  email: String
  fax: String
  latitude: Float
  longitude: Float
  name: String
  phone: String
  pickup_location_code: String
  postcode: String
  region: String
  region_id: Int
  street: String
}

type ProductReviewRatingsMetadata {
  """List of product reviews sorted by position"""
  items: [ProductReviewRatingMetadata]!
}

type ProductReviewRatingMetadata {
  """An encoded rating ID."""
  id: String!
  """The label assigned to an aspect of a product that is being rated, such as quality or price"""
  name: String!
  """List of product review ratings sorted by position."""
  values: [ProductReviewRatingValueMetadata]!
}

type ProductReviewRatingValueMetadata {
  """A ratings scale, such as the number of stars awarded"""
  value: String!
  """An encoded rating value id."""
  value_id: String!
}

"""ProductAttributeFilterInput defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for."""
input ProductAttributeFilterInput {
  """Attribute label: Activity"""
  activity: FilterEqualTypeInput
  """Attribute label: Category Gear"""
  category_gear: FilterEqualTypeInput
  """Deprecated: use `category_uid` to filter product by category id."""
  category_id: FilterEqualTypeInput
  """Filter product by the unique ID for a `CategoryInterface` object."""
  category_uid: FilterEqualTypeInput
  """Attribute label: Climate"""
  climate: FilterEqualTypeInput
  """Attribute label: Collar"""
  collar: FilterEqualTypeInput
  """Attribute label: Color"""
  color: FilterEqualTypeInput
  """Attribute label: Colors"""
  colors: FilterEqualTypeInput
  """Attribute label: Compatible Phones"""
  compatible_phones: FilterEqualTypeInput
  """Attribute label: Debug: colors"""
  debug_colors: FilterMatchTypeInput
  """Attribute label: Debug: labels"""
  debug_labels: FilterMatchTypeInput
  """Attribute label: Debug: landmarks"""
  debug_landmarks: FilterMatchTypeInput
  """Attribute label: Description"""
  description: FilterMatchTypeInput
  """Attribute label: Dominant color"""
  dominant_color: FilterEqualTypeInput
  """Attribute label: Eco Collection"""
  eco_collection: FilterEqualTypeInput
  """Attribute label: Erin Recommends"""
  erin_recommends: FilterEqualTypeInput
  """Attribute label: Features"""
  features_bags: FilterEqualTypeInput
  """Attribute label: Format"""
  format: FilterEqualTypeInput
  """Attribute label: Gender"""
  gender: FilterEqualTypeInput
  """Attribute label: Material"""
  material: FilterEqualTypeInput
  """Attribute label: Product Name"""
  name: FilterMatchTypeInput
  """Attribute label: New"""
  new: FilterEqualTypeInput
  """Attribute label: Pattern"""
  pattern: FilterEqualTypeInput
  """Attribute label: Performance Fabric"""
  performance_fabric: FilterEqualTypeInput
  """Attribute label: Price"""
  price: FilterRangeTypeInput
  """Attribute label: Art"""
  print_art: FilterEqualTypeInput
  """Attribute label: Holiday"""
  print_holiday: FilterEqualTypeInput
  """Attribute label: Search Labels"""
  print_labels: FilterEqualTypeInput
  """Attribute label: Search Landmarks"""
  print_landmarks: FilterEqualTypeInput
  """Attribute label: Landscape"""
  print_landscape: FilterEqualTypeInput
  """Attribute label: Mood"""
  print_mood: FilterEqualTypeInput
  """Attribute label: Type"""
  print_type: FilterEqualTypeInput
  """Attribute label: Sale"""
  sale: FilterEqualTypeInput
  """Attribute label: Short Description"""
  short_description: FilterMatchTypeInput
  """Attribute label: Size"""
  size: FilterEqualTypeInput
  """Attribute label: SKU"""
  sku: FilterEqualTypeInput
  """Attribute label: Sleeve"""
  sleeve: FilterEqualTypeInput
  """Attribute label: Strap/Handle"""
  strap_bags: FilterEqualTypeInput
  """Attribute label: Style Bags"""
  style_bags: FilterEqualTypeInput
  """Attribute label: Style Bottom"""
  style_bottom: FilterEqualTypeInput
  """Attribute label: Style General"""
  style_general: FilterEqualTypeInput
  """The part of the URL that identifies the product"""
  url_key: FilterEqualTypeInput
}

"""Defines a filter that matches a range of values, such as prices or dates."""
input FilterRangeTypeInput {
  """The beginning of the range"""
  from: String
  """The end of the range"""
  to: String
}

"""The Products object is the top-level object returned in a product search."""
type Products {
  """Layered navigation aggregations."""
  aggregations: [Aggregation]
  """Layered navigation filters array."""
  filters: [LayerFilter] @deprecated(reason: "Use aggregations instead")
  """An array of products that match the specified search criteria."""
  items: [ProductInterface]
  """An object that includes the page_info and currentPage values specified in the query."""
  page_info: SearchResultPageInfo
  """An object that includes the default sort field and all available sort fields."""
  sort_fields: SortFields
  """The number of products that are marked as visible. By default, in complex products, parent products are visible, but their child products are not."""
  total_count: Int
}

"""A bucket that contains information for each filterable option (such as price, category `UID`, and custom attributes)."""
type Aggregation {
  """Attribute code of the aggregation group."""
  attribute_code: String!
  """The number of options in the aggregation group."""
  count: Int
  """The aggregation display name."""
  label: String
  """Array of options for the aggregation."""
  options: [AggregationOption]
}

type AggregationOption implements AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int
  """Aggregation option display label."""
  label: String
  """The internal ID that represents the value of the option."""
  value: String!
}

interface AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int
  """Aggregation option display label."""
  label: String
  """The internal ID that represents the value of the option."""
  value: String!
}

type LayerFilter {
  """Array of filter items."""
  filter_items: [LayerFilterItemInterface] @deprecated(reason: "Use Aggregation.options instead.")
  """Count of filter items in filter group."""
  filter_items_count: Int @deprecated(reason: "Use Aggregation.count instead.")
  """Layered navigation filter name."""
  name: String @deprecated(reason: "Use Aggregation.label instead.")
  """Request variable name for filter query."""
  request_var: String @deprecated(reason: "Use Aggregation.attribute_code instead.")
}

interface LayerFilterItemInterface {
  """Count of items by filter."""
  items_count: Int @deprecated(reason: "Use AggregationOption.count instead.")
  """Filter label."""
  label: String @deprecated(reason: "Use AggregationOption.label instead.")
  """Value for filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use AggregationOption.value instead.")
}

"""SortFields contains a default value for sort fields and all available sort fields."""
type SortFields {
  """Default value of sort fields."""
  default: String
  """Available sort fields."""
  options: [SortField]
}

type SortField {
  """Label of sort field."""
  label: String
  """Attribute code of sort field."""
  value: String
}

"""EntityUrl is an output object containing the `id`, `relative_url`, and `type` attributes"""
type EntityUrl {
  canonical_url: String @deprecated(reason: "The canonical_url field is deprecated, use relative_url instead.")
  """The unique ID for a `ProductInterface`, `CategoryInterface`, `CmsPage`, etc. object associated with the specified url. This could be a product UID, category UID, or cms page UID."""
  entity_uid: ID
  """The ID assigned to the object associated with the specified url. This could be a product ID, category ID, or page ID."""
  id: Int @deprecated(reason: "Use `entity_uid` instead.")
  """301 or 302 HTTP code for url permanent or temporary redirect or 0 for the 200 no redirect"""
  redirectCode: Int
  """The internal relative URL. If the specified  url is a redirect, the query returns the redirected URL, not the original."""
  relative_url: String
  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
}

"""This enumeration defines the entity type."""
enum UrlRewriteEntityTypeEnum {
  CMS_PAGE
  PRODUCT
  CATEGORY
}

"""Deprecated: `Wishlist` type should be used instead"""
type WishlistOutput {
  """An array of items in the customer's wish list"""
  items: [WishlistItem] @deprecated(reason: "Use field `items` from type `Wishlist` instead")
  """The number of items in the wish list"""
  items_count: Int @deprecated(reason: "Use field `items_count` from type `Wishlist` instead")
  """When multiple wish lists are enabled, the name the customer assigns to the wishlist"""
  name: String @deprecated(reason: "This field is related to Commerce functionality and is always `null` in Open Source edition")
  """An encrypted code that Magento uses to link to the wish list"""
  sharing_code: String @deprecated(reason: "Use field `sharing_code` from type `Wishlist` instead")
  """The time of the last modification to the wish list"""
  updated_at: String @deprecated(reason: "Use field `updated_at` from type `Wishlist` instead")
}

input AddBundleProductsToCartInput {
  cart_id: String!
  cart_items: [BundleProductCartItemInput]!
}

input BundleProductCartItemInput {
  bundle_options: [BundleOptionInput]!
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
}

input BundleOptionInput {
  id: Int!
  quantity: Float!
  value: [String]!
}

input CustomizableOptionInput {
  """The customizable option id of the product"""
  id: Int
  """The string value of the option"""
  value_string: String!
}

input CartItemInput {
  """An array of entered options for the base product, such as personalization text"""
  entered_options: [EnteredOptionInput]
  """For child products, the SKU of its parent product"""
  parent_sku: String
  quantity: Float!
  """The selected options for the base product, such as color or size with  unique ID for a `CustomizableRadioOption`, `CustomizableDropDownOption`, `ConfigurableProductOptionsValues`, etc. objects"""
  selected_options: [ID]
  sku: String!
}

"""Defines a customer-entered option"""
input EnteredOptionInput {
  """The unique ID for a `CustomizableFieldOption`, `CustomizableFileOption`, `CustomizableAreaOption`, etc. of `CustomizableOptionInterface` objects"""
  uid: ID!
  """Text the customer entered"""
  value: String!
}

type AddBundleProductsToCartOutput {
  cart: Cart!
}

input AddConfigurableProductsToCartInput {
  cart_id: String!
  cart_items: [ConfigurableProductCartItemInput]!
}

input ConfigurableProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
  """Configurable product SKU."""
  parent_sku: String
  """Deprecated. Use CartItemInput.sku instead."""
  variant_sku: String
}

type AddConfigurableProductsToCartOutput {
  cart: Cart!
}

input AddDownloadableProductsToCartInput {
  cart_id: String!
  cart_items: [DownloadableProductCartItemInput]!
}

input DownloadableProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
  downloadable_product_links: [DownloadableProductLinksInput]
}

input DownloadableProductLinksInput {
  link_id: Int!
}

type AddDownloadableProductsToCartOutput {
  cart: Cart!
}

type AddProductsToCartOutput {
  """The cart after products have been added"""
  cart: Cart!
  """An error encountered while adding an item to the cart."""
  user_errors: [CartUserInputError]!
}

"""An error encountered while adding an item to the the cart."""
type CartUserInputError {
  """Cart-specific error code"""
  code: CartUserInputErrorType!
  """A localized error message"""
  message: String!
}

enum CartUserInputErrorType {
  PRODUCT_NOT_FOUND
  NOT_SALABLE
  INSUFFICIENT_STOCK
  UNDEFINED
}

input AddProductsToCompareListInput {
  """An array of product IDs to add to the compare list"""
  products: [ID]!
  """The unique identifier of the compare list to modify"""
  uid: ID!
}

"""Defines the items to add to a wish list"""
input WishlistItemInput {
  """An array of options that the customer entered"""
  entered_options: [EnteredOptionInput]
  """For complex product types, the SKU of the parent product"""
  parent_sku: String
  """The amount or number of items to add"""
  quantity: Float!
  """An array of strings corresponding to options the customer selected"""
  selected_options: [ID]
  """The SKU of the product to add. For complex product types, specify the child product SKU"""
  sku: String!
}

"""Contains the customer's wish list and any errors encountered"""
type AddProductsToWishlistOutput {
  """An array of errors encountered while adding products to a wish list"""
  user_errors: [WishListUserInputError]!
  """Contains the wish list with all items that were successfully added"""
  wishlist: Wishlist!
}

"""An error encountered while performing operations with WishList."""
type WishListUserInputError {
  """Wishlist-specific error code"""
  code: WishListUserInputErrorType!
  """A localized error message"""
  message: String!
}

enum WishListUserInputErrorType {
  PRODUCT_NOT_FOUND
  UNDEFINED
}

input AddSimpleProductsToCartInput {
  cart_id: String!
  cart_items: [SimpleProductCartItemInput]!
}

input SimpleProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
}

type AddSimpleProductsToCartOutput {
  cart: Cart!
}

input AddVirtualProductsToCartInput {
  cart_id: String!
  cart_items: [VirtualProductCartItemInput]!
}

input VirtualProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
}

type AddVirtualProductsToCartOutput {
  cart: Cart!
}

input ApplyCouponToCartInput {
  cart_id: String!
  coupon_code: String!
}

type ApplyCouponToCartOutput {
  cart: Cart!
}

type AssignCompareListToCustomerOutput {
  """The contents of the customer's compare list"""
  compare_list: CompareList
  result: Boolean!
}

input CreateCompareListInput {
  """An array of product IDs to add to the compare list"""
  products: [ID]
}

input CustomerInput {
  """The customer's date of birth"""
  date_of_birth: String
  """Deprecated: Use `date_of_birth` instead"""
  dob: String
  """The customer's email address. Required for customer creation"""
  email: String
  """The customer's first name"""
  firstname: String
  """The customer's gender (Male - 1, Female - 2)"""
  gender: Int
  """Indicates whether the customer is subscribed to the company's newsletter"""
  is_subscribed: Boolean
  """The customer's family name"""
  lastname: String
  """The customer's middle name"""
  middlename: String
  """The customer's password"""
  password: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """A value such as Sr., Jr., or III"""
  suffix: String
  """The customer's Tax/VAT number (for corporate customers)"""
  taxvat: String
}

type CustomerOutput {
  customer: Customer!
}

input CustomerAddressInput {
  """The city or town"""
  city: String
  """The customer's company"""
  company: String
  """The customer's country"""
  country_code: CountryCodeEnum
  """Deprecated: use `country_code` instead."""
  country_id: CountryCodeEnum
  """Deprecated: Custom attributes should not be put into container."""
  custom_attributes: [CustomerAddressAttributeInput]
  """Indicates whether the address is the default billing address"""
  default_billing: Boolean
  """Indicates whether the address is the default shipping address"""
  default_shipping: Boolean
  """The fax number"""
  fax: String
  """The first name of the person associated with the shipping/billing address"""
  firstname: String
  """The family name of the person associated with the shipping/billing address"""
  lastname: String
  """The middle name of the person associated with the shipping/billing address"""
  middlename: String
  """The customer's ZIP or postal code"""
  postcode: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """An object containing the region name, region code, and region ID"""
  region: CustomerAddressRegionInput
  """An array of strings that define the street number and name"""
  street: [String]
  """A value such as Sr., Jr., or III"""
  suffix: String
  """The telephone number"""
  telephone: String
  """The customer's Tax/VAT number (for corporate customers)"""
  vat_id: String
}

input CustomerAddressAttributeInput {
  """Attribute code"""
  attribute_code: String!
  """Attribute value"""
  value: String!
}

"""CustomerAddressRegionInput defines the customer's state or province"""
input CustomerAddressRegionInput {
  """The state or province name"""
  region: String
  """The address region code"""
  region_code: String
  """The unique ID for a pre-defined region"""
  region_id: Int
}

input CustomerCreateInput {
  """Indicates whether the customer has enabled remote shopping assistance"""
  allow_remote_shopping_assistance: Boolean
  """The customer's date of birth"""
  date_of_birth: String
  """Deprecated: Use `date_of_birth` instead"""
  dob: String
  """The customer's email address. Required for customer creation"""
  email: String!
  """The customer's first name"""
  firstname: String!
  """The customer's gender (Male - 1, Female - 2)"""
  gender: Int
  """Indicates whether the customer is subscribed to the company's newsletter"""
  is_subscribed: Boolean
  """The customer's family name"""
  lastname: String!
  """The customer's middle name"""
  middlename: String
  """The customer's password"""
  password: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """A value such as Sr., Jr., or III"""
  suffix: String
  """The customer's Tax/VAT number (for corporate customers)"""
  taxvat: String
}

input createEmptyCartInput {
  cart_id: String
}

input createKlarnaPaymentsSessionInput {
  cart_id: String!
}

type createKlarnaPaymentsSessionOutput {
  """The payment method client token"""
  client_token: String
  """The payment method categories"""
  payment_method_categories: [Categories]
}

type Categories {
  """The payment method assets"""
  asset_urls: [Assets]
  """The payment method identifier"""
  identifier: String!
  """The payment method name"""
  name: String!
}

type Assets {
  """The payment method logo url (descriptive)"""
  descriptive: String
  """The payment method logo url (standard)"""
  standard: String
}

input MollieTransactionInput {
  issuer: String
  payment_token: String!
}

type MollieTransactionOutput {
  checkout_url: String
}

"""Input required to fetch payment token information for Payflow Pro and Payments Pro payment methods."""
input PayflowProTokenInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
  """A set of relative URLs that PayPal uses for callback."""
  urls: PayflowProUrlInput!
}

"""A set of relative URLs that PayPal will use in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Payflow Pro and Payment Pro payment methods."""
input PayflowProUrlInput {
  """The relative URL of the page that PayPal will redirect to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html."""
  cancel_url: String!
  """The relative URL of the transaction error page that PayPal will redirect to upon payment error. If the full URL to this page is https://www.example.com/paypal/action/error.html, the relative URL is paypal/action/error.html."""
  error_url: String!
  """The relative URL of the final confirmation page that PayPal will redirect to upon payment success. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html."""
  return_url: String!
}

"""Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods."""
type CreatePayflowProTokenOutput {
  response_message: String!
  result: Int!
  result_code: Int!
  secure_token: String!
  secure_token_id: String!
}

"""Defines the attributes required to receive a payment token for Express Checkout and Payments Standard payment methods."""
input PaypalExpressTokenInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
  """Payment method code"""
  code: String!
  """Indicates whether the buyer selected the quick checkout button. The default value is false"""
  express_button: Boolean
  """A set of relative URLs that PayPal uses in response to various actions during the authorization process"""
  urls: PaypalExpressUrlsInput!
  """Indicates whether the buyer clicked the PayPal credit button. The default value is false"""
  use_paypal_credit: Boolean
}

"""A set of relative URLs that PayPal will use in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Express Checkout and Payments Standard payment methods."""
input PaypalExpressUrlsInput {
  """The relative URL of the page that PayPal will redirect to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html."""
  cancel_url: String!
  """The relative URL of the page that PayPal will redirect to when the payment has been put on hold for additional review. This condition mostly applies to ACH transactions, and is not applicable to most PayPal solutions. If the full URL to this page is https://www.example.com/paypal/action/success_pending.html, the relative URL is paypal/action/success_pending.html. """
  pending_url: String
  """The relative URL of the final confirmation page that PayPal will redirect to upon payment success. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html."""
  return_url: String!
  """The relative URL of the order confirmation page that PayPal will redirect to when the payment is successful and additional confirmation is not needed. Not applicable to most PayPal solutions. If the full URL to this page is https://www.example.com/paypal/action/success.html, the relative URL is paypal/action/success.html."""
  success_url: String
}

"""Contains the token returned by PayPal and a set of URLs that allow the buyer to authorize payment and adjust checkout details. Applies to Express Checkout and Payments Standard payment methods."""
type PaypalExpressTokenOutput {
  """A set of URLs that allow the buyer to authorize payment and adjust checkout details"""
  paypal_urls: PaypalExpressUrlList
  """The token returned by PayPal"""
  token: String
}

"""A set of URLs that allow the buyer to authorize payment and adjust checkout details for Express Checkout and Payments Standard transactions."""
type PaypalExpressUrlList {
  """The PayPal URL that allows the buyer to edit their checkout details"""
  edit: String
  """The URL to the PayPal login page"""
  start: String
}

input CreateProductReviewInput {
  """The customer's nickname. Defaults to the customer name, if logged in"""
  nickname: String!
  """Ratings details by category. e.g price: 5, quality: 4 etc"""
  ratings: [ProductReviewRatingInput]!
  """The SKU of the reviewed product"""
  sku: String!
  """The summary (title) of the review"""
  summary: String!
  """The review text."""
  text: String!
}

input ProductReviewRatingInput {
  """An encoded rating ID."""
  id: String!
  """An encoded rating value id."""
  value_id: String!
}

type CreateProductReviewOutput {
  """Contains the completed product review"""
  review: ProductReview!
}

type DeleteCompareListOutput {
  """Indicates whether the compare list was successfully deleted"""
  result: Boolean!
}

type DeletePaymentTokenOutput {
  customerPaymentTokens: CustomerPaymentTokens
  result: Boolean!
}

type CustomerToken {
  """The customer token"""
  token: String
}

input GenerateCustomerTokenAsAdminInput {
  """The email address of the customer requesting remote shopping assistance"""
  customer_email: String!
}

type GenerateCustomerTokenAsAdminOutput {
  """The generated customer token"""
  customer_token: String!
}

"""Input required to complete payment. Applies to Payflow Pro and Payments Pro payment methods."""
input PayflowProResponseInput {
  cart_id: String!
  paypal_payload: String!
}

type PayflowProResponseOutput {
  cart: Cart!
}

input MollieProcessTransactionInput {
  """The payment token returned from the PlaceOrder call/added to the return URL"""
  payment_token: String!
}

type MollieProcessTransactionOutput {
  """The cart is only available when the payment status is failed, canceled or expired."""
  cart: Cart
  paymentStatus: PaymentStatusEnum
}

enum PaymentStatusEnum {
  CREATED
  PAID
  AUTHORIZED
  CANCELED
  SHIPPING
  COMPLETED
  EXPIRED
  PENDING
  REFUNDED
  ERROR
}

input MollieResetCartInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

type MollieResetCartOutput {
  cart: Cart!
}

input PlaceOrderInput {
  cart_id: String!
}

type PlaceOrderOutput {
  order: Order!
}

type Order {
  mollie_payment_token: String
  mollie_redirect_url: String
  order_id: String @deprecated(reason: "The order_id field is deprecated, use order_number instead.")
  """The unique ID for a `Order` object."""
  order_number: String!
}

input RemoveCouponFromCartInput {
  cart_id: String!
}

type RemoveCouponFromCartOutput {
  cart: Cart
}

input RemoveItemFromCartInput {
  cart_id: String!
  """Deprecated. Use `cart_item_uid` instead."""
  cart_item_id: Int
  """Required field. The unique ID for a `CartItemInterface` object"""
  cart_item_uid: ID
}

type RemoveItemFromCartOutput {
  cart: Cart!
}

input RemoveProductsFromCompareListInput {
  """An array of product IDs to remove from the compare list"""
  products: [ID]!
  """The unique identifier of the compare list to modify"""
  uid: ID!
}

"""Contains the customer's wish list and any errors encountered"""
type RemoveProductsFromWishlistOutput {
  """An array of errors encountered while deleting products from a wish list"""
  user_errors: [WishListUserInputError]!
  """Contains the wish list with after items were successfully deleted"""
  wishlist: Wishlist!
}

type ReorderItemsOutput {
  """Contains detailed information about the customer's cart."""
  cart: Cart!
  """An array of reordering errors."""
  userInputErrors: [CheckoutUserInputError]!
}

"""An error encountered while adding an item the the cart."""
type CheckoutUserInputError {
  """Checkout-specific error code"""
  code: CheckoutUserInputErrorCodes!
  """Localized error message"""
  message: String!
  """Path to the input field that caused an error. See the GraphQL specification about path errors for details: http://spec.graphql.org/draft/#sec-Errors"""
  path: [String]!
}

enum CheckoutUserInputErrorCodes {
  REORDER_NOT_AVAILABLE
  PRODUCT_NOT_FOUND
  NOT_SALABLE
  INSUFFICIENT_STOCK
  UNDEFINED
}

type RevokeCustomerTokenOutput {
  result: Boolean!
}

input SendEmailToFriendInput {
  product_id: Int!
  recipients: [SendEmailToFriendRecipientInput]!
  sender: SendEmailToFriendSenderInput!
}

input SendEmailToFriendRecipientInput {
  email: String!
  name: String!
}

input SendEmailToFriendSenderInput {
  email: String!
  message: String!
  name: String!
}

type SendEmailToFriendOutput {
  recipients: [SendEmailToFriendRecipient]
  sender: SendEmailToFriendSender
}

type SendEmailToFriendRecipient {
  email: String!
  name: String!
}

type SendEmailToFriendSender {
  email: String!
  message: String!
  name: String!
}

input SetBillingAddressOnCartInput {
  billing_address: BillingAddressInput!
  cart_id: String!
}

input BillingAddressInput {
  address: CartAddressInput
  customer_address_id: Int
  """Set billing address same as shipping"""
  same_as_shipping: Boolean
  """Deprecated: use `same_as_shipping` field instead"""
  use_for_shipping: Boolean
}

input CartAddressInput {
  city: String!
  company: String
  country_code: String!
  firstname: String!
  lastname: String!
  postcode: String
  region: String
  region_id: Int
  """Determines whether to save the address in the customer's address book. The default value is true"""
  save_in_address_book: Boolean
  street: [String]!
  telephone: String!
}

type SetBillingAddressOnCartOutput {
  cart: Cart!
}

input SetGuestEmailOnCartInput {
  cart_id: String!
  email: String!
}

type SetGuestEmailOnCartOutput {
  cart: Cart!
}

input SetPaymentMethodAndPlaceOrderInput {
  cart_id: String!
  payment_method: PaymentMethodInput!
}

input PaymentMethodInput {
  braintree: BraintreeInput
  braintree_cc_vault: BraintreeCcVaultInput
  """Payment method code"""
  code: String!
  """Required input for PayPal Hosted pro payments"""
  hosted_pro: HostedProInput
  klarna: KlarnaInput
  """The card token provided by Mollie Components"""
  mollie_card_token: String
  """Provided the issuer chosen by the end-user"""
  mollie_selected_issuer: String
  """Required input for Payflow Express Checkout payments"""
  payflow_express: PayflowExpressInput
  """Required input for PayPal Payflow Link and Payments Advanced payments"""
  payflow_link: PayflowLinkInput
  """Required input type for PayPal Payflow Pro and Payment Pro payments"""
  payflowpro: PayflowProInput
  """Required input type for PayPal Payflow Pro vault payments"""
  payflowpro_cc_vault: VaultTokenInput
  """Required input for Express Checkout and Payments Standard payments"""
  paypal_express: PaypalExpressInput
  """Purchase order number"""
  purchase_order_number: String
}

input BraintreeInput {
  """Contains a fingerprint provided by Braintree JS SDK and should be sent with sale transaction details to the Braintree payment gateway. Should be specified only in a case if Kount (advanced fraud protection) is enabled for Braintree payment integration."""
  device_data: String
  """States whether an entered by a customer credit/debit card should be tokenized for later usage. Required only if Vault is enabled for Braintree payment integration."""
  is_active_payment_token_enabler: Boolean!
  """The one-time payment token generated by Braintree payment gateway based on card details. Required field to make sale transaction."""
  payment_method_nonce: String!
}

input BraintreeCcVaultInput {
  device_data: String
  public_hash: String!
}

"""A set of relative URLs that PayPal will use in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Payments Pro Hosted Solution payment method."""
input HostedProInput {
  """The relative URL of the page that PayPal will redirect to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html."""
  cancel_url: String!
  """The relative URL of the final confirmation page that PayPal will redirect to upon payment success. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html."""
  return_url: String!
}

input KlarnaInput {
  """The authorization token must be provided to set any Klarna Payments method"""
  authorization_token: String!
}

"""Required input for Payflow Express Checkout payments"""
input PayflowExpressInput {
  """The unique ID of the PayPal user"""
  payer_id: String!
  """The token returned by the createPaypalExpressToken mutation"""
  token: String!
}

"""A set of relative URLs that PayPal will use in response to various actions during the authorization process. Magento prepends the base URL to this value to create a full URL. For example, if the full URL is https://www.example.com/path/to/page.html, the relative URL is path/to/page.html. Use this input for Payflow Link and Payments Advanced payment methods."""
input PayflowLinkInput {
  """The relative URL of the page that PayPal will redirect to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is https://www.example.com/paypal/action/cancel.html, the relative URL is paypal/action/cancel.html."""
  cancel_url: String!
  """The relative URL of the transaction error page that PayPal will redirect to upon payment error. If the full URL to this page is https://www.example.com/paypal/action/error.html, the relative URL is paypal/action/error.html."""
  error_url: String!
  """The relative URL of the order confirmation page that PayPal will redirect to when the payment is successful and additional confirmation is not needed. If the full URL to this page is https://www.example.com/paypal/action/return.html, the relative URL is paypal/action/return.html."""
  return_url: String!
}

"""Required input for Payflow Pro and Payments Pro payment methods."""
input PayflowProInput {
  """Required input for credit card related information"""
  cc_details: CreditCardDetailsInput!
  """States whether details about the customer's credit/debit card should be tokenized for later usage. Required only if Vault is enabled for PayPal Payflow Pro payment integration."""
  is_active_payment_token_enabler: Boolean
}

"""Required fields for Payflow Pro and Payments Pro credit card payments"""
input CreditCardDetailsInput {
  """Credit card expiration month"""
  cc_exp_month: Int!
  """Credit card expiration year"""
  cc_exp_year: Int!
  """Last 4 digits of the credit card"""
  cc_last_4: Int!
  """Credit card type"""
  cc_type: String!
}

"""Required input for payment methods with Vault support."""
input VaultTokenInput {
  """The public hash of the payment token"""
  public_hash: String!
}

"""Required input for Express Checkout and Payments Standard payments"""
input PaypalExpressInput {
  """The unique ID of the PayPal user"""
  payer_id: String!
  """The token returned by the createPaypalExpressToken mutation"""
  token: String!
}

input SetPaymentMethodOnCartInput {
  cart_id: String!
  payment_method: PaymentMethodInput!
}

type SetPaymentMethodOnCartOutput {
  cart: Cart!
}

input SetShippingAddressesOnCartInput {
  cart_id: String!
  shipping_addresses: [ShippingAddressInput]!
}

input ShippingAddressInput {
  address: CartAddressInput
  customer_address_id: Int
  customer_notes: String
  """The code of Pickup Location which will be used for In-Store Pickup."""
  pickup_location_code: String
}

type SetShippingAddressesOnCartOutput {
  cart: Cart!
}

input SetShippingMethodsOnCartInput {
  cart_id: String!
  shipping_methods: [ShippingMethodInput]!
}

input ShippingMethodInput {
  carrier_code: String!
  method_code: String!
}

type SetShippingMethodsOnCartOutput {
  cart: Cart!
}

type SubscribeEmailToNewsletterOutput {
  """Returns the status of the subscription request"""
  status: SubscriptionStatusesEnum
}

enum SubscriptionStatusesEnum {
  NOT_ACTIVE
  SUBSCRIBED
  UNSUBSCRIBED
  UNCONFIRMED
}

input UpdateCartItemsInput {
  cart_id: String!
  cart_items: [CartItemUpdateInput]!
}

input CartItemUpdateInput {
  """Deprecated. Use `cart_item_uid` instead."""
  cart_item_id: Int
  """The unique ID for a `CartItemInterface` object"""
  cart_item_uid: ID
  customizable_options: [CustomizableOptionInput]
  """Gift message details for the cart item"""
  gift_message: GiftMessageInput
  quantity: Float
}

"""Contains the text of a gift message, its sender, and recipient"""
input GiftMessageInput {
  """Sender name"""
  from: String!
  """Gift message text"""
  message: String!
  """Recipient name"""
  to: String!
}

type UpdateCartItemsOutput {
  cart: Cart!
}

input CustomerUpdateInput {
  """Indicates whether the customer has enabled remote shopping assistance"""
  allow_remote_shopping_assistance: Boolean
  """The customer's date of birth"""
  date_of_birth: String
  """Deprecated: Use `date_of_birth` instead"""
  dob: String
  """The customer's first name"""
  firstname: String
  """The customer's gender (Male - 1, Female - 2)"""
  gender: Int
  """Indicates whether the customer is subscribed to the company's newsletter"""
  is_subscribed: Boolean
  """The customer's family name"""
  lastname: String
  """The customer's middle name"""
  middlename: String
  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String
  """A value such as Sr., Jr., or III"""
  suffix: String
  """The customer's Tax/VAT number (for corporate customers)"""
  taxvat: String
}

"""Defines updates to items in a wish list"""
input WishlistItemUpdateInput {
  """Customer-entered comments about the item"""
  description: String
  """An array of options that the customer entered"""
  entered_options: [EnteredOptionInput]
  """The new amount or number of this item"""
  quantity: Float
  """An array of strings corresponding to options the customer selected"""
  selected_options: [ID]
  """The unique ID for a `WishlistItemInterface` object"""
  wishlist_item_id: ID!
}

"""Contains the customer's wish list and any errors encountered"""
type UpdateProductsInWishlistOutput {
  """An array of errors encountered while updating products in a wish list"""
  user_errors: [WishListUserInputError]!
  """Contains the wish list with all items that were successfully updated"""
  wishlist: Wishlist!
}

"""ProductLinks is an implementation of ProductLinksInterface."""
type ProductLinks implements ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String
  """The SKU of the linked product."""
  linked_product_sku: String
  """The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable)."""
  linked_product_type: String
  """The position within the list of product links."""
  position: Int
  """The identifier of the linked product."""
  sku: String
}

"""PhysicalProductInterface contains attributes specific to tangible products."""
interface PhysicalProductInterface {
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""CustomizableAreaOption contains information about a text area that is defined as part of a customizable option."""
type CustomizableAreaOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a text area."""
  value: CustomizableAreaValue
}

"""The CustomizableOptionInterface contains basic information about a customizable option. It can be implemented by several types of configurable options."""
interface CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
}

"""CustomizableAreaValue defines the price and sku of a product whose page contains a customized text area."""
type CustomizableAreaValue {
  """The maximum number of characters that can be entered for this customizable option."""
  max_characters: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The unique ID for a `CustomizableAreaValue` object."""
  uid: ID!
}

"""CustomizableDateOption contains information about a date picker that is defined as part of a customizable option."""
type CustomizableDateOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a date field in a customizable option."""
  value: CustomizableDateValue
}

"""CustomizableDateValue defines the price and sku of a product whose page contains a customized date picker."""
type CustomizableDateValue {
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The unique ID for a `CustomizableDateValue` object."""
  uid: ID!
}

"""CustomizableDropDownOption contains information about a drop down menu that is defined as part of a customizable option."""
type CustomizableDropDownOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines the set of options for a drop down menu."""
  value: [CustomizableDropDownValue]
}

"""CustomizableDropDownValue defines the price and sku of a product whose page contains a customized drop down menu."""
type CustomizableDropDownValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableDropDownValue` object."""
  uid: ID!
}

"""CustomizableMultipleOption contains information about a multiselect that is defined as part of a customizable option."""
type CustomizableMultipleOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines the set of options for a multiselect."""
  value: [CustomizableMultipleValue]
}

"""CustomizableMultipleValue defines the price and sku of a product whose page contains a customized multiselect."""
type CustomizableMultipleValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableMultipleValue` object."""
  uid: ID!
}

"""CustomizableFieldOption contains information about a text field that is defined as part of a customizable option."""
type CustomizableFieldOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a text field."""
  value: CustomizableFieldValue
}

"""CustomizableFieldValue defines the price and sku of a product whose page contains a customized text field."""
type CustomizableFieldValue {
  """The maximum number of characters that can be entered for this customizable option."""
  max_characters: Int
  """The price of the custom value."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The unique ID for a `CustomizableFieldValue` object."""
  uid: ID!
}

"""CustomizableFileOption contains information about a file picker that is defined as part of a customizable option."""
type CustomizableFileOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """The Stock Keeping Unit of the base product."""
  product_sku: String
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An object that defines a file value."""
  value: CustomizableFileValue
}

"""CustomizableFileValue defines the price and sku of a product whose page contains a customized file picker."""
type CustomizableFileValue {
  """The file extension to accept."""
  file_extension: String
  """The maximum width of an image."""
  image_size_x: Int
  """The maximum height of an image."""
  image_size_y: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The unique ID for a `CustomizableFileValue` object."""
  uid: ID!
}

"""Contains information about a product video."""
type ProductVideo implements MediaGalleryInterface {
  """Whether the image is hidden from view."""
  disabled: Boolean
  """The label of the product image or video."""
  label: String
  """The media item's position after it has been sorted."""
  position: Int
  """The URL of the product image or video."""
  url: String
  """Contains a ProductMediaGalleryEntriesVideoContent object."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

"""CustomizableProductInterface contains information about customizable product options."""
interface CustomizableProductInterface {
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
}

"""CustomizableRadioOption contains information about a set of radio buttons that are defined as part of a customizable option."""
type CustomizableRadioOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines a set of radio buttons."""
  value: [CustomizableRadioValue]
}

"""CustomizableRadioValue defines the price and sku of a product whose page contains a customized set of radio buttons."""
type CustomizableRadioValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the radio button is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableRadioValue` object."""
  uid: ID!
}

"""CustomizableCheckbbixOption contains information about a set of checkbox values that are defined as part of a customizable option."""
type CustomizableCheckboxOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether the option is required."""
  required: Boolean
  """The order in which the option is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
  """An array that defines a set of checkbox values."""
  value: [CustomizableCheckboxValue]
}

"""CustomizableCheckboxValue defines the price and sku of a product whose page contains a customized set of checkbox values."""
type CustomizableCheckboxValue {
  """The ID assigned to the value."""
  option_type_id: Int
  """The price assigned to this option."""
  price: Float
  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """The Stock Keeping Unit for this option."""
  sku: String
  """The order in which the checkbox value is displayed."""
  sort_order: Int
  """The display name for this option."""
  title: String
  """The unique ID for a `CustomizableCheckboxValue` object."""
  uid: ID!
}

"""A virtual product is non-tangible product that does not require shipping and is not kept in inventory."""
type VirtualProduct implements ProductInterface & CustomizableProductInterface {
  activity: String
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  backorder_delivery_date: String
  backorder_delivery_period: Int
  """Relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled"""
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String
  climate: String
  collar: String
  color: Int
  colors: String
  compatible_phones: Int
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """Detailed information about the product. The value can include simple HTML tags."""
  description: ComplexTextValue
  dominant_color: Int
  eco_collection: Int
  erin_recommends: Int
  features_bags: String
  format: Int
  gender: String
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  in_stock_delivery_period: Int
  """A number representing the product's manufacturer."""
  manufacturer: Int
  material: Int
  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")
  """A brief overview of the product for search results listings, maximum 255 characters."""
  meta_description: String
  """A comma-separated list of keywords that are visible only to search engines."""
  meta_keyword: String
  """A string that is displayed in the title bar and tab of the browser and in search results lists."""
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int
  """The beginning date for new product listings, and determines if the product is featured as a new product."""
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """If the product has multiple options, determines where they appear on the product page."""
  options_container: String
  pattern: String
  performance_fabric: Int
  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")
  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!
  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  print_art: String
  print_holiday: String
  print_labels: String
  print_landmarks: String
  print_landscape: String
  print_mood: String
  print_pattern_swatch: Int
  print_type: String
  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """Related Products"""
  related_products: [ProductInterface]
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20
    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int
  """A number or code assigned to a product to identify the product, options, price, and manufacturer."""
  sku: String
  sleeve: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date that a product has a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String
  style_bags: String
  style_bottom: String
  style_general: String
  """The file name of a swatch image"""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """The price when tier pricing is in effect and the items purchased threshold has been reached."""
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")
  """One of simple, virtual, bundle, downloadable, grouped, or configurable."""
  type_id: String @deprecated(reason: "Use __typename instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

"""A simple product is tangible and are usually sold as single units or in fixed quantities."""
type SimpleProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  activity: String
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  backorder_delivery_date: String
  backorder_delivery_period: Int
  """Relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled"""
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String
  climate: String
  collar: String
  color: Int
  colors: String
  compatible_phones: Int
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """Detailed information about the product. The value can include simple HTML tags."""
  description: ComplexTextValue
  dominant_color: Int
  eco_collection: Int
  erin_recommends: Int
  features_bags: String
  format: Int
  gender: String
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  in_stock_delivery_period: Int
  """A number representing the product's manufacturer."""
  manufacturer: Int
  material: Int
  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")
  """A brief overview of the product for search results listings, maximum 255 characters."""
  meta_description: String
  """A comma-separated list of keywords that are visible only to search engines."""
  meta_keyword: String
  """A string that is displayed in the title bar and tab of the browser and in search results lists."""
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int
  """The beginning date for new product listings, and determines if the product is featured as a new product."""
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """If the product has multiple options, determines where they appear on the product page."""
  options_container: String
  pattern: String
  performance_fabric: Int
  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")
  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!
  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  print_art: String
  print_holiday: String
  print_labels: String
  print_landmarks: String
  print_landscape: String
  print_mood: String
  print_pattern_swatch: Int
  print_type: String
  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """Related Products"""
  related_products: [ProductInterface]
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20
    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int
  """A number or code assigned to a product to identify the product, options, price, and manufacturer."""
  sku: String
  sleeve: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date that a product has a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String
  style_bags: String
  style_bottom: String
  style_general: String
  """The file name of a swatch image"""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """The price when tier pricing is in effect and the items purchased threshold has been reached."""
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")
  """One of simple, virtual, bundle, downloadable, grouped, or configurable."""
  type_id: String @deprecated(reason: "Use __typename instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""ProductFilterInput is deprecated, use @ProductAttributeFilterInput instead. ProductFilterInput defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for."""
input ProductFilterInput {
  """Category ID the product belongs to."""
  category_id: FilterTypeInput
  """The product's country of origin."""
  country_of_manufacture: FilterTypeInput
  """Timestamp indicating when the product was created."""
  created_at: FilterTypeInput
  """The name of a custom layout."""
  custom_layout: FilterTypeInput
  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: FilterTypeInput
  """Detailed information about the product. The value can include simple HTML tags."""
  description: FilterTypeInput
  """Indicates whether a gift message is available."""
  gift_message_available: FilterTypeInput
  """Indicates whether additional attributes have been created for the product."""
  has_options: FilterTypeInput
  """The relative path to the main image on the product page."""
  image: FilterTypeInput
  """The label assigned to a product image."""
  image_label: FilterTypeInput
  """A number representing the product's manufacturer."""
  manufacturer: FilterTypeInput
  """The numeric maximal price of the product. Do not include the currency code."""
  max_price: FilterTypeInput
  """A brief overview of the product for search results listings, maximum 255 characters."""
  meta_description: FilterTypeInput
  """A comma-separated list of keywords that are visible only to search engines."""
  meta_keyword: FilterTypeInput
  """A string that is displayed in the title bar and tab of the browser and in search results lists."""
  meta_title: FilterTypeInput
  """The numeric minimal price of the product. Do not include the currency code."""
  min_price: FilterTypeInput
  """The product name. Customers use this name to identify the product."""
  name: FilterTypeInput
  """The beginning date for new product listings, and determines if the product is featured as a new product."""
  news_from_date: FilterTypeInput
  """The end date for new product listings."""
  news_to_date: FilterTypeInput
  """If the product has multiple options, determines where they appear on the product page."""
  options_container: FilterTypeInput
  """The keyword required to perform a logical OR comparison."""
  or: ProductFilterInput
  """The price of an item."""
  price: FilterTypeInput
  """Indicates whether the product has required options."""
  required_options: FilterTypeInput
  """A short description of the product. Its use depends on the theme."""
  short_description: FilterTypeInput
  """A number or code assigned to a product to identify the product, options, price, and manufacturer."""
  sku: FilterTypeInput
  """The relative path to the small image, which is used on catalog pages."""
  small_image: FilterTypeInput
  """The label assigned to a product's small image."""
  small_image_label: FilterTypeInput
  """The beginning date that a product has a special price."""
  special_from_date: FilterTypeInput
  """The discounted price of the product. Do not include the currency code."""
  special_price: FilterTypeInput
  """The end date that a product has a special price."""
  special_to_date: FilterTypeInput
  """The file name of a swatch image"""
  swatch_image: FilterTypeInput
  """The relative path to the product's thumbnail image."""
  thumbnail: FilterTypeInput
  """The label assigned to a product's thumbnail image."""
  thumbnail_label: FilterTypeInput
  """The price when tier pricing is in effect and the items purchased threshold has been reached."""
  tier_price: FilterTypeInput
  """Timestamp indicating when the product was updated."""
  updated_at: FilterTypeInput
  """The part of the URL that identifies the product"""
  url_key: FilterTypeInput
  url_path: FilterTypeInput
  """The weight of the item, in units defined by the store."""
  weight: FilterTypeInput
}

"""ProductSortInput is deprecated, use @ProductAttributeSortInput instead. ProductSortInput specifies the attribute to use for sorting search results and indicates whether the results are sorted in ascending or descending order."""
input ProductSortInput {
  """The product's country of origin."""
  country_of_manufacture: SortEnum
  """Timestamp indicating when the product was created."""
  created_at: SortEnum
  """The name of a custom layout."""
  custom_layout: SortEnum
  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: SortEnum
  """Detailed information about the product. The value can include simple HTML tags."""
  description: SortEnum
  """Indicates whether a gift message is available."""
  gift_message_available: SortEnum
  """Indicates whether additional attributes have been created for the product."""
  has_options: SortEnum
  """The relative path to the main image on the product page."""
  image: SortEnum
  """The label assigned to a product image."""
  image_label: SortEnum
  """A number representing the product's manufacturer."""
  manufacturer: SortEnum
  """A brief overview of the product for search results listings, maximum 255 characters."""
  meta_description: SortEnum
  """A comma-separated list of keywords that are visible only to search engines."""
  meta_keyword: SortEnum
  """A string that is displayed in the title bar and tab of the browser and in search results lists."""
  meta_title: SortEnum
  """The product name. Customers use this name to identify the product."""
  name: SortEnum
  """The beginning date for new product listings, and determines if the product is featured as a new product."""
  news_from_date: SortEnum
  """The end date for new product listings."""
  news_to_date: SortEnum
  """If the product has multiple options, determines where they appear on the product page."""
  options_container: SortEnum
  """The price of the item."""
  price: SortEnum
  """Indicates whether the product has required options."""
  required_options: SortEnum
  """A short description of the product. Its use depends on the theme."""
  short_description: SortEnum
  """A number or code assigned to a product to identify the product, options, price, and manufacturer."""
  sku: SortEnum
  """The relative path to the small image, which is used on catalog pages."""
  small_image: SortEnum
  """The label assigned to a product's small image."""
  small_image_label: SortEnum
  """The beginning date that a product has a special price."""
  special_from_date: SortEnum
  """The discounted price of the product."""
  special_price: SortEnum
  """The end date that a product has a special price."""
  special_to_date: SortEnum
  """The file name of a swatch image"""
  swatch_image: SortEnum
  """The relative path to the product's thumbnail image."""
  thumbnail: SortEnum
  """The label assigned to a product's thumbnail image."""
  thumbnail_label: SortEnum
  """The price when tier pricing is in effect and the items purchased threshold has been reached."""
  tier_price: SortEnum
  """Timestamp indicating when the product was updated."""
  updated_at: SortEnum
  """The part of the URL that identifies the product"""
  url_key: SortEnum
  url_path: SortEnum
  """The weight of the item, in units defined by the store."""
  weight: SortEnum
}

type LayerFilterItem implements LayerFilterItemInterface {
  """Count of items by filter."""
  items_count: Int @deprecated(reason: "Use AggregationOption.count instead.")
  """Filter label."""
  label: String @deprecated(reason: "Use AggregationOption.label instead.")
  """Value for filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use AggregationOption.value instead.")
}

"""A simple product wish list Item"""
type SimpleWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!
  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item"""
  description: String
  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!
  """Product details of the wish list item"""
  product: ProductInterface
  """The quantity of this wish list item"""
  quantity: Float!
}

"""A virtual product wish list item"""
type VirtualWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!
  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item"""
  description: String
  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!
  """Product details of the wish list item"""
  product: ProductInterface
  """The quantity of this wish list item"""
  quantity: Float!
}

"""Simple Cart Item"""
type SimpleCartItem implements CartItemInterface {
  customizable_options: [SelectedCustomizableOption]!
  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  id: String! @deprecated(reason: "Use `uid` instead")
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

"""Virtual Cart Item"""
type VirtualCartItem implements CartItemInterface {
  customizable_options: [SelectedCustomizableOption]!
  id: String! @deprecated(reason: "Use `uid` instead")
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

"""Downloadable Cart Item"""
type DownloadableCartItem implements CartItemInterface {
  customizable_options: [SelectedCustomizableOption]!
  id: String! @deprecated(reason: "Use `uid` instead")
  """An array containing information about the links for the added to cart downloadable product"""
  links: [DownloadableProductLinks]
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
  """DownloadableProductSamples defines characteristics of a downloadable product"""
  samples: [DownloadableProductSamples]
  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

"""DownloadableProductLinks defines characteristics of a downloadable product"""
type DownloadableProductLinks {
  id: Int @deprecated(reason: "This information should not be exposed on frontend")
  is_shareable: Boolean @deprecated(reason: "This information should not be exposed on frontend")
  link_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  number_of_downloads: Int @deprecated(reason: "This information should not be exposed on frontend")
  """The price of the downloadable product"""
  price: Float
  sample_file: String @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  sample_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  """URL to the downloadable sample"""
  sample_url: String
  """A number indicating the sort order"""
  sort_order: Int
  """The display name of the link"""
  title: String
  """The unique ID for a `DownloadableProductLinks` object."""
  uid: ID!
}

enum DownloadableFileTypeEnum {
  FILE
  URL
}

"""DownloadableProductSamples defines characteristics of a downloadable product"""
type DownloadableProductSamples {
  id: Int @deprecated(reason: "This information should not be exposed on frontend")
  sample_file: String @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  sample_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  """URL to the downloadable sample"""
  sample_url: String
  """A number indicating the sort order"""
  sort_order: Int
  """The display name of the sample"""
  title: String
}

"""DownloadableProduct defines a product that the customer downloads"""
type DownloadableProduct implements ProductInterface & CustomizableProductInterface {
  activity: String
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  backorder_delivery_date: String
  backorder_delivery_period: Int
  """Relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled"""
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String
  climate: String
  collar: String
  color: Int
  colors: String
  compatible_phones: Int
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """Detailed information about the product. The value can include simple HTML tags."""
  description: ComplexTextValue
  dominant_color: Int
  """An array containing information about the links for this downloadable product"""
  downloadable_product_links: [DownloadableProductLinks]
  """An array containing information about samples of this downloadable product."""
  downloadable_product_samples: [DownloadableProductSamples]
  eco_collection: Int
  erin_recommends: Int
  features_bags: String
  format: Int
  gender: String
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  in_stock_delivery_period: Int
  """A value of 1 indicates that each link in the array must be purchased separately"""
  links_purchased_separately: Int
  """The heading above the list of downloadable products"""
  links_title: String
  """A number representing the product's manufacturer."""
  manufacturer: Int
  material: Int
  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")
  """A brief overview of the product for search results listings, maximum 255 characters."""
  meta_description: String
  """A comma-separated list of keywords that are visible only to search engines."""
  meta_keyword: String
  """A string that is displayed in the title bar and tab of the browser and in search results lists."""
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int
  """The beginning date for new product listings, and determines if the product is featured as a new product."""
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """If the product has multiple options, determines where they appear on the product page."""
  options_container: String
  pattern: String
  performance_fabric: Int
  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")
  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!
  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  print_art: String
  print_holiday: String
  print_labels: String
  print_landmarks: String
  print_landscape: String
  print_mood: String
  print_pattern_swatch: Int
  print_type: String
  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """Related Products"""
  related_products: [ProductInterface]
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20
    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int
  """A number or code assigned to a product to identify the product, options, price, and manufacturer."""
  sku: String
  sleeve: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date that a product has a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String
  style_bags: String
  style_bottom: String
  style_general: String
  """The file name of a swatch image"""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """The price when tier pricing is in effect and the items purchased threshold has been reached."""
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")
  """One of simple, virtual, bundle, downloadable, grouped, or configurable."""
  type_id: String @deprecated(reason: "Use __typename instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

type DownloadableOrderItem implements OrderItemInterface {
  """The final discount information for the product"""
  discounts: [Discount]
  """A list of downloadable links that are ordered from the downloadable product"""
  downloadable_links: [DownloadableItemsLinks]
  """The entered option for the base product, such as a logo or image"""
  entered_options: [OrderItemOption]
  """The unique ID for a `OrderItemInterface` object"""
  id: ID!
  """The name of the base product"""
  product_name: String
  """The sale price of the base product, including selected options"""
  product_sale_price: Money!
  """The SKU of the base product"""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product"""
  product_url_key: String
  """The number of canceled items"""
  quantity_canceled: Float
  """The number of invoiced items"""
  quantity_invoiced: Float
  """The number of units ordered for this item"""
  quantity_ordered: Float
  """The number of refunded items"""
  quantity_refunded: Float
  """The number of returned items"""
  quantity_returned: Float
  """The number of shipped items"""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size"""
  selected_options: [OrderItemOption]
  """The status of the order item"""
  status: String
}

"""DownloadableProductLinks defines characteristics of a downloadable product"""
type DownloadableItemsLinks {
  """A number indicating the sort order"""
  sort_order: Int
  """The display name of the link"""
  title: String
  """The unique ID for a `DownloadableItemsLinks` object."""
  uid: ID!
}

type DownloadableInvoiceItem implements InvoiceItemInterface {
  """Contains information about the final discount amount for the base product, including discounts on options"""
  discounts: [Discount]
  """A list of downloadable links that are invoiced from the downloadable product"""
  downloadable_links: [DownloadableItemsLinks]
  """The unique ID for a `InvoiceItemInterface` object"""
  id: ID!
  """Contains details about an individual order item"""
  order_item: OrderItemInterface
  """The name of the base product"""
  product_name: String
  """The sale price for the base product including selected options"""
  product_sale_price: Money!
  """The SKU of the base product"""
  product_sku: String!
  """The number of invoiced items"""
  quantity_invoiced: Float
}

type DownloadableCreditMemoItem implements CreditMemoItemInterface {
  """Contains information about the final discount amount for the base product, including discounts on options"""
  discounts: [Discount]
  """A list of downloadable links that are refunded from the downloadable product"""
  downloadable_links: [DownloadableItemsLinks]
  """The unique ID for a `CreditMemoItemInterface` object"""
  id: ID!
  """The order item the credit memo is applied to"""
  order_item: OrderItemInterface
  """The name of the base product"""
  product_name: String
  """The sale price for the base product, including selected options"""
  product_sale_price: Money!
  """SKU of the base product"""
  product_sku: String!
  """The number of refunded items"""
  quantity_refunded: Float
}

"""A downloadable product wish list item"""
type DownloadableWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!
  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item"""
  description: String
  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!
  """An array containing information about the selected links"""
  links_v2: [DownloadableProductLinks]
  """Product details of the wish list item"""
  product: ProductInterface
  """The quantity of this wish list item"""
  quantity: Float!
  """An array containing information about the selected samples"""
  samples: [DownloadableProductSamples]
}

type BundleCartItem implements CartItemInterface {
  bundle_options: [SelectedBundleOption]!
  customizable_options: [SelectedCustomizableOption]!
  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  id: String! @deprecated(reason: "Use `uid` instead")
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

type SelectedBundleOption {
  id: Int! @deprecated(reason: "Use `uid` instead")
  label: String!
  type: String!
  """The unique ID for a `SelectedBundleOption` object"""
  uid: ID!
  values: [SelectedBundleOptionValue]!
}

type SelectedBundleOptionValue {
  """Use `uid` instead"""
  id: Int!
  label: String!
  price: Float!
  quantity: Float!
  """The unique ID for a `SelectedBundleOptionValue` object"""
  uid: ID!
}

"""BundleItem defines an individual item in a bundle product."""
type BundleItem {
  """An ID assigned to each type of item in a bundle product."""
  option_id: Int @deprecated(reason: "Use `uid` instead")
  """An array of additional options for this bundle item."""
  options: [BundleItemOption]
  """he relative position of this item compared to the other bundle items."""
  position: Int
  """Indicates whether the item must be included in the bundle."""
  required: Boolean
  """The SKU of the bundle product."""
  sku: String
  """The display name of the item."""
  title: String
  """The input type that the customer uses to select the item. Examples include radio button and checkbox."""
  type: String
  """The unique ID for a `BundleItem` object."""
  uid: ID
}

"""BundleItemOption defines characteristics and options for a specific bundle item."""
type BundleItemOption {
  """Indicates whether the customer can change the number of items for this option."""
  can_change_quantity: Boolean
  """The ID assigned to the bundled item option."""
  id: Int @deprecated(reason: "Use `uid` instead")
  """Indicates whether this option is the default option."""
  is_default: Boolean
  """The text that identifies the bundled item option."""
  label: String
  """When a bundle item contains multiple options, the relative position of this option compared to the other options."""
  position: Int
  """The price of the selected option."""
  price: Float
  """One of FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum
  """Contains details about this product option."""
  product: ProductInterface
  """Indicates the quantity of this specific bundle item."""
  qty: Float @deprecated(reason: "The `qty` is deprecated. Use `quantity` instead.")
  """Indicates the quantity of this specific bundle item."""
  quantity: Float
  """The unique ID for a `BundleItemOption` object."""
  uid: ID!
}

"""BundleProduct defines basic features of a bundle product and contains multiple BundleItems."""
type BundleProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  activity: String
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  backorder_delivery_date: String
  backorder_delivery_period: Int
  """Relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled"""
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String
  climate: String
  collar: String
  color: Int
  colors: String
  compatible_phones: Int
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """Detailed information about the product. The value can include simple HTML tags."""
  description: ComplexTextValue
  dominant_color: Int
  """Indicates whether the bundle product has a dynamic price."""
  dynamic_price: Boolean
  """Indicates whether the bundle product has a dynamic SK."""
  dynamic_sku: Boolean
  """Indicates whether the bundle product has a dynamically calculated weight."""
  dynamic_weight: Boolean
  eco_collection: Int
  erin_recommends: Int
  features_bags: String
  format: Int
  gender: String
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  in_stock_delivery_period: Int
  """An array containing information about individual bundle items."""
  items: [BundleItem]
  """A number representing the product's manufacturer."""
  manufacturer: Int
  material: Int
  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")
  """A brief overview of the product for search results listings, maximum 255 characters."""
  meta_description: String
  """A comma-separated list of keywords that are visible only to search engines."""
  meta_keyword: String
  """A string that is displayed in the title bar and tab of the browser and in search results lists."""
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int
  """The beginning date for new product listings, and determines if the product is featured as a new product."""
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """If the product has multiple options, determines where they appear on the product page."""
  options_container: String
  pattern: String
  performance_fabric: Int
  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")
  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!
  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  """One of PRICE_RANGE or AS_LOW_AS."""
  price_view: PriceViewEnum
  print_art: String
  print_holiday: String
  print_labels: String
  print_landmarks: String
  print_landscape: String
  print_mood: String
  print_pattern_swatch: Int
  print_type: String
  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """Related Products"""
  related_products: [ProductInterface]
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20
    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int
  """Indicates whether to ship bundle items together or individually."""
  ship_bundle_items: ShipBundleItemsEnum
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int
  """A number or code assigned to a product to identify the product, options, price, and manufacturer."""
  sku: String
  sleeve: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date that a product has a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String
  style_bags: String
  style_bottom: String
  style_general: String
  """The file name of a swatch image"""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """The price when tier pricing is in effect and the items purchased threshold has been reached."""
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")
  """One of simple, virtual, bundle, downloadable, grouped, or configurable."""
  type_id: String @deprecated(reason: "Use __typename instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""This enumeration defines whether a bundle product's price is displayed as the lowest possible value or as a range."""
enum PriceViewEnum {
  PRICE_RANGE
  AS_LOW_AS
}

"""This enumeration defines whether bundle items must be shipped together."""
enum ShipBundleItemsEnum {
  TOGETHER
  SEPARATELY
}

type BundleOrderItem implements OrderItemInterface {
  """A list of bundle options that are assigned to the bundle product"""
  bundle_options: [ItemSelectedBundleOption]
  """The final discount information for the product"""
  discounts: [Discount]
  """The entered option for the base product, such as a logo or image"""
  entered_options: [OrderItemOption]
  """The unique ID for a `OrderItemInterface` object"""
  id: ID!
  """The name of the base product"""
  product_name: String
  """The sale price of the base product, including selected options"""
  product_sale_price: Money!
  """The SKU of the base product"""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product"""
  product_url_key: String
  """The number of canceled items"""
  quantity_canceled: Float
  """The number of invoiced items"""
  quantity_invoiced: Float
  """The number of units ordered for this item"""
  quantity_ordered: Float
  """The number of refunded items"""
  quantity_refunded: Float
  """The number of returned items"""
  quantity_returned: Float
  """The number of shipped items"""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size"""
  selected_options: [OrderItemOption]
  """The status of the order item"""
  status: String
}

"""A list of options of the selected bundle product"""
type ItemSelectedBundleOption {
  """The unique ID for a `ItemSelectedBundleOption` object"""
  id: ID! @deprecated(reason: "Use `uid` instead")
  """The label of the option"""
  label: String!
  """The unique ID for a `ItemSelectedBundleOption` object"""
  uid: ID!
  """A list of products that represent the values of the parent option"""
  values: [ItemSelectedBundleOptionValue]
}

"""A list of values for the selected bundle product"""
type ItemSelectedBundleOptionValue {
  """The unique ID for a `ItemSelectedBundleOptionValue` object"""
  id: ID! @deprecated(reason: "Use `uid` instead")
  """The price of the child bundle product"""
  price: Money!
  """The name of the child bundle product"""
  product_name: String!
  """The SKU of the child bundle product"""
  product_sku: String!
  """Indicates how many of this bundle product were ordered"""
  quantity: Float!
  """The unique ID for a `ItemSelectedBundleOptionValue` object"""
  uid: ID!
}

type BundleInvoiceItem implements InvoiceItemInterface {
  """A list of bundle options that are assigned to the bundle product"""
  bundle_options: [ItemSelectedBundleOption]
  """Contains information about the final discount amount for the base product, including discounts on options"""
  discounts: [Discount]
  """The unique ID for a `InvoiceItemInterface` object"""
  id: ID!
  """Contains details about an individual order item"""
  order_item: OrderItemInterface
  """The name of the base product"""
  product_name: String
  """The sale price for the base product including selected options"""
  product_sale_price: Money!
  """The SKU of the base product"""
  product_sku: String!
  """The number of invoiced items"""
  quantity_invoiced: Float
}

type BundleShipmentItem implements ShipmentItemInterface {
  """A list of bundle options that are assigned to the bundle product"""
  bundle_options: [ItemSelectedBundleOption]
  """The unique ID for a `ShipmentItemInterface` object"""
  id: ID!
  """Associated order item"""
  order_item: OrderItemInterface
  """Name of the base product"""
  product_name: String
  """Sale price for the base product"""
  product_sale_price: Money!
  """SKU of the base product"""
  product_sku: String!
  """Number of shipped items"""
  quantity_shipped: Float!
}

type BundleCreditMemoItem implements CreditMemoItemInterface {
  """A list of bundle options that are assigned to the bundle product"""
  bundle_options: [ItemSelectedBundleOption]
  """Contains information about the final discount amount for the base product, including discounts on options"""
  discounts: [Discount]
  """The unique ID for a `CreditMemoItemInterface` object"""
  id: ID!
  """The order item the credit memo is applied to"""
  order_item: OrderItemInterface
  """The name of the base product"""
  product_name: String
  """The sale price for the base product, including selected options"""
  product_sale_price: Money!
  """SKU of the base product"""
  product_sku: String!
  """The number of refunded items"""
  quantity_refunded: Float
}

type BundleWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!
  """An array containing information about the selected bundle items"""
  bundle_options: [SelectedBundleOption]
  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item"""
  description: String
  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!
  """Product details of the wish list item"""
  product: ProductInterface
  """The quantity of this wish list item"""
  quantity: Float!
}

type ConfigurableCartItem implements CartItemInterface {
  configurable_options: [SelectedConfigurableOption]!
  customizable_options: [SelectedCustomizableOption]
  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  id: String! @deprecated(reason: "Use `uid` instead")
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

type SelectedConfigurableOption {
  """The unique ID for a `ConfigurableProductOptions` object"""
  configurable_product_option_uid: ID!
  """The unique ID for a `ConfigurableProductOptionsValues` object"""
  configurable_product_option_value_uid: ID!
  id: Int! @deprecated(reason: "Use SelectedConfigurableOption.configurable_product_option_uid instead")
  option_label: String!
  value_id: Int! @deprecated(reason: "Use SelectedConfigurableOption.configurable_product_option_value_uid instead")
  value_label: String!
}

type SalesItemInterface {
  """The entered gift message for the order item"""
  gift_message: GiftMessage
}

"""GroupedProduct defines a grouped product"""
type GroupedProduct implements ProductInterface & PhysicalProductInterface {
  activity: String
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  backorder_delivery_date: String
  backorder_delivery_period: Int
  """Relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled"""
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String
  climate: String
  collar: String
  color: Int
  colors: String
  compatible_phones: Int
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """Detailed information about the product. The value can include simple HTML tags."""
  description: ComplexTextValue
  dominant_color: Int
  eco_collection: Int
  erin_recommends: Int
  features_bags: String
  format: Int
  gender: String
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  in_stock_delivery_period: Int
  """An array containing grouped product items"""
  items: [GroupedProductItem]
  """A number representing the product's manufacturer."""
  manufacturer: Int
  material: Int
  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")
  """A brief overview of the product for search results listings, maximum 255 characters."""
  meta_description: String
  """A comma-separated list of keywords that are visible only to search engines."""
  meta_keyword: String
  """A string that is displayed in the title bar and tab of the browser and in search results lists."""
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int
  """The beginning date for new product listings, and determines if the product is featured as a new product."""
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """If the product has multiple options, determines where they appear on the product page."""
  options_container: String
  pattern: String
  performance_fabric: Int
  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")
  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!
  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  print_art: String
  print_holiday: String
  print_labels: String
  print_landmarks: String
  print_landscape: String
  print_mood: String
  print_pattern_swatch: Int
  print_type: String
  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """Related Products"""
  related_products: [ProductInterface]
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20
    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int
  """A number or code assigned to a product to identify the product, options, price, and manufacturer."""
  sku: String
  sleeve: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date that a product has a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String
  style_bags: String
  style_bottom: String
  style_general: String
  """The file name of a swatch image"""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """The price when tier pricing is in effect and the items purchased threshold has been reached."""
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")
  """One of simple, virtual, bundle, downloadable, grouped, or configurable."""
  type_id: String @deprecated(reason: "Use __typename instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""GroupedProductItem contains information about an individual grouped product item"""
type GroupedProductItem {
  """The relative position of this item compared to the other group items"""
  position: Int
  """The ProductInterface object, which contains details about this product option"""
  product: ProductInterface
  """The quantity of this grouped product item"""
  qty: Float
}

"""A grouped product wish list item"""
type GroupedProductWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!
  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item"""
  description: String
  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!
  """Product details of the wish list item"""
  product: ProductInterface
  """The quantity of this wish list item"""
  quantity: Float!
}

"""Deprecated: use type `PaypalExpressTokenOutput` instead"""
type PaypalExpressToken {
  """A set of URLs that allow the buyer to authorize payment and adjust checkout details"""
  paypal_urls: PaypalExpressUrlList @deprecated(reason: "Use field `paypal_urls` of type `PaypalExpressTokenOutput` instead")
  """The token returned by PayPal"""
  token: String @deprecated(reason: "Use field `token` of type `PaypalExpressTokenOutput` instead")
}

"""Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods."""
type PayflowProToken {
  response_message: String!
  result: Int!
  result_code: Int!
  secure_token: String!
  secure_token_id: String!
}

"""ConfigurableProduct defines basic features of a configurable product and its simple product variants"""
type ConfigurableProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  activity: String
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  backorder_delivery_date: String
  backorder_delivery_period: Int
  """Relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled"""
  canonical_url: String
  """The categories assigned to a product."""
  categories: [CategoryInterface]
  category_gear: String
  climate: String
  collar: String
  color: Int
  colors: String
  compatible_phones: Int
  """An array of linked simple product items"""
  configurable_options: [ConfigurableProductOptions]
  """Metadata for the specified configurable options selection"""
  configurable_product_options_selection(configurableOptionValueUids: [ID!]): ConfigurableProductOptionsSelection
  """The product's country of origin."""
  country_of_manufacture: String
  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Crosssell Products"""
  crosssell_products: [ProductInterface]
  """Detailed information about the product. The value can include simple HTML tags."""
  description: ComplexTextValue
  dominant_color: Int
  eco_collection: Int
  erin_recommends: Int
  features_bags: String
  format: Int
  gender: String
  """Indicates whether a gift message is available."""
  gift_message_available: String
  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")
  """The relative path to the main image on the product page."""
  image: ProductImage
  in_stock_delivery_period: Int
  """A number representing the product's manufacturer."""
  manufacturer: Int
  material: Int
  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]
  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")
  """A brief overview of the product for search results listings, maximum 255 characters."""
  meta_description: String
  """A comma-separated list of keywords that are visible only to search engines."""
  meta_keyword: String
  """A string that is displayed in the title bar and tab of the browser and in search results lists."""
  meta_title: String
  """The product name. Customers use this name to identify the product."""
  name: String
  new: Int
  """The beginning date for new product listings, and determines if the product is featured as a new product."""
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """Product stock only x left count"""
  only_x_left_in_stock: Float
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
  """If the product has multiple options, determines where they appear on the product page."""
  options_container: String
  pattern: String
  performance_fabric: Int
  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")
  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!
  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  print_art: String
  print_holiday: String
  print_labels: String
  print_landmarks: String
  print_landscape: String
  print_mood: String
  print_pattern_swatch: Int
  print_type: String
  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  """The average of all the ratings given to the product."""
  rating_summary: Float!
  """Related Products"""
  related_products: [ProductInterface]
  """The total count of all the reviews given to the product."""
  review_count: Int!
  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20
    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!
  sale: Int
  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  size: Int
  """A number or code assigned to a product to identify the product, options, price, and manufacturer."""
  sku: String
  sleeve: String
  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage
  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")
  """The discounted price of the product."""
  special_price: Float
  """The end date that a product has a special price."""
  special_to_date: String
  """Stock status of the product"""
  stock_status: ProductStockStatus
  strap_bags: String
  style_bags: String
  style_bottom: String
  style_general: String
  """The file name of a swatch image"""
  swatch_image: String
  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage
  """The price when tier pricing is in effect and the items purchased threshold has been reached."""
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")
  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")
  """One of simple, virtual, bundle, downloadable, grouped, or configurable."""
  type_id: String @deprecated(reason: "Use __typename instead.")
  """The unique ID for a `ProductInterface` object."""
  uid: ID!
  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")
  """Upsell Products"""
  upsell_products: [ProductInterface]
  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")
  """URL rewrites list"""
  url_rewrites: [UrlRewrite]
  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  """An array of variants of products"""
  variants: [ConfigurableVariant]
  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""ConfigurableProductOptions defines configurable attributes for the specified product"""
type ConfigurableProductOptions {
  """A string that identifies the attribute"""
  attribute_code: String
  """The ID assigned to the attribute"""
  attribute_id: String @deprecated(reason: "Use attribute_uid instead")
  """The ID assigned to the attribute"""
  attribute_id_v2: Int @deprecated(reason: "Use attribute_uid instead")
  """The unique ID for a `Attribute` object"""
  attribute_uid: ID!
  """The configurable option ID number assigned by the system"""
  id: Int @deprecated(reason: "Use uid instead")
  """A string that describes the configurable product option, which is displayed on the UI"""
  label: String
  """A number that indicates the order in which the attribute is displayed"""
  position: Int
  """This is the same as a product's id field"""
  product_id: Int @deprecated(reason: "`product_id` is not needed and can be obtained from it's parent")
  """The unique ID for a `ConfigurableProductOptions` object"""
  uid: ID!
  """Indicates whether the option is the default"""
  use_default: Boolean
  """An array that defines the value_index codes assigned to the configurable product"""
  values: [ConfigurableProductOptionsValues]
}

"""ConfigurableProductOptionsValues contains the index number assigned to a configurable product option"""
type ConfigurableProductOptionsValues {
  """The label of the product on the default store"""
  default_label: String
  """The label of the product"""
  label: String
  """The label of the product on the current store"""
  store_label: String
  """Swatch data for configurable product option"""
  swatch_data: SwatchDataInterface
  """The unique ID for a `ConfigurableProductOptionsValues` object"""
  uid: ID
  """Indicates whether to use the default_label"""
  use_default_value: Boolean
  """A unique index number assigned to the configurable product option"""
  value_index: Int @deprecated(reason: "Use `uid` instead")
}

interface SwatchDataInterface {
  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

"""Metadata corresponding to the configurable options selection."""
type ConfigurableProductOptionsSelection {
  """Product images and videos corresponding to the specified configurable options selection."""
  media_gallery: [MediaGalleryInterface]
  """Configurable options available for further selection based on current selection."""
  options_available_for_selection: [ConfigurableOptionAvailableForSelection]
  """Variant represented by the specified configurable options selection. It is expected to be null, until selections are made for each configurable option."""
  variant: SimpleProduct
}

"""Configurable option available for further selection based on current selection."""
type ConfigurableOptionAvailableForSelection {
  """Attribute code that uniquely identifies configurable option."""
  attribute_code: String!
  """Configurable option values available for further selection."""
  option_value_uids: [ID]!
}

"""An array containing all the simple product variants of a configurable product"""
type ConfigurableVariant {
  attributes: [ConfigurableAttributeOption]
  product: SimpleProduct
}

"""ConfigurableAttributeOption contains the value_index (and other related information) assigned to a configurable product option"""
type ConfigurableAttributeOption {
  """The ID assigned to the attribute"""
  code: String
  """A string that describes the configurable attribute option"""
  label: String
  """The unique ID for a `ConfigurableAttributeOption` object"""
  uid: ID!
  """A unique index number assigned to the configurable product option"""
  value_index: Int
}

"""A configurable product wish list item"""
type ConfigurableWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!
  """The SKU of the simple product corresponding to a set of selected configurable options"""
  child_sku: String!
  """An array of selected configurable options"""
  configurable_options: [SelectedConfigurableOption]
  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!
  """The description of the item"""
  description: String
  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!
  """Product details of the wish list item"""
  product: ProductInterface
  """The quantity of this wish list item"""
  quantity: Float!
}

type OrderItem implements OrderItemInterface {
  """The final discount information for the product"""
  discounts: [Discount]
  """The entered option for the base product, such as a logo or image"""
  entered_options: [OrderItemOption]
  """The unique ID for a `OrderItemInterface` object"""
  id: ID!
  """The name of the base product"""
  product_name: String
  """The sale price of the base product, including selected options"""
  product_sale_price: Money!
  """The SKU of the base product"""
  product_sku: String!
  """The type of product, such as simple, configurable, etc."""
  product_type: String
  """URL key of the base product"""
  product_url_key: String
  """The number of canceled items"""
  quantity_canceled: Float
  """The number of invoiced items"""
  quantity_invoiced: Float
  """The number of units ordered for this item"""
  quantity_ordered: Float
  """The number of refunded items"""
  quantity_refunded: Float
  """The number of returned items"""
  quantity_returned: Float
  """The number of shipped items"""
  quantity_shipped: Float
  """The selected options for the base product, such as color or size"""
  selected_options: [OrderItemOption]
  """The status of the order item"""
  status: String
}

type InvoiceItem implements InvoiceItemInterface {
  """Contains information about the final discount amount for the base product, including discounts on options"""
  discounts: [Discount]
  """The unique ID for a `InvoiceItemInterface` object"""
  id: ID!
  """Contains details about an individual order item"""
  order_item: OrderItemInterface
  """The name of the base product"""
  product_name: String
  """The sale price for the base product including selected options"""
  product_sale_price: Money!
  """The SKU of the base product"""
  product_sku: String!
  """The number of invoiced items"""
  quantity_invoiced: Float
}

type ShipmentItem implements ShipmentItemInterface {
  """The unique ID for a `ShipmentItemInterface` object"""
  id: ID!
  """Associated order item"""
  order_item: OrderItemInterface
  """Name of the base product"""
  product_name: String
  """Sale price for the base product"""
  product_sale_price: Money!
  """SKU of the base product"""
  product_sku: String!
  """Number of shipped items"""
  quantity_shipped: Float!
}

type CreditMemoItem implements CreditMemoItemInterface {
  """Contains information about the final discount amount for the base product, including discounts on options"""
  discounts: [Discount]
  """The unique ID for a `CreditMemoItemInterface` object"""
  id: ID!
  """The order item the credit memo is applied to"""
  order_item: OrderItemInterface
  """The name of the base product"""
  product_name: String
  """The sale price for the base product, including selected options"""
  product_sale_price: Money!
  """SKU of the base product"""
  product_sku: String!
  """The number of refunded items"""
  quantity_refunded: Float
}

interface SwatchLayerFilterItemInterface {
  """Data required to render swatch filter item"""
  swatch_data: SwatchData
}

type SwatchData {
  """Type of swatch filter item: 1 - text, 2 - image"""
  type: String
  """Value for swatch item (text or image link)"""
  value: String
}

type SwatchLayerFilterItem implements LayerFilterItemInterface & SwatchLayerFilterItemInterface {
  """Count of items by filter."""
  items_count: Int @deprecated(reason: "Use AggregationOption.count instead.")
  """Filter label."""
  label: String @deprecated(reason: "Use AggregationOption.label instead.")
  """Data required to render swatch filter item"""
  swatch_data: SwatchData
  """Value for filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use AggregationOption.value instead.")
}

type ImageSwatchData implements SwatchDataInterface {
  """Thumbnail swatch image URL"""
  thumbnail: String
  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

type TextSwatchData implements SwatchDataInterface {
  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

type ColorSwatchData implements SwatchDataInterface {
  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}
